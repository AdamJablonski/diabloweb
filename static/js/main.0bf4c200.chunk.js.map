{"version":3,"sources":["fs.js","api/game.worker.js","mpqcmp/mpqcmp.worker.js","../node_modules/peerjs/dist sync","serviceWorker.js","api/explode.js","api/codec.js","api/savefile.js","api/sound.js","api/load_spawn.js","api/packet.js","api/webrtc.js","api/loader.js","mpqcmp/index.js","mpqcmp/compress.js","App.js","index.js"],"names":["downloadFile","_callee","store","name","file","blob","url","lnk","C_Projects_diabloweb_diabloweb_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default","a","wrap","_context","prev","next","get","toLowerCase","sent","Blob","type","URL","createObjectURL","document","createElement","setAttribute","body","appendChild","click","removeChild","revokeObjectURL","console","error","concat","stop","downloadSaves","_callee2","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_iterator","_step","_context2","undefined","keys","t0","Symbol","iterator","done","value","match","t1","return","finish","readFile","Promise","resolve","reject","reader","FileReader","onload","result","onerror","onabort","readAsArrayBuffer","uploadFile","_callee3","files","data","_context3","Uint8Array","set","abrupt","create_fs","_x7","_create_fs","apply","this","arguments","_callee5","load","_i","_Object$entries","_ref3","_ref2","_context5","IdbKvStore","Map","Object","json","entries","call","length","C_Projects_diabloweb_diabloweb_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","window","DownloadFile","DownloadSaves","update","delete","remove","clear","download","upload","fileUrl","_fileUrl","C_Projects_diabloweb_diabloweb_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__","mark","_callee4","_context4","_x8","t2","module","exports","Worker","__webpack_require__","p","webpackEmptyContext","req","e","Error","code","id","isLocalhost","Boolean","location","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","log","onUpdate","onSuccess","catch","CMP_BINARY","CMP_ASCII","CMP_NO_ERROR","CMP_INVALID_DICTSIZE","CMP_INVALID_MODE","CMP_BAD_DATA","CMP_ABORT","PKDCL_OK","PKDCL_STREAM_END","DistBits","DistCode","ExLenBits","LenBase","Uint16Array","LenBits","LenCode","ChBitsAsc","ChCodeAsc","GenDecodeTabs","positions","start_indexes","length_bits","elements","i","index","WasteBits","pWork","nBits","extra_bits","bit_buff","in_pos","in_bytes","read_buf","in_buff","DecodeLit","length_code","LengthCodes","extra_length_bits","extra_length","ctype","uncompressed_byte","offs2C34","offs2D34","offs2E34","offs2EB4","DecodeDist","rep_length","distance","dist_pos_code","DistPosCodes","dsize_bits","dsize_mask","explode","write_buf","buffer","ArrayBuffer","out_buff","pChCodeAsc","count","bits_asc","acc","add","GenAscTabs","next_literal","outputPos","minus_dist","target","source","subarray","copyWithin","Expand","W","Uint32Array","SHA1CircularShift","shift","SHA1","classCallCheck","digest","digest8","u8","u32","byteOffset","input","A","B","C","D","E","temp","Random","seed","codec_decode","password","size","last_size","sha","rand","key","k32","pw","charCodeAt","input8","codec_init_key","size32","data32","buf32","buf","j","pkzip_decompress","out_size","output","out_pos","dst","Math","min","src","hashtable","b","decrypt","decrypt8","hash","seed1","seed2","ch","path_name","pos","max","lastIndexOf","substring","Flags","MpqReader","byteLength","readHeader","createClass","sizeId","hashOffset","blockOffset","hashCount","blockCount","hashTable","readTable","blockTable","blockSize","offset","slice","keyA","keyB","fileIndex","block","info","filePos","cmpSize","fileSize","flags","raw","readRaw","numBlocks","floor","tableSize","blocks","oPos","uSize","tmp","init_sound","AudioContext","webkitAudioContext","StereoPannerNode","create_sound","duplicate_sound","play_sound","set_volume","stop_sound","delete_sound","context","sounds","create_sound_raw","channels","rate","createBuffer","getChannelData","gain","createGain","panner","pan","decodeAudioData","srcId","volume","loop","pow","relVolume","createBufferSource","node","connect","destination","start","stop_all","sound","slicedToArray","err","SpawnSizes","load_spawn","_x","_x2","_load_spawn","api","fs","spawn","regenerator_default","includes","axios","request","process","responseType","onDownloadProgress","onProgress","text","loaded","total","headers","Cache-Control","buffer_reader","read8","String","fromCharCode","toConsumableArray","read32","buffer_writer","write8","write32","rest","RejectionReason","JOIN_SUCCESS","JOIN_ALREADY_IN_GAME","JOIN_GAME_NOT_FOUND","JOIN_INCORRECT_PASSWORD","JOIN_VERSION_MISMATCH","JOIN_GAME_FULL","CREATE_GAME_EXISTS","read_packet","types","cls","values","find","packet","read","packet_size","write_packet","write","make_batch","read16","packets","push","reduce","sum","_ref","writer","write16","server_packet","version","_ref4","game_list","games","read_str","_ref5","_ref6","_ref7","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","_ref9","write_str","join_accept","cookie","difficulty","_ref10","join_reject","reason","_ref11","_ref12","disconnect","_ref13","message","payload","_ref14","_ref15","turn","_ref16","batch","client_packet","_ref17","create_game","_ref18","_ref19","join_game","_ref20","_ref21","leave_game","drop_player","_ref22","_ref23","_ref24","_ref25","PeerID","Options","host","port","secure","webrtc_server","onMessage","onClose","_this","peer","Peer","on","conn","onConnect","players","myplr","random","onError","off","onOpen","setTimeout","_this2","_read_packet","pkt","send","handle","drop","mask","destroy","close","webrtc_client","_this3","pending","needUnreg","unreg","clearTimeout","timeout","_read_packet2","webrtc_open","server","client","_read_packet3","onRender","ctx","bitmap","images","clip","belt","transferFromImageBitmap","x","y","w","h","image","createImageData","putImageData","save","font","x0","y0","x1","y1","beginPath","rect","str","color","r","g","fillStyle","fillText","restore","updateBelt","audio","mpq","offscreen","canvas","getContext","alpha","worker","packetQueue","webrtc","addEventListener","action","func","_len","params","Array","_key","postMessage","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","_ref8","setCursorPos","openKeyboard","stack","onExit","setCurrentSave","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","transfer","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","setInterval","load_game","do_load_game","CompressMpq","parseFile","onDone","setState","props","compress","progress","started","_this$state","react_default","className","href","onClick","style","width","round","htmlFor","accept","display","onChange","React","Component","reportLink","retail","searchParams","split","map","line","join","userAgent","toString","ReactGA","initialize","pageview","TOUCH_MOVE","TOUCH_RMB","keyboardRule","styleSheets","sheet","cssRules","rule","CSSRule","MEDIA_RULE","conditionText","sub","selectorText","findKeyboardRule","Link","children","objectWithoutProperties","assign","rel","App","possibleConstructorReturn","getPrototypeOf","loading","dropping","has_spawn","cursorPos","touchControls","touchButtons","touchCtx","touchMods","touchBelt","maxKeyboard","onDrop","dataTransfer","items","kind","getAsFile","getDropFile","preventDefault","compressMpq","onDragEnter","setDropping","onDragOver","isDropFile","onDragLeave","showSaves","save_names","updateSaves","show_saves","onResize","exitPointerLock","onPointerLockChange","screen","innerHeight","height","pointerLocked","game","onMouseMove","_this$mousePos","mousePos","eventMods","onMouseDown","keyboard","element","classList","_this$mousePos2","requestPointerLock","mouseButton","onMouseUp","_this$mousePos3","onKeyDown","keyCode","showKeyboard","clearKeySel","onMenu","onKeyUp","onKeyboard","onKeyboardInner","onKeyboardBlur","parseSave","touchButton","touchCanvas","onTouchStart","blur","updateTouchButton","touches","_this$mousePos4","onTouchMove","_this$mousePos5","onTouchEnd","prevTc","_this$mousePos6","setTouchMod","fullscreenElement","requestFullscreen","setCanvas","setElement","setKeyboard","setTouch0","setTouch_","bind","assertThisInitialized","setTouch1","setTouch2","setTouch3","setTouchBelt_","setTouch4","setTouch5","filter","inc","asyncToGenerator","errorObject","saveName","mapStackTrace","objectSpread","left","toFixed","top","focus","transform","keyboardNum","_this4","getBoundingClientRect","right","bottom","reload","_this5","saves","forEach","hero","getPassword","nameEnd","indexOf","level","getPlayerName","_this6","confirm","idx","slot","drawImage","used","Set","has","drawBelt","_this7","removeEventListener","event","category","passive","capture","alert","pointerLockElement","mozPointerLockElement","movementX","movementY","clientX","clientY","button","shiftKey","ctrlKey","altKey","len","setSelectionRange","valid","maxValue","parseInt","use","toggle","now","performance","beltTime","release","_this8","touchOther","btn","_loop","identifier","stick","t","panPos","v","original","_ret","dx","dy","step","offsetHeight","abs","_this9","plrClass","index_es","icon","faDownload","downloadSave","faTimes","removeSave","mpqcmp_CompressMpq","ref","App_Link","_this$state2","classNames","touch","active","onBlur","spellCheck","renderUi","ReactDOM","render","src_App_0","getElementById","origin","fetch","response","contentType","status","ready","unregister","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.0bf4c200.chunk.js","sourcesContent":["import IdbKvStore from  'idb-kv-store';\r\n\r\n/*const importStorage = () => new Promise((resolve, reject) => {\r\n  let done = false;\r\n  const frame = document.createElement('iframe');\r\n  window.addEventListener('message', ({data}) => {\r\n    if (data.method === 'storage' && !done) {\r\n      done = true;\r\n      resolve(data.files);\r\n      frame.contentWindow.postMessage({method: 'clear'}, '*');\r\n    }\r\n  });\r\n  frame.addEventListener('load', () => {\r\n    frame.contentWindow.postMessage({method: 'transfer'}, '*');\r\n  });\r\n  frame.addEventListener('error', () => {\r\n    if (!done) {\r\n      done = true;\r\n      resolve(null);\r\n    }\r\n  });\r\n  frame.src = \"https://diablo.rivsoft.net/storage.html\";\r\n  frame.style.display = \"none\";\r\n  document.body.appendChild(frame);\r\n  setTimeout(() => {\r\n    if (!done) {\r\n      done = true;\r\n      resolve(null);\r\n    }\r\n  }, 10000);\r\n});*/\r\n\r\nasync function downloadFile(store, name) {\r\n  const file = await store.get(name.toLowerCase());\r\n  if (file) {\r\n    const blob = new Blob([file], {type: 'binary/octet-stream'});\r\n    const url = URL.createObjectURL(blob);\r\n    const lnk = document.createElement('a');\r\n    lnk.setAttribute('href', url);\r\n    lnk.setAttribute('download', name);\r\n    document.body.appendChild(lnk);\r\n    lnk.click();\r\n    document.body.removeChild(lnk);\r\n    URL.revokeObjectURL(url);\r\n  } else {\r\n    console.error(`File ${name} does not exist`);\r\n  }\r\n}\r\n\r\nasync function downloadSaves(store) {\r\n  for (let name of await store.keys()) {\r\n    if (name.match(/\\.sv$/i)) {\r\n      downloadFile(store, name);\r\n    }\r\n  }\r\n}\r\n\r\nconst readFile = file => new Promise((resolve, reject) => {\r\n  const reader = new FileReader();\r\n  reader.onload = () => resolve(reader.result);\r\n  reader.onerror = () => reject(reader.error);\r\n  reader.onabort = () => reject();\r\n  reader.readAsArrayBuffer(file);\r\n});\r\nasync function uploadFile(store, files, file) {\r\n  const data = new Uint8Array(await readFile(file));\r\n  files.set(file.name.toLowerCase(), data);\r\n  return store.set(file.name.toLowerCase(), data);\r\n}\r\n\r\nexport default async function create_fs(load) {\r\n  try {\r\n    const store = new IdbKvStore('diablo_fs');\r\n    const files = new Map();\r\n    for (let [name, data] of Object.entries(await store.json())) {\r\n      files.set(name, data);\r\n    }\r\n    /*if (load) {\r\n      const files = await importStorage();\r\n      if (files) {\r\n        for (let [name, data] of files) {\r\n          files.set(name, data);\r\n          store.set(name, data);\r\n        }\r\n      }\r\n    }*/\r\n    window.DownloadFile = name => downloadFile(store, name);\r\n    window.DownloadSaves = () => downloadSaves(store);\r\n    return {\r\n      files,\r\n      update: (name, data) => store.set(name, data),\r\n      delete: name => store.remove(name),\r\n      clear: () => store.clear(),\r\n      download: name => downloadFile(store, name),\r\n      upload: file => uploadFile(store, files, file),\r\n      fileUrl: async name => {\r\n        const file = await store.get(name.toLowerCase());\r\n        if (file) {\r\n          const blob = new Blob([file], {type: 'binary/octet-stream'});\r\n          return URL.createObjectURL(blob);\r\n        }\r\n      },\r\n    };\r\n  } catch (e) {\r\n    window.DownloadFile = () => console.error('IndexedDB is not supported');\r\n    window.DownloadSaves = () => console.error('IndexedDB is not supported');\r\n    return {\r\n      files: new Map(),\r\n      update: () => Promise.resolve(),\r\n      delete: () => Promise.resolve(),\r\n      clear: () => Promise.resolve(),\r\n      download: () => Promise.resolve(),\r\n      upload: () => Promise.resolve(),\r\n      fileUrl: () => Promise.resolve(),\r\n    };\r\n  }  \r\n}\r\n","module.exports = function() {\n  return new Worker(__webpack_public_path__ + \"9301ff00ac8362294d26.worker.js\");\n};","module.exports = function() {\n  return new Worker(__webpack_public_path__ + \"51637d275e8a56ec5b42.worker.js\");\n};","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 70;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","export const CMP_BINARY = 0; // Binary compression\r\nexport const CMP_ASCII = 1; // Ascii compression\r\nexport const CMP_NO_ERROR = 0;\r\nexport const CMP_INVALID_DICTSIZE = 1;\r\nexport const CMP_INVALID_MODE = 2;\r\nexport const CMP_BAD_DATA = 3;\r\nexport const CMP_ABORT = 4;\r\nexport const CMP_IMPLODE_DICT_SIZE1 = 1024; // Dictionary size of 1024\r\nexport const CMP_IMPLODE_DICT_SIZE2 = 2048; // Dictionary size of 2048\r\nexport const CMP_IMPLODE_DICT_SIZE3 = 4096; // Dictionary size of 4096\r\n\r\nexport const PKDCL_OK = 0;\r\nexport const PKDCL_STREAM_END = 1; // All data from the input stream is read\r\nexport const PKDCL_NEED_DICT = 2; // Need more data (dictionary)\r\nexport const PKDCL_CONTINUE = 10; // Internal flag, not returned to user\r\nexport const PKDCL_GET_INPUT = 11; // Internal flag, not returned to user\r\n\r\nconst DistBits = new Uint8Array([\r\n  0x02, 0x04, 0x04, 0x05, 0x05, 0x05, 0x05, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06,\r\n  0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07,\r\n  0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07,\r\n  0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08\r\n]);\r\n\r\nconst DistCode = new Uint8Array([\r\n  0x03, 0x0D, 0x05, 0x19, 0x09, 0x11, 0x01, 0x3E, 0x1E, 0x2E, 0x0E, 0x36, 0x16, 0x26, 0x06, 0x3A,\r\n  0x1A, 0x2A, 0x0A, 0x32, 0x12, 0x22, 0x42, 0x02, 0x7C, 0x3C, 0x5C, 0x1C, 0x6C, 0x2C, 0x4C, 0x0C,\r\n  0x74, 0x34, 0x54, 0x14, 0x64, 0x24, 0x44, 0x04, 0x78, 0x38, 0x58, 0x18, 0x68, 0x28, 0x48, 0x08,\r\n  0xF0, 0x70, 0xB0, 0x30, 0xD0, 0x50, 0x90, 0x10, 0xE0, 0x60, 0xA0, 0x20, 0xC0, 0x40, 0x80, 0x00\r\n]);\r\n\r\nconst ExLenBits = new Uint8Array([\r\n  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08\r\n]);\r\n\r\nconst LenBase = new Uint16Array([\r\n  0x0000, 0x0001, 0x0002, 0x0003, 0x0004, 0x0005, 0x0006, 0x0007,\r\n  0x0008, 0x000A, 0x000E, 0x0016, 0x0026, 0x0046, 0x0086, 0x0106\r\n]);\r\n\r\nconst LenBits = new Uint8Array([\r\n  0x03, 0x02, 0x03, 0x03, 0x04, 0x04, 0x04, 0x05, 0x05, 0x05, 0x05, 0x06, 0x06, 0x06, 0x07, 0x07\r\n]);\r\n\r\nconst LenCode = new Uint8Array([\r\n  0x05, 0x03, 0x01, 0x06, 0x0A, 0x02, 0x0C, 0x14, 0x04, 0x18, 0x08, 0x30, 0x10, 0x20, 0x40, 0x00\r\n]);\r\n\r\nconst ChBitsAsc = new Uint8Array([\r\n  0x0B, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x08, 0x07, 0x0C, 0x0C, 0x07, 0x0C, 0x0C,\r\n  0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0D, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C,\r\n  0x04, 0x0A, 0x08, 0x0C, 0x0A, 0x0C, 0x0A, 0x08, 0x07, 0x07, 0x08, 0x09, 0x07, 0x06, 0x07, 0x08,\r\n  0x07, 0x06, 0x07, 0x07, 0x07, 0x07, 0x08, 0x07, 0x07, 0x08, 0x08, 0x0C, 0x0B, 0x07, 0x09, 0x0B,\r\n  0x0C, 0x06, 0x07, 0x06, 0x06, 0x05, 0x07, 0x08, 0x08, 0x06, 0x0B, 0x09, 0x06, 0x07, 0x06, 0x06,\r\n  0x07, 0x0B, 0x06, 0x06, 0x06, 0x07, 0x09, 0x08, 0x09, 0x09, 0x0B, 0x08, 0x0B, 0x09, 0x0C, 0x08,\r\n  0x0C, 0x05, 0x06, 0x06, 0x06, 0x05, 0x06, 0x06, 0x06, 0x05, 0x0B, 0x07, 0x05, 0x06, 0x05, 0x05,\r\n  0x06, 0x0A, 0x05, 0x05, 0x05, 0x05, 0x08, 0x07, 0x08, 0x08, 0x0A, 0x0B, 0x0B, 0x0C, 0x0C, 0x0C,\r\n  0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D,\r\n  0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D,\r\n  0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D,\r\n  0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C,\r\n  0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C,\r\n  0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C,\r\n  0x0D, 0x0C, 0x0D, 0x0D, 0x0D, 0x0C, 0x0D, 0x0D, 0x0D, 0x0C, 0x0D, 0x0D, 0x0D, 0x0D, 0x0C, 0x0D,\r\n  0x0D, 0x0D, 0x0C, 0x0C, 0x0C, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D\r\n]);\r\n\r\nconst ChCodeAsc = new Uint16Array([\r\n  0x0490, 0x0FE0, 0x07E0, 0x0BE0, 0x03E0, 0x0DE0, 0x05E0, 0x09E0,\r\n  0x01E0, 0x00B8, 0x0062, 0x0EE0, 0x06E0, 0x0022, 0x0AE0, 0x02E0,\r\n  0x0CE0, 0x04E0, 0x08E0, 0x00E0, 0x0F60, 0x0760, 0x0B60, 0x0360,\r\n  0x0D60, 0x0560, 0x1240, 0x0960, 0x0160, 0x0E60, 0x0660, 0x0A60,\r\n  0x000F, 0x0250, 0x0038, 0x0260, 0x0050, 0x0C60, 0x0390, 0x00D8,\r\n  0x0042, 0x0002, 0x0058, 0x01B0, 0x007C, 0x0029, 0x003C, 0x0098,\r\n  0x005C, 0x0009, 0x001C, 0x006C, 0x002C, 0x004C, 0x0018, 0x000C,\r\n  0x0074, 0x00E8, 0x0068, 0x0460, 0x0090, 0x0034, 0x00B0, 0x0710,\r\n  0x0860, 0x0031, 0x0054, 0x0011, 0x0021, 0x0017, 0x0014, 0x00A8,\r\n  0x0028, 0x0001, 0x0310, 0x0130, 0x003E, 0x0064, 0x001E, 0x002E,\r\n  0x0024, 0x0510, 0x000E, 0x0036, 0x0016, 0x0044, 0x0030, 0x00C8,\r\n  0x01D0, 0x00D0, 0x0110, 0x0048, 0x0610, 0x0150, 0x0060, 0x0088,\r\n  0x0FA0, 0x0007, 0x0026, 0x0006, 0x003A, 0x001B, 0x001A, 0x002A,\r\n  0x000A, 0x000B, 0x0210, 0x0004, 0x0013, 0x0032, 0x0003, 0x001D,\r\n  0x0012, 0x0190, 0x000D, 0x0015, 0x0005, 0x0019, 0x0008, 0x0078,\r\n  0x00F0, 0x0070, 0x0290, 0x0410, 0x0010, 0x07A0, 0x0BA0, 0x03A0,\r\n  0x0240, 0x1C40, 0x0C40, 0x1440, 0x0440, 0x1840, 0x0840, 0x1040,\r\n  0x0040, 0x1F80, 0x0F80, 0x1780, 0x0780, 0x1B80, 0x0B80, 0x1380,\r\n  0x0380, 0x1D80, 0x0D80, 0x1580, 0x0580, 0x1980, 0x0980, 0x1180,\r\n  0x0180, 0x1E80, 0x0E80, 0x1680, 0x0680, 0x1A80, 0x0A80, 0x1280,\r\n  0x0280, 0x1C80, 0x0C80, 0x1480, 0x0480, 0x1880, 0x0880, 0x1080,\r\n  0x0080, 0x1F00, 0x0F00, 0x1700, 0x0700, 0x1B00, 0x0B00, 0x1300,\r\n  0x0DA0, 0x05A0, 0x09A0, 0x01A0, 0x0EA0, 0x06A0, 0x0AA0, 0x02A0,\r\n  0x0CA0, 0x04A0, 0x08A0, 0x00A0, 0x0F20, 0x0720, 0x0B20, 0x0320,\r\n  0x0D20, 0x0520, 0x0920, 0x0120, 0x0E20, 0x0620, 0x0A20, 0x0220,\r\n  0x0C20, 0x0420, 0x0820, 0x0020, 0x0FC0, 0x07C0, 0x0BC0, 0x03C0,\r\n  0x0DC0, 0x05C0, 0x09C0, 0x01C0, 0x0EC0, 0x06C0, 0x0AC0, 0x02C0,\r\n  0x0CC0, 0x04C0, 0x08C0, 0x00C0, 0x0F40, 0x0740, 0x0B40, 0x0340,\r\n  0x0300, 0x0D40, 0x1D00, 0x0D00, 0x1500, 0x0540, 0x0500, 0x1900,\r\n  0x0900, 0x0940, 0x1100, 0x0100, 0x1E00, 0x0E00, 0x0140, 0x1600,\r\n  0x0600, 0x1A00, 0x0E40, 0x0640, 0x0A40, 0x0A00, 0x1200, 0x0200,\r\n  0x1C00, 0x0C00, 0x1400, 0x0400, 0x1800, 0x0800, 0x1000, 0x0000  \r\n]);\r\n\r\n/**\r\n * @param {Uint8Array} positions [out] Table of positions\r\n * @param {Uint8Array} start_indexes Table of start indexes\r\n * @param {Uint8Array} length_bits Table of lengths. Each length is stored as number of bits\r\n * @param {number} elements Number of elements in start_indexes and length_bits\r\n */\r\nfunction GenDecodeTabs(positions, start_indexes, length_bits, elements) {\r\n  for (let i = 0; i < elements; i++) {\r\n    const length = 1 << length_bits[i];   // Get the length in bytes\r\n    for (let index = start_indexes[i]; index < 0x100; index += length) {\r\n      positions[index] = i;\r\n    }\r\n  }\r\n}\r\n\r\nfunction GenAscTabs(pWork) {\r\n  let pChCodeAsc = 0xFF;\r\n\r\n  for (let count = 0x00FF; pChCodeAsc >= 0; pChCodeAsc--, count--) {\r\n    let bits_asc = pWork.ChBitsAsc[count];\r\n    let acc;\r\n\r\n    if (bits_asc <= 8) {\r\n      const add = (1 << bits_asc);\r\n      acc = ChCodeAsc[pChCodeAsc];\r\n\r\n      do {\r\n        pWork.offs2C34[acc] = count;\r\n        acc += add;\r\n      } while(acc < 0x100);\r\n    } else if ((acc = (ChCodeAsc[pChCodeAsc] & 0xFF)) !== 0) {\r\n      pWork.offs2C34[acc] = 0xFF;\r\n\r\n      if (ChCodeAsc[pChCodeAsc] & 0x3F) {\r\n        bits_asc -= 4;\r\n        pWork.ChBitsAsc[count] = bits_asc;\r\n\r\n        const add = (1 << bits_asc);\r\n        acc = ChCodeAsc[pChCodeAsc] >> 4;\r\n        do {\r\n          pWork.offs2D34[acc] = count;\r\n          acc += add;\r\n        } while(acc < 0x100);\r\n      } else {\r\n        bits_asc -= 6;\r\n        pWork.ChBitsAsc[count] = bits_asc;\r\n\r\n        const add = (1 << bits_asc);\r\n        acc = ChCodeAsc[pChCodeAsc] >> 6;\r\n        do {\r\n          pWork.offs2E34[acc] = count;\r\n          acc += add;\r\n        } while(acc < 0x80);\r\n      }\r\n    } else {\r\n      bits_asc -= 8;\r\n      pWork.ChBitsAsc[count] = bits_asc;\r\n\r\n      const add = (1 << bits_asc);\r\n      acc = ChCodeAsc[pChCodeAsc] >> 8;\r\n      do {\r\n        pWork.offs2EB4[acc] = count;\r\n        acc += add;\r\n      } while(acc < 0x100);\r\n    }\r\n  }\r\n}\r\n\r\n//-----------------------------------------------------------------------------\r\n// Removes given number of bits in the bit buffer. New bits are reloaded from\r\n// the input buffer, if needed.\r\n// Returns: PKDCL_OK:         Operation was successful\r\n//          PKDCL_STREAM_END: There are no more bits in the input buffer\r\nfunction WasteBits(pWork, nBits) {\r\n  // If number of bits required is less than number of (bits in the buffer) ?\r\n  if (nBits <= pWork.extra_bits) {\r\n    pWork.extra_bits -= nBits;\r\n    pWork.bit_buff >>>= nBits;\r\n    return PKDCL_OK;\r\n  }\r\n\r\n  // Load input buffer if necessary\r\n  pWork.bit_buff >>= pWork.extra_bits;\r\n  if (pWork.in_pos === pWork.in_bytes) {\r\n    if ((pWork.in_bytes = pWork.read_buf(pWork.in_buff)) === 0) {\r\n      return PKDCL_STREAM_END;\r\n    }\r\n    pWork.in_pos = 0;\r\n  }\r\n\r\n  // Update bit buffer\r\n  pWork.bit_buff |= (pWork.in_buff[pWork.in_pos++] << 8);\r\n  pWork.bit_buff >>>= (nBits - pWork.extra_bits);\r\n  pWork.extra_bits = (pWork.extra_bits - nBits) + 8;\r\n  return PKDCL_OK;\r\n}\r\n\r\n//-----------------------------------------------------------------------------\r\n// Decodes next literal from the input (compressed) data.\r\n// Returns : 0x000: One byte 0x00\r\n//           0x001: One byte 0x01\r\n//           ...\r\n//           0x0FF: One byte 0xFF\r\n//           0x100: Repetition, length of 0x02 bytes\r\n//           0x101: Repetition, length of 0x03 bytes\r\n//           ...\r\n//           0x304: Repetition, length of 0x206 bytes\r\n//           0x305: End of stream\r\n//           0x306: Error\r\nfunction DecodeLit(pWork) {\r\n  if(pWork.bit_buff & 1) {\r\n    // Remove one bit from the input data\r\n    if(WasteBits(pWork, 1)) {\r\n      return 0x306;\r\n    }\r\n\r\n    // The next 8 bits hold the index to the length code table\r\n    let length_code = pWork.LengthCodes[pWork.bit_buff & 0xFF];\r\n\r\n    // Remove the apropriate number of bits\r\n    if(WasteBits(pWork, pWork.LenBits[length_code])) {\r\n      return 0x306;\r\n    }\r\n\r\n    // Are there some extra bits for the obtained length code ?\r\n    const extra_length_bits = pWork.ExLenBits[length_code];\r\n    if(extra_length_bits !== 0) {\r\n      const extra_length = pWork.bit_buff & ((1 << extra_length_bits) - 1);\r\n      if(WasteBits(pWork, extra_length_bits)) {\r\n        if((length_code + extra_length) != 0x10E) {\r\n          return 0x306;\r\n        }\r\n      }\r\n      length_code = pWork.LenBase[length_code] + extra_length;\r\n    }\r\n\r\n    // In order to distinguish uncompressed byte from repetition length,\r\n    // we have to add 0x100 to the length.\r\n    return length_code + 0x100;\r\n  }\r\n\r\n  // Remove one bit from the input data\r\n  if(WasteBits(pWork, 1)) {\r\n    return 0x306;\r\n  }\r\n\r\n  // If the binary compression type, read 8 bits and return them as one byte.\r\n  if(pWork.ctype === CMP_BINARY) {\r\n    const uncompressed_byte = pWork.bit_buff & 0xFF;\r\n\r\n    if(WasteBits(pWork, 8)) {\r\n      return 0x306;\r\n    }\r\n    return uncompressed_byte;\r\n  }\r\n\r\n  // When ASCII compression ...\r\n  let value;\r\n  if (pWork.bit_buff & 0xFF) {\r\n    value = pWork.offs2C34[pWork.bit_buff & 0xFF];\r\n\r\n    if (value == 0xFF) {\r\n      if (pWork.bit_buff & 0x3F) {\r\n        if (WasteBits(pWork, 4)) {\r\n          return 0x306;\r\n        }\r\n\r\n        value = pWork.offs2D34[pWork.bit_buff & 0xFF];\r\n      } else {\r\n        if (WasteBits(pWork, 6)) {\r\n          return 0x306;\r\n        }\r\n\r\n        value = pWork.offs2E34[pWork.bit_buff & 0x7F];\r\n      }\r\n    }\r\n  } else {\r\n    if(WasteBits(pWork, 8)) {\r\n      return 0x306;\r\n    }\r\n\r\n    value = pWork.offs2EB4[pWork.bit_buff & 0xFF];\r\n  }\r\n\r\n  return WasteBits(pWork, pWork.ChBitsAsc[value]) ? 0x306 : value;\r\n}\r\n\r\n//-----------------------------------------------------------------------------\r\n// Decodes the distance of the repetition, backwards relative to the\r\n// current output buffer position\r\nfunction DecodeDist(pWork, rep_length) {\r\n  // Next 2-8 bits in the input buffer is the distance position code\r\n  const dist_pos_code = pWork.DistPosCodes[pWork.bit_buff & 0xFF];\r\n  const dist_pos_bits = pWork.DistBits[dist_pos_code];\r\n  if (WasteBits(pWork, dist_pos_bits)) {\r\n    return 0;\r\n  }\r\n\r\n  let distance;\r\n  if (rep_length === 2) {\r\n    // If the repetition is only 2 bytes length,\r\n    // then take 2 bits from the stream in order to get the distance\r\n    distance = (dist_pos_code << 2) | (pWork.bit_buff & 0x03);\r\n    if (WasteBits(pWork, 2)) {\r\n      return 0;\r\n    }\r\n  } else {\r\n    // If the repetition is more than 2 bytes length,\r\n    // then take \"dsize_bits\" bits in order to get the distance\r\n    distance = (dist_pos_code << pWork.dsize_bits) | (pWork.bit_buff & pWork.dsize_mask);\r\n    if (WasteBits(pWork, pWork.dsize_bits)) {\r\n      return 0;\r\n    }\r\n  }\r\n  return distance + 1;\r\n}\r\n\r\nfunction Expand(pWork) {\r\n  let outputPos = 0x1000;          // Initialize output buffer position\r\n\r\n  // Decode the next literal from the input data.\r\n  // The returned literal can either be an uncompressed byte (next_literal < 0x100)\r\n  // or an encoded length of the repeating byte sequence that\r\n  // is to be copied to the current buffer position\r\n  let result, next_literal;\r\n  while ((result = next_literal = DecodeLit(pWork)) < 0x305) {\r\n    // If the literal is greater than 0x100, it holds length\r\n    // of repeating byte sequence\r\n    // literal of 0x100 means repeating sequence of 0x2 bytes\r\n    // literal of 0x101 means repeating sequence of 0x3 bytes\r\n    // ...\r\n    // literal of 0x305 means repeating sequence of 0x207 bytes\r\n    if(next_literal >= 0x100) {\r\n      // Get the length of the repeating sequence.\r\n      // Note that the repeating block may overlap the current output position,\r\n      // for example if there was a sequence of equal bytes\r\n      let rep_length = next_literal - 0xFE;\r\n      // Get backward distance to the repetition\r\n      const minus_dist = DecodeDist(pWork, rep_length);\r\n      if (minus_dist === 0) {\r\n        result = 0x306;\r\n        break;\r\n      }\r\n\r\n      // Target and source pointer\r\n      let target = outputPos;\r\n      let source = target - minus_dist;\r\n\r\n      // Update buffer output position\r\n      outputPos += rep_length;\r\n\r\n      // Copy the repeating sequence\r\n      const out_buff = pWork.out_buff;\r\n      while (rep_length-- > 0) {\r\n        out_buff[target++] = out_buff[source++];\r\n      }\r\n    } else {\r\n      pWork.out_buff[outputPos++] = next_literal;\r\n    }\r\n\r\n    // Flush the output buffer, if number of extracted bytes has reached the end\r\n    if (outputPos >= 0x2000) {\r\n      // Copy decompressed data into user buffer\r\n      pWork.write_buf(pWork.out_buff.subarray(0x1000, 0x2000));\r\n\r\n      // Now copy the decompressed data to the first half of the buffer.\r\n      // This is needed because the decompression might reuse them as repetitions.\r\n      // Note that if the output buffer overflowed previously, the extra decompressed bytes\r\n      // are stored in \"out_buff_overflow\", and they will now be\r\n      // within decompressed part of the output buffer.\r\n      pWork.out_buff.copyWithin(0, 0x1000, outputPos);\r\n      outputPos -= 0x1000;\r\n    }\r\n  }\r\n\r\n  // Flush any remaining decompressed bytes\r\n  pWork.write_buf(pWork.out_buff.subarray(0x1000, outputPos));\r\n  return result;\r\n}\r\n\r\n//-----------------------------------------------------------------------------\r\n// Main exploding function.\r\nexport function explode(read_buf, write_buf) {\r\n  const buffer = new ArrayBuffer(0x3104);\r\n  const pWork = {\r\n    read_buf,\r\n    write_buf,\r\n    in_pos: 3,\r\n    extra_bits: 0,\r\n    in_buff: new Uint8Array(buffer, 0, 0x800),\r\n    DistPosCodes: new Uint8Array(buffer, 0x800, 0x100),\r\n    LengthCodes: new Uint8Array(buffer, 0x900, 0x100),\r\n    offs2C34: new Uint8Array(buffer, 0xA00, 0x100),\r\n    offs2D34: new Uint8Array(buffer, 0xB00, 0x100),\r\n    offs2E34: new Uint8Array(buffer, 0xC00, 0x80),\r\n    offs2EB4: new Uint8Array(buffer, 0xC80, 0x100),\r\n    ChBitsAsc: new Uint8Array(buffer, 0xD80, 0x100),\r\n    DistBits: new Uint8Array(buffer, 0xE80, 0x40),\r\n    LenBits: new Uint8Array(buffer, 0xEC0, 0x10),\r\n    ExLenBits: new Uint8Array(buffer, 0xED0, 0x10),\r\n    LenBase: new Uint16Array(buffer, 0xEE0, 0x10),\r\n    out_buff: new Uint8Array(buffer, 0xF00, 0x2204),\r\n  };\r\n  pWork.in_bytes = read_buf(pWork.in_buff);\r\n  if (pWork.in_bytes <= 4) {\r\n    return CMP_BAD_DATA;\r\n  }\r\n  pWork.ctype = pWork.in_buff[0];\r\n  pWork.dsize_bits = pWork.in_buff[1];\r\n  pWork.bit_buff = pWork.in_buff[2];\r\n\r\n  // Test for the valid dictionary size\r\n  if(4 > pWork.dsize_bits || pWork.dsize_bits > 6) {\r\n    return CMP_INVALID_DICTSIZE;\r\n  }\r\n\r\n  pWork.dsize_mask = 0xFFFF >> (0x10 - pWork.dsize_bits); // Shifted by 'sar' instruction\r\n\r\n  if(pWork.ctype != CMP_BINARY) {\r\n    if(pWork.ctype != CMP_ASCII) {\r\n      return CMP_INVALID_MODE;\r\n    }\r\n\r\n    pWork.ChBitsAsc.set(ChBitsAsc);\r\n    GenAscTabs(pWork);\r\n  }\r\n\r\n  pWork.LenBits.set(LenBits);\r\n  GenDecodeTabs(pWork.LengthCodes, LenCode, pWork.LenBits, pWork.LenBits.length);\r\n  pWork.ExLenBits.set(ExLenBits);\r\n  pWork.LenBase.set(LenBase);\r\n  pWork.DistBits.set(DistBits);\r\n  GenDecodeTabs(pWork.DistPosCodes, DistCode, pWork.DistBits, pWork.DistBits.length);\r\n  if(Expand(pWork) !== 0x306) {\r\n    return CMP_NO_ERROR;\r\n  }\r\n      \r\n  return CMP_ABORT;\r\n}\r\n\r\nexport default explode;\r\n","const W = new Uint32Array(80);\r\n\r\nconst SHA1CircularShift = (shift, value) => ((value << shift) | (value >> (32 - shift)));\r\n\r\nclass SHA1 {\r\n  digest = new Uint32Array(5);\r\n  count = 0;\r\n\r\n  input8(u8) {\r\n    const u32 = new Uint32Array(u8.buffer, u8.byteOffset, 16);\r\n    this.input(u32);\r\n  }\r\n  input(u32) {\r\n    this.count += u32.length * 32;\r\n    for (let i = 0; i < 16; ++i) {\r\n      W[i] = u32[i];\r\n    }\r\n    for (let i = 16; i < 80; ++i) {\r\n      W[i] = W[i - 16] ^ W[i - 14] ^ W[i - 8] ^ W[i - 3];\r\n    }\r\n    let A = this.digest[0];\r\n    let B = this.digest[1];\r\n    let C = this.digest[2];\r\n    let D = this.digest[3];\r\n    let E = this.digest[4];\r\n\r\n    for (let i = 0; i < 20; i++) {\r\n      const temp = SHA1CircularShift(5, A) + ((B & C) | ((~B) & D)) + E + W[i] + 0x5A827999;\r\n      E = D;\r\n      D = C;\r\n      C = SHA1CircularShift(30, B);\r\n      B = A;\r\n      A = temp | 0;\r\n    }\r\n\r\n    for (let i = 20; i < 40; i++) {\r\n      const temp = SHA1CircularShift(5, A) + (B ^ C ^ D) + E + W[i] + 0x6ED9EBA1;\r\n      E = D;\r\n      D = C;\r\n      C = SHA1CircularShift(30, B);\r\n      B = A;\r\n      A = temp | 0;\r\n    }\r\n\r\n    for (let i = 40; i < 60; i++) {\r\n      const temp = SHA1CircularShift(5, A) + ((B & C) | (B & D) | (C & D)) + E + W[i] + 0x8F1BBCDC;\r\n      E = D;\r\n      D = C;\r\n      C = SHA1CircularShift(30, B);\r\n      B = A;\r\n      A = temp | 0;\r\n    }\r\n\r\n    for (let i = 60; i < 80; i++) {\r\n      const temp = SHA1CircularShift(5, A) + (B ^ C ^ D) + E + W[i] + 0xCA62C1D6;\r\n      E = D;\r\n      D = C;\r\n      C = SHA1CircularShift(30, B);\r\n      B = A;\r\n      A = temp | 0;\r\n    }\r\n\r\n    this.digest[0] += A;\r\n    this.digest[1] += B;\r\n    this.digest[2] += C;\r\n    this.digest[3] += D;\r\n    this.digest[4] += E;\r\n  }\r\n\r\n  constructor() {\r\n\t  this.digest[0] = 0x67452301;\r\n\t  this.digest[1] = 0xEFCDAB89;\r\n\t  this.digest[2] = 0x98BADCFE;\r\n\t  this.digest[3] = 0x10325476;\r\n    this.digest[4] = 0xC3D2E1F0;\r\n    \r\n    this.digest8 = new Uint8Array(this.digest.buffer);\r\n  }\r\n}\r\n\r\nclass Random {\r\n  constructor(seed) {\r\n    this.seed = seed;\r\n  }\r\n  next() {\r\n    this.seed = (((this.seed * 3) << 16) + ((this.seed * 67) << 8) + (this.seed * 253) + 2531011) | 0;\r\n    return (this.seed >> 16) & 0x7FFF;\r\n  }\r\n}\r\n\r\nfunction codec_init_key(password) {\r\n  const rand = new Random(0x7058);\r\n  const key = new Uint8Array(136);\r\n  const k32 = new Uint32Array(key.buffer);\r\n  for (let i = 0; i < 136; ++i) {\r\n    key[i] = rand.next();\r\n  }\r\n  const pw = new Uint8Array(64);\r\n  for (let i = 0; i < 64; ++i) {\r\n    pw[i] = password.charCodeAt(i % password.length);\r\n  }\r\n\r\n  let sha = new SHA1();\r\n  sha.input8(pw);\r\n\r\n  for (let i = 0; i < 34; ++i) {\r\n    k32[i] ^= sha.digest[i % sha.digest.length];\r\n  }\r\n\r\n  sha = new SHA1();\r\n  sha.input(k32.subarray(18));\r\n  return sha;\r\n}\r\n\r\nexport default function codec_decode(data, password) {\r\n  if (data.length <= 8) {\r\n    return;\r\n  }\r\n  const size = data.length - 8;\r\n  if (size % 64) {\r\n    return;\r\n  }\r\n\r\n  if (data[size + 4]) {\r\n    return;\r\n  }\r\n\r\n  const last_size = data[size + 5];\r\n  const result_size = size + last_size - 64;\r\n  const result = new Uint8Array(result_size);\r\n\r\n  const sha = codec_init_key(password);\r\n  const size32 = size >> 2;\r\n  const data32 = new Uint32Array(data.buffer, data.byteOffset, size32 + 1);\r\n  const buf32 = new Uint32Array(16);\r\n  const buf = new Uint8Array(buf32.buffer);\r\n\r\n  for (let i = 0; i < size32; i += 16) {\r\n    for (let j = 0; j < 16; ++j) {\r\n      buf32[j] = data32[i + j] ^ sha.digest[j % sha.digest.length];\r\n    }\r\n    sha.input(buf32);\r\n    result.set(i === size32 - 16 ? buf.subarray(0, last_size) : buf, i * 4);\r\n  }\r\n  if (data32[size32] !== sha.digest[0]) {\r\n    return;\r\n  }\r\n  return result;\r\n}\r\n","import { explode } from './explode';\r\nimport codec_decode from './codec';\r\n\r\nfunction pkzip_decompress(data, out_size) {\r\n  if (data.length === out_size) {\r\n    return data;\r\n  }\r\n\r\n  const output = new Uint8Array(out_size);\r\n  let in_pos = 0;\r\n  let out_pos = 0;\r\n  function read_buf(dst) {\r\n    const count = Math.min(data.length - in_pos, dst.length);\r\n    dst.set(data.subarray(in_pos, count));\r\n    in_pos += count;\r\n    return count;\r\n  }\r\n  function write_buf(src) {\r\n    if (out_pos + src.length > out_size) {\r\n      throw Error('decompress buffer overflow');\r\n    }\r\n    output.set(src, out_pos);\r\n    out_pos += src.length;\r\n  }\r\n\r\n  if (explode(read_buf, write_buf) || out_pos !== out_size) {\r\n    return null;\r\n  }\r\n\r\n  return output;\r\n}\r\n\r\nconst hashtable = (function() {\r\n  const hashtable = new Uint32Array(1280);\r\n  let seed = 0x00100001;\r\n  for (let i = 0; i < 256; i++) {\r\n    for (let j = i; j < 1280; j += 256) {\r\n      seed = (seed * 125 + 3) % 0x2AAAAB;\r\n      const a = (seed & 0xFFFF) << 16;\r\n      seed = (seed * 125 + 3) % 0x2AAAAB;\r\n      const b = (seed & 0xFFFF);\r\n      hashtable[j] = a | b;\r\n    }\r\n  }\r\n  return hashtable;\r\n})();\r\nexport function decrypt(u32, key) {\r\n  let seed = 0xEEEEEEEE;\r\n  for (let i = 0; i < u32.length; ++i) {\r\n    seed += hashtable[0x400 + (key & 0xFF)];\r\n    u32[i] ^= seed + key;\r\n    seed = (u32[i] + seed * 33 + 3) | 0;\r\n    key = ((~key << 0x15) + 0x11111111) | (key >>> 0x0B);\r\n  }\r\n}\r\nexport function decrypt8(u8, key) {\r\n  decrypt(new Uint32Array(u8.buffer, u8.byteOffset, u8.length >> 2), key);\r\n}\r\nexport function encrypt(u32, key) {\r\n  let seed = 0xEEEEEEEE;\r\n  for (let i = 0; i < u32.length; ++i) {\r\n    seed += hashtable[0x400 + (key & 0xFF)];\r\n    const orig = u32[i];\r\n    u32[i] ^= seed + key;\r\n    seed = (orig + seed * 33 + 3) | 0;\r\n    key = ((~key << 0x15) + 0x11111111) | (key >>> 0x0B);\r\n  }\r\n}\r\nexport function encrypt8(u8, key) {\r\n  encrypt(new Uint32Array(u8.buffer, u8.byteOffset, u8.length >> 2), key);\r\n}\r\nexport function hash(name, type) {\r\n  let seed1 = 0x7FED7FED;\r\n  let seed2 = 0xEEEEEEEE;\r\n  for (let i = 0; i < name.length; ++i) {\r\n    let ch = name.charCodeAt(i);\r\n    if (ch >= 0x61 && ch <= 0x7A) {\r\n      ch -= 0x20;\r\n    }\r\n    if (ch === 0x2F) {\r\n      ch = 0x5C;\r\n    }\r\n    seed1 = hashtable[type * 256 + ch] ^ (seed1 + seed2);\r\n    seed2 = (ch + seed1 + seed2 * 33 + 3) | 0;\r\n  }\r\n  return seed1 >>> 0;\r\n}\r\n\r\nexport function path_name(name) {\r\n  const pos = Math.max(name.lastIndexOf('/'), name.lastIndexOf('\\\\'));\r\n  return name.substring(pos + 1);\r\n}\r\n\r\nconst Flags = {\r\n  CompressPkWare: 0x00000100,\r\n  CompressMulti: 0x00000200,\r\n  Compressed: 0x0000FF00,\r\n  Encrypted: 0x00010000,\r\n  FixSeed: 0x00020000,\r\n  PatchFile: 0x00100000,\r\n  SingleUnit: 0x01000000,\r\n  DummyFile: 0x02000000,\r\n  SectorCrc: 0x04000000,\r\n  Exists: 0x80000000,\r\n};\r\n\r\nexport class MpqReader {\r\n  constructor(buffer) {\r\n    this.buffer = buffer;\r\n    this.u8 = new Uint8Array(buffer);\r\n    this.u32 = new Uint32Array(buffer, 0, buffer.byteLength >> 2);\r\n\r\n    this.readHeader();\r\n  }\r\n\r\n  readHeader() {\r\n    const {u8, u32} = this;\r\n    if (u32[0] !== 0x1A51504D) {\r\n      throw Error('invalid MPQ header');\r\n    }\r\n    const sizeId = u8[14] + (u8[15] << 8);\r\n    const hashOffset = u32[4];\r\n    const blockOffset = u32[5];\r\n    const hashCount = u32[6];\r\n    const blockCount = u32[7];\r\n    this.hashTable = this.readTable(hashOffset, hashCount, \"(hash table)\");\r\n    this.blockTable = this.readTable(blockOffset, blockCount, \"(block table)\");\r\n    this.blockSize = 1 << (9 + sizeId);\r\n  }\r\n\r\n  readTable(offset, count, key) {\r\n    const buffer = new Uint32Array(this.buffer.slice(offset, offset + count * 16));\r\n    decrypt(buffer, hash(key, 3));\r\n    return buffer;\r\n  }\r\n\r\n  fileIndex(name) {\r\n    const {hashTable} = this;\r\n    const length = hashTable.length >> 2;\r\n    const index = hash(name, 0) % length;\r\n    const keyA = hash(name, 1), keyB = hash(name, 2);\r\n    for (let i = index, count = 0; hashTable[i * 4 + 3] !== 0xFFFFFFFF && count < length; i = (i + 1) % length, ++count) {\r\n      if (hashTable[i * 4] === keyA && hashTable[i * 4 + 1] === keyB && hashTable[i * 4 + 3] !== 0xFFFFFFFE) {\r\n        return i;\r\n      }\r\n    }\r\n  }\r\n\r\n  readRaw(name) {\r\n    const index = this.fileIndex(name);\r\n    if (index == null) {\r\n      return;\r\n    }\r\n    const block = this.hashTable[index * 4 + 3];\r\n    const info = {\r\n      filePos: this.blockTable[block * 4],\r\n      cmpSize: this.blockTable[block * 4 + 1],\r\n      fileSize: this.blockTable[block * 4 + 2],\r\n      flags: this.blockTable[block * 4 + 3],\r\n      key: hash(path_name(name), 3),\r\n    };\r\n    if ((info.flags & Flags.PatchFile) || info.filePos + info.cmpSize > this.buffer.byteLength) {\r\n      return;\r\n    }\r\n    if (!(info.flags & Flags.Compressed)) {\r\n      info.cmpSize = info.fileSize;\r\n    }\r\n    if (info.flags & Flags.FixSeed) {\r\n      info.key = (info.key + info.filePos) ^ info.fileSize;\r\n    }\r\n    return {info, data: new Uint8Array(this.buffer, info.filePos, info.cmpSize)};\r\n  }\r\n\r\n  read(name) {\r\n    const raw = this.readRaw(name);\r\n    if (!raw) {\r\n      return;\r\n    }\r\n    let {info, data} = raw;\r\n    data = data.slice();\r\n\r\n    if (info.flags & Flags.SingleUnit) {\r\n      if (info.flags & Flags.Encrypted) {\r\n        decrypt8(data, info.key);\r\n      }\r\n      if (info.flags & Flags.CompressMulti) {\r\n        return;\r\n      } else if (info.flags & Flags.CompressPkWare) {\r\n        return pkzip_decompress(data, info.fileSize);\r\n      }\r\n      return data;\r\n    } else if (!(info.flags & Flags.Compressed)) {\r\n      if (info.flags & Flags.Encrypted) {\r\n        for (let i = 0; i < info.fileSize; i += this.blockSize) {\r\n          decrypt8(data.subarray(i, Math.min(info.fileSize, i + this.blockSize)), info.key + i / this.blockSize);\r\n        }\r\n      }\r\n      return data;\r\n    } else {\r\n      const numBlocks = Math.floor((info.fileSize + this.blockSize - 1) / this.blockSize);\r\n      const tableSize = numBlocks + 1;\r\n      if (data.length < tableSize * 4) {\r\n        return;\r\n      }\r\n      const blocks = new Uint32Array(data.buffer, 0, tableSize);\r\n      if (info.flags & Flags.Encrypted) {\r\n        decrypt(blocks, info.key - 1);\r\n      }\r\n      const output = new Uint8Array(info.fileSize);\r\n      for (let i = 0; i < numBlocks; ++i) {\r\n        const oPos = i * this.blockSize;\r\n        const uSize = Math.min(this.blockSize, info.fileSize - oPos);\r\n        if (blocks[i + 1] > data.length) {\r\n          return;\r\n        }\r\n        let tmp = data.subarray(blocks[i], blocks[i + 1]);\r\n        if (info.flags & Flags.Encrypted) {\r\n          // this is not safe, but our files are small enough\r\n          decrypt8(tmp, info.key + i);\r\n        }\r\n        if (info.flags & Flags.CompressMulti) {\r\n          return;\r\n        } else if (info.flags & Flags.CompressPkWare) {\r\n          tmp = pkzip_decompress(tmp, uSize);\r\n        }\r\n        if (!tmp || tmp.length !== uSize) {\r\n          return;\r\n        }\r\n        output.set(tmp, oPos);\r\n      }\r\n      return output;\r\n    }\r\n  }\r\n}\r\n\r\nfunction getPassword(name) {\r\n  if (name.match(/spawn\\d+\\.sv/i)) {\r\n    return 'lshbkfg1'; // single, spawn\r\n  } else if (name.match(/share_\\d+\\.sv/i)) {\r\n    return 'lshbkfg1'; // multi, spawn\r\n  } else if (name.match(/multi_\\d+\\.sv/i)) {\r\n    return 'szqnlsk1'; // multi, retail\r\n  } else {\r\n    return 'xrgyrkj1'; // single, retail\r\n  }\r\n}\r\n\r\nexport default function getPlayerName(data, name) {\r\n  try {\r\n    const reader = new MpqReader(data);\r\n    const hero = codec_decode(reader.read(\"hero\"), getPassword(name));\r\n    const nameEnd = hero.indexOf(0, 16);\r\n    const result = {};\r\n    result.name = String.fromCharCode(...hero.subarray(16, nameEnd));\r\n    result.cls = hero[48];\r\n    result.level = hero[53];\r\n    return result;\r\n  } catch (e) {\r\n    return null;\r\n  }\r\n}\r\n","function no_sound() {\r\n  return {\r\n    create_sound: () => 0,\r\n    duplicate_sound: () => 0,\r\n    play_sound: () => undefined,\r\n    set_volume: () => undefined,\r\n    stop_sound: () => undefined,\r\n    delete_sound: () => undefined,\r\n  };\r\n}\r\n\r\nfunction decodeAudioData(context, buffer) {\r\n  return new Promise((resolve, reject) => {\r\n    context.decodeAudioData(buffer, resolve, reject);\r\n  });\r\n}\r\n\r\nexport default function init_sound() {\r\n  const AudioContext = window.AudioContext || window.webkitAudioContext;\r\n  const StereoPannerNode = window.StereoPannerNode;\r\n  if (!AudioContext) {\r\n    return no_sound();\r\n  }\r\n\r\n  let context = null;\r\n  try {\r\n    context = new AudioContext();\r\n  } catch (e) {\r\n  }\r\n  const sounds = new Map();\r\n\r\n  return {\r\n    create_sound_raw(id, data, length, channels, rate) {\r\n      if (!context) {\r\n        return;\r\n      }\r\n      const buffer = context.createBuffer(channels, length, rate);\r\n      for (let i = 0; i < channels; ++i) {\r\n        buffer.getChannelData(i).set(data.subarray(i * length, i * length + length));\r\n      }\r\n      sounds.set(id, {\r\n        buffer: Promise.resolve(buffer),\r\n        gain: context.createGain(),\r\n        panner: StereoPannerNode && new StereoPannerNode(context, {pan: 0}),\r\n      });\r\n    },\r\n    create_sound(id, data) {\r\n      if (!context) {\r\n        return;\r\n      }\r\n      const buffer = decodeAudioData(context, data.buffer);\r\n      sounds.set(id, {\r\n        buffer,\r\n        gain: context.createGain(),\r\n        panner: StereoPannerNode && new StereoPannerNode(context, {pan: 0}),\r\n      });\r\n    },\r\n    duplicate_sound(id, srcId) {\r\n      if (!context) {\r\n        return;\r\n      }\r\n      const src = sounds.get(srcId);\r\n      if (!src) {\r\n        return;\r\n      }\r\n      sounds.set(id, {\r\n        buffer: src.buffer,\r\n        gain: context.createGain(),\r\n        panner: StereoPannerNode && new StereoPannerNode(context, {pan: 0}),\r\n      });\r\n    },\r\n    play_sound(id, volume, pan, loop) {\r\n      const src = sounds.get(id);\r\n      if (src) {\r\n        if (src.source) {\r\n          src.source.then(source => source.stop());\r\n        }\r\n        src.gain.gain.value = Math.pow(2.0, volume / 1000.0);\r\n        const relVolume = Math.pow(2.0, pan / 1000.0);\r\n        if (src.panner) {\r\n          src.panner.pan.value = 1.0 - 2.0 / (1.0 + relVolume);\r\n        }\r\n        src.source = src.buffer.then(buffer => {\r\n          const source = context.createBufferSource();\r\n          source.buffer = buffer;\r\n          source.loop = !!loop;\r\n          let node = source.connect(src.gain);\r\n          if (src.panner) {\r\n            node = node.connect(src.panner);\r\n          }\r\n          node.connect(context.destination);\r\n          source.start();\r\n          return source;\r\n        });\r\n      }\r\n    },\r\n    set_volume(id, volume) {\r\n      const src = sounds.get(id);\r\n      if (src) {\r\n        src.gain.gain.value = Math.pow(2.0, volume / 1000.0);\r\n      }\r\n    },\r\n    stop_sound(id) {\r\n      const src = sounds.get(id);\r\n      if (src && src.source) {\r\n        src.source.then(source => source.stop());\r\n        delete src.source;\r\n      }\r\n    },\r\n    delete_sound(id) {\r\n      const src = sounds.get(id);\r\n      if (src && src.source) {\r\n        src.source.then(source => source.stop());\r\n      }\r\n      sounds.delete(id);\r\n    },\r\n\r\n    stop_all() {\r\n      for (let [, sound] of sounds) {\r\n        if (sound.source) {\r\n          sound.source.then(source => source.stop());\r\n        }\r\n      }\r\n      sounds.clear();\r\n      context = null;\r\n    }\r\n  };\r\n}\r\n","import axios from 'axios';\r\n\r\nconst SpawnSizes = [50274091, 25830791];\r\n\r\nexport { SpawnSizes };\r\n\r\nexport default async function load_spawn(api, fs) {\r\n  let file = fs.files.get('spawn.mpq');\r\n  if (file && !SpawnSizes.includes(file.byteLength)) {\r\n    fs.files.delete('spawn.mpq');\r\n    await fs.delete('spawn.mpq');\r\n    file = null;\r\n  }\r\n  if (!file) {\r\n    const spawn = await axios.request({\r\n      url: process.env.PUBLIC_URL + '/spawn.mpq',\r\n      responseType: 'arraybuffer',\r\n      onDownloadProgress: e => {\r\n        if (api.onProgress) {\r\n          api.onProgress({text: 'Downloading...', loaded: e.loaded, total: e.total || SpawnSizes[1]});\r\n        }\r\n      },\r\n      headers: {\r\n        'Cache-Control': 'max-age=31536000'\r\n      }\r\n    });\r\n    if (!SpawnSizes.includes(spawn.data.byteLength)) {\r\n      throw Error(\"Invalid spawn.mpq size. Try clearing cache and refreshing the page.\");\r\n    }\r\n    const data = new Uint8Array(spawn.data);\r\n    fs.files.set('spawn.mpq', data);\r\n    fs.update('spawn.mpq', data.slice());\r\n  }\r\n  return fs;\r\n}\r\n","export class buffer_reader {\r\n  constructor(buffer) {\r\n    this.buffer = (buffer instanceof Uint8Array ? buffer : new Uint8Array(buffer));\r\n    this.pos = 0;\r\n  }\r\n  done() {\r\n    return this.pos === this.buffer.byteLength;\r\n  }\r\n  read8() {\r\n    if (this.pos >= this.buffer.byteLength) {\r\n      throw Error('packet too small');\r\n    }\r\n    return this.buffer[this.pos++];\r\n  }\r\n  read16() {\r\n    const {pos, buffer} = this;\r\n    if (pos + 2 > buffer.byteLength) {\r\n      throw Error('packet too small');\r\n    }\r\n    const result = buffer[pos] | (buffer[pos + 1] << 8);\r\n    this.pos += 2;\r\n    return result;\r\n  }\r\n  read32() {\r\n    const {pos, buffer} = this;\r\n    if (pos + 4 > buffer.byteLength) {\r\n      throw Error('packet too small');\r\n    }\r\n    const result = buffer[pos] | (buffer[pos + 1] << 8) | (buffer[pos + 2] << 16) | (buffer[pos + 3] << 24);\r\n    this.pos += 4;\r\n    return result;\r\n  }\r\n  read_str() {\r\n    const length = this.read8();\r\n    const {pos, buffer} = this;\r\n    if (pos + length > buffer.byteLength) {\r\n      throw Error('packet too small');\r\n    }\r\n    const result = String.fromCharCode(...buffer.subarray(pos, pos + length));\r\n    this.pos += length;\r\n    return result;\r\n  }\r\n  read_buf() {\r\n    const size = this.read32();\r\n    const result = this.buffer.subarray(this.pos, this.pos + size);\r\n    this.pos += size;\r\n    return result;\r\n  }\r\n}\r\nexport class buffer_writer {\r\n  constructor(length) {\r\n    this.buffer = new Uint8Array(length);\r\n    this.pos = 0;\r\n  }\r\n  get result() {\r\n    return this.buffer.buffer;\r\n  }\r\n  write8(value) {\r\n    this.buffer[this.pos++] = value;\r\n    return this;\r\n  }\r\n  write16(value) {\r\n    const {pos, buffer} = this;\r\n    buffer[pos] = value;\r\n    buffer[pos + 1] = value >> 8;\r\n    this.pos += 2;\r\n    return this;\r\n  }\r\n  write32(value) {\r\n    const {pos, buffer} = this;\r\n    buffer[pos] = value;\r\n    buffer[pos + 1] = value >> 8;\r\n    buffer[pos + 2] = value >> 16;\r\n    buffer[pos + 3] = value >> 24;\r\n    this.pos += 4;\r\n    return this;\r\n  }\r\n  write_str(value) {\r\n    const length = value.length;\r\n    this.write8(length);\r\n    const {pos, buffer} = this;\r\n    for (let i = 0; i < length; ++i) {\r\n      buffer[pos + i] = value.charCodeAt(i);\r\n    }\r\n    this.pos += length;\r\n    return this;\r\n  }\r\n  rest(value) {\r\n    this.buffer.set(value, this.pos);\r\n    this.pos += value.byteLength;\r\n    return this;\r\n  }\r\n  write_buf(value) {\r\n    this.write32(value.byteLength);\r\n    this.rest(value);\r\n    return this;\r\n  }\r\n}\r\n\r\nexport const RejectionReason = {\r\n  JOIN_SUCCESS: 0x00,\r\n  JOIN_ALREADY_IN_GAME: 0x01,\r\n  JOIN_GAME_NOT_FOUND: 0x02,\r\n  JOIN_INCORRECT_PASSWORD: 0x03,\r\n  JOIN_VERSION_MISMATCH: 0x04,\r\n  JOIN_GAME_FULL: 0x05,\r\n  CREATE_GAME_EXISTS: 0x06,\r\n};\r\n\r\nexport function read_packet(reader, types) {\r\n  const code = reader.read8();\r\n  const cls = Object.values(types).find(cls => cls.code === code);\r\n  if (!cls) {\r\n    throw Error('invalid packet code');\r\n  }\r\n  return {type: cls, packet: cls.read(reader)};\r\n}\r\nexport function packet_size(type, packet) {\r\n  return (typeof type.size === \"function\" ? type.size(packet) : type.size) + 1;\r\n}\r\nexport function write_packet(type, packet) {\r\n  const size = packet_size(type, packet);\r\n  return type.write(new buffer_writer(size).write8(type.code), packet).result;\r\n}\r\n\r\nexport function make_batch(types) {\r\n  return {\r\n    code: 0x00,\r\n    read: reader => {\r\n      const count = reader.read16();\r\n      const packets = [];\r\n      for (let i = 0; i < count; ++i) {\r\n        packets.push(read_packet(reader, types()));\r\n      }\r\n      return packets;\r\n    },\r\n    size: packets => packets.reduce((sum, {type, packet}) => sum + packet_size(type, packet), 2),\r\n    write: (writer, packets) => {\r\n      writer.write16(packets.length);\r\n      for (let {type, packet} of packets) {\r\n        type.write(writer.write8(type.code), packet);\r\n      }\r\n      return writer;\r\n    },\r\n  };\r\n}\r\n\r\nexport const server_packet = {\r\n  info: {\r\n    code: 0x32,\r\n    read: reader => ({version: reader.read32()}),\r\n    size: 4,\r\n    write: (writer, {version}) => writer.write32(version),\r\n  },\r\n  game_list: {\r\n    code: 0x21,\r\n    read: reader => {\r\n      const count = reader.read16();\r\n      const games = [];\r\n      for (let i = 0; i < count; ++i) {\r\n        games.push({type: reader.read32(), name: reader.read_str()});\r\n      }\r\n      return {games};\r\n    },\r\n    size: ({games}) => games.reduce((sum, {name}) => sum + 5 + name.length, 2),\r\n    write: (writer, {games}) => {\r\n      writer.write16(games.length);\r\n      for (let {type, name} of games) {\r\n        writer.write32(type);\r\n        writer.write_str(name);\r\n      }\r\n      return writer;\r\n    },\r\n  },\r\n  join_accept: {\r\n    code: 0x12,\r\n    read: reader => ({cookie: reader.read32(), index: reader.read8(), seed: reader.read32(), difficulty: reader.read32()}),\r\n    size: 13,\r\n    write: (writer, {cookie, index, seed, difficulty}) => writer.write32(cookie).write8(index).write32(seed).write32(difficulty),\r\n  },\r\n  join_reject: {\r\n    code: 0x15,\r\n    read: reader => ({cookie: reader.read32(), reason: reader.read8()}),\r\n    size: 5,\r\n    write: (writer, {cookie, reason}) => writer.write32(cookie).write8(reason),\r\n  },\r\n  connect: {\r\n    code: 0x13,\r\n    read: reader => ({id: reader.read8()}),\r\n    size: 1,\r\n    write: (writer, {id}) => writer.write8(id),\r\n  },\r\n  disconnect: {\r\n    code: 0x14,\r\n    read: reader => ({id: reader.read8(), reason: reader.read32()}),\r\n    size: 5,\r\n    write: (writer, {id, reason}) => writer.write8(id).write32(reason),\r\n  },\r\n  message: {\r\n    code: 0x01,\r\n    read: reader => ({id: reader.read8(), payload: reader.read_buf()}),\r\n    size: ({payload}) => 5 + payload.byteLength,\r\n    write: (writer, {id, payload}) => writer.write8(id).write_buf(payload),\r\n  },\r\n  turn: {\r\n    code: 0x02,\r\n    read: reader => ({id: reader.read8(), turn: reader.read32()}),\r\n    size: 5,\r\n    write: (writer, {id, turn}) => writer.write8(id).write32(turn),\r\n  },\r\n  batch: make_batch(() => server_packet),\r\n};\r\n\r\nexport const client_packet = {\r\n  info: {\r\n    code: 0x31,\r\n    read: reader => ({version: reader.read32()}),\r\n    size: 4,\r\n    write: (writer, {version}) => writer.write32(version),\r\n  },\r\n  game_list: {\r\n    code: 0x21,\r\n    read: () => ({}),\r\n    size: 0,\r\n    write: writer => writer,\r\n  },\r\n  create_game: {\r\n    code: 0x22,\r\n    read: reader => ({cookie: reader.read32(), name: reader.read_str(), password: reader.read_str(), difficulty: reader.read32()}),\r\n    size: ({name, password}) => 10 + name.length + password.length,\r\n    write: (writer, {cookie, name, password, difficulty}) => writer.write32(cookie).write_str(name).write_str(password).write32(difficulty),\r\n  },\r\n  join_game: {\r\n    code: 0x23,\r\n    read: reader => ({cookie: reader.read32(), name: reader.read_str(), password: reader.read_str()}),\r\n    size: ({name, password}) => 6 + name.length + password.length,\r\n    write: (writer, {cookie, name, password}) => writer.write32(cookie).write_str(name).write_str(password),\r\n  },\r\n  leave_game: {\r\n    code: 0x24,\r\n    read: () => ({}),\r\n    size: 0,\r\n    write: writer => writer,\r\n  },\r\n  drop_player: {\r\n    code: 0x03,\r\n    read: reader => ({id: reader.read8(), reason: reader.read32()}),\r\n    size: 5,\r\n    write: (writer, {id, reason}) => writer.write8(id).write32(reason),\r\n  },\r\n  message: {\r\n    code: 0x01,\r\n    read: reader => ({id: reader.read8(), payload: reader.read_buf()}),\r\n    size: ({payload}) => 5 + payload.byteLength,\r\n    write: (writer, {id, payload}) => writer.write8(id).write_buf(payload),\r\n  },\r\n  turn: {\r\n    code: 0x02,\r\n    read: reader => ({turn: reader.read32()}),\r\n    size: 4,\r\n    write: (writer, {turn}) => writer.write32(turn),\r\n  },\r\n  batch: make_batch(() => server_packet),\r\n};\r\n","import Peer from 'peerjs';\r\nimport { buffer_reader, read_packet, write_packet, client_packet, server_packet, RejectionReason } from './packet';\r\n\r\n/*function log_packet(data, type) {\r\n  const reader = new buffer_reader(data);\r\n  const id = reader.read8();\r\n  for (let [name, {code, read}] of Object.entries(type)) {\r\n    if (code === id && (name !== 'message' && name !== 'turn')) {\r\n      console.log(`${type === client_packet ? 'client_packet' : 'server_packet'}.${name} ${JSON.stringify(read(reader))}`);\r\n    }\r\n  }\r\n}*/\r\n\r\nconst PeerID = name => `diabloweb_${name}`;\r\nconst Options = {host: 'diablo.rivsoft.net', port: 443, secure: true};\r\nconst MAX_PLRS = 4;\r\n\r\nclass webrtc_server {\r\n  constructor(version, {cookie, name, password, difficulty}, onMessage, onClose) {\r\n    this.version = version;\r\n    this.name = name;\r\n    this.password = password;\r\n    this.difficulty = difficulty;\r\n    this.onMessage = onMessage;\r\n    this.onClose = onClose;\r\n\r\n    this.peer = new Peer(PeerID(name), Options);\r\n    this.peer.on('connection', conn => this.onConnect(conn));\r\n    this.players = [];\r\n    this.myplr = 0;\r\n\r\n    this.seed = Math.floor(Math.random() * Math.pow(2, 32));\r\n\r\n    const onError = () => {\r\n      onMessage(write_packet(server_packet.join_reject, {cookie, reason: RejectionReason.CREATE_GAME_EXISTS}));\r\n      onClose();\r\n      this.peer.off('error', onError);\r\n      this.peer.off('open', onOpen);\r\n    };\r\n    const onOpen = () => {\r\n      //console.log('peer open');\r\n      setTimeout(() => {\r\n        onMessage(write_packet(server_packet.join_accept, {cookie, index: 0, seed: this.seed, difficulty}));\r\n        onMessage(write_packet(server_packet.connect, {id: 0}));\r\n      }, 0);\r\n      this.peer.off('error', onError);\r\n      this.peer.off('open', onOpen);\r\n    };\r\n    this.peer.on('error', onError);\r\n    this.peer.on('open', onOpen);\r\n\r\n    //this.peer.on('error', err => console.log('peer error:', err));\r\n  }\r\n\r\n  onConnect(conn) {\r\n    //conn.on('error', err => console.log('conn error:', err));\r\n    //console.log('conn open');\r\n    const peer = {conn};\r\n    conn.on('data', packet => {\r\n      const reader = new buffer_reader(packet);\r\n      const {type, packet: pkt} = read_packet(reader, client_packet);\r\n      switch (type.code) {\r\n      case client_packet.info.code:\r\n        peer.version = pkt.version;\r\n        break;\r\n      case client_packet.join_game.code:\r\n        if (peer.version !== this.version) {\r\n          conn.send(write_packet(server_packet.join_reject, {cookie: pkt.cookie, reason: RejectionReason.JOIN_VERSION_MISMATCH}));\r\n        } else if (pkt.name !== this.name) {\r\n          conn.send(write_packet(server_packet.join_reject, {cookie: pkt.cookie, reason: RejectionReason.JOIN_GAME_NOT_FOUND}));\r\n        } else if (pkt.password !== this.password) {\r\n          conn.send(write_packet(server_packet.join_reject, {cookie: pkt.cookie, reason: RejectionReason.JOIN_INCORRECT_PASSWORD}));\r\n        } else {\r\n          let i = 1;\r\n          while (i < MAX_PLRS && this.players[i]) {\r\n            ++i;\r\n          }\r\n          if (i >= MAX_PLRS) {\r\n            conn.send(write_packet(server_packet.join_reject, {cookie: pkt.cookie, reason: RejectionReason.JOIN_GAME_FULL}));            \r\n          } else {\r\n            this.players[i] = peer;\r\n            peer.id = i;\r\n            conn.send(write_packet(server_packet.join_accept, {cookie: pkt.cookie, index: i, seed: this.seed, difficulty: this.difficulty}));\r\n            this.send(0xFF, write_packet(server_packet.connect, {id: i}));\r\n          }\r\n        }\r\n        break;\r\n      default:\r\n        if (peer.id != null) {\r\n          this.handle(peer.id, type.code, pkt);\r\n        } else {\r\n          return;\r\n        }\r\n      }\r\n      if (!reader.done()) {\r\n        throw Error('packet too large');\r\n      }\r\n    });\r\n    conn.on('close', () => {\r\n      //console.log('conn close');\r\n      if (peer.id != null) {\r\n        this.drop(peer.id, 0x40000006);\r\n      }\r\n    });\r\n  }\r\n\r\n  send(mask, pkt) {\r\n    for (let i = 1; i < MAX_PLRS; ++i) {\r\n      if ((mask & (1 << i)) && this.players[i]) {\r\n        if (this.players[i].conn) {\r\n          this.players[i].conn.send(pkt);\r\n        }\r\n      }\r\n    }\r\n    // self last since it will destroy the buffer\r\n    if (mask & 1) {\r\n      this.onMessage(pkt);\r\n    }\r\n  }\r\n\r\n  drop(id, reason) {\r\n    if (id === 0) {\r\n      for (let i = 1; i < MAX_PLRS; ++i) {\r\n        this.drop(i, 0x40000006);\r\n      }\r\n      this.onMessage(write_packet(server_packet.disconnect, {id, reason}));\r\n      this.peer.destroy();\r\n      this.onClose();\r\n    } else if (this.players[id]) {\r\n      this.send(0xFF, write_packet(server_packet.disconnect, {id, reason}));\r\n      this.players[id].id = null;\r\n      if (this.players[id].conn) {\r\n        this.players[id].conn.close();\r\n      }\r\n      this.players[id] = null;\r\n    }\r\n  }\r\n\r\n  handle(id, code, pkt) {\r\n    switch (code) {\r\n    case client_packet.leave_game.code:\r\n      this.drop(id, 3);\r\n      break;\r\n    case client_packet.drop_player.code:\r\n      this.drop(pkt.id, pkt.reason);\r\n      break;\r\n    case client_packet.message.code:\r\n      this.send(pkt.id === 0xFF ? ~(1 << id) : (1 << pkt.id), write_packet(server_packet.message, {id, payload: pkt.payload}));\r\n      break;\r\n    case client_packet.turn.code:\r\n      this.send(~(1 << id), write_packet(server_packet.turn, {id, turn: pkt.turn}));\r\n      break;\r\n    default:\r\n      throw Error(`invalid packet ${code}`);\r\n    }\r\n  }\r\n}\r\n\r\nclass webrtc_client {\r\n  pending = [];\r\n\r\n  constructor(version, {cookie, name, password}, onMessage, onClose) {\r\n    this.peer = new Peer(Options);\r\n    this.conn = this.peer.connect(PeerID(name));\r\n\r\n    let needUnreg = true;\r\n    const unreg = () => {\r\n      if (!needUnreg) {\r\n        return;\r\n      }\r\n      needUnreg = false;\r\n      this.peer.off('error', onError);\r\n      this.conn.off('error', onError);\r\n      this.conn.off('open', onOpen);\r\n      clearTimeout(timeout);\r\n    };\r\n    const onError = () => {\r\n      onMessage(write_packet(server_packet.join_reject, {cookie, reason: RejectionReason.JOIN_GAME_NOT_FOUND}));\r\n      onClose();\r\n      unreg();\r\n    };\r\n    const onOpen = () => {\r\n      this.conn.send(write_packet(client_packet.info, {version}));\r\n      this.conn.send(write_packet(client_packet.join_game, {cookie, name, password}));\r\n      for (let pkt of this.pending) {\r\n        this.conn.send(pkt);\r\n      }\r\n      this.pending = null;\r\n      this.conn.off('open', onOpen);\r\n    };\r\n    const timeout = setTimeout(onError, 10000);\r\n    this.peer.on('error', onError);\r\n    this.conn.on('error', onError);\r\n    this.conn.on('open', onOpen);\r\n\r\n    //this.peer.on('error', err => console.log('peer error:', err));\r\n    //this.conn.on('error', err => console.log('conn error:', err));\r\n\r\n    this.conn.on('data', data => {\r\n      unreg();\r\n      const reader = new buffer_reader(data);\r\n      const {type, packet: pkt} = read_packet(reader, server_packet);\r\n      switch (type.code) {\r\n      case server_packet.join_accept.code:\r\n        this.myplr = pkt.index;\r\n        break;\r\n      case server_packet.join_reject.code:\r\n        onClose();\r\n        break;\r\n      case server_packet.disconnect.code:\r\n        if (pkt.id === 'myplr') {\r\n          onClose();\r\n        }\r\n        break;\r\n      default:\r\n      }\r\n      onMessage(data);\r\n    });\r\n    this.conn.on('close', data => {\r\n      onClose();\r\n    });\r\n  }\r\n\r\n  send(packet) {\r\n    if (this.pending) {\r\n      this.pending.push(packet);\r\n    } else {\r\n      this.conn.send(packet);\r\n    }\r\n  }\r\n}\r\n\r\nexport default function webrtc_open(onMessage) {\r\n  let server = null, client = null;\r\n\r\n  let version = 0;\r\n\r\n  /*const prevMessage = onMessage;\r\n  onMessage = data => {\r\n    log_packet(data, server_packet);\r\n    prevMessage(data);\r\n  };*/\r\n\r\n  return {\r\n    send: function(packet) {\r\n      //log_packet(packet, client_packet);\r\n      const reader = new buffer_reader(packet);\r\n      const {type, packet: pkt} = read_packet(reader, client_packet);\r\n      switch (type.code) {\r\n      case client_packet.info.code:\r\n        version = pkt.version;\r\n        break;\r\n      case client_packet.create_game.code:\r\n        if (server || client) {\r\n          onMessage(write_packet(server_packet.join_reject, {cookie: pkt.cookie, reason: RejectionReason.JOIN_ALREADY_IN_GAME}));\r\n        } else {\r\n          server = new webrtc_server(version, pkt, onMessage, () => server = null);\r\n        }\r\n        break;\r\n      case client_packet.join_game.code:\r\n        if (server || client) {\r\n          onMessage(write_packet(server_packet.join_reject, {cookie: pkt.cookie, reason: RejectionReason.JOIN_ALREADY_IN_GAME}));\r\n        } else {\r\n          client = new webrtc_client(version, pkt, onMessage, () => client = null);\r\n        }\r\n        break;\r\n      default:\r\n        if (server) {\r\n          server.handle(0, type.code, pkt);\r\n          if (type.code === client_packet.leave_game.code) {\r\n            server = null;\r\n          }\r\n        } else if (client) {\r\n          client.send(packet);\r\n          if (type.code === client_packet.leave_game.code) {\r\n            client = null;\r\n          }\r\n          return;\r\n        } else if (type.code !== client_packet.leave_game.code) {\r\n          throw Error(`invalid packet ${type.code}`);\r\n        }\r\n      }\r\n      if (!reader.done()) {\r\n        throw Error('packet too large');\r\n      }\r\n    },\r\n  };\r\n}\r\n","import Worker from './game.worker.js';\r\nimport init_sound from './sound';\r\nimport load_spawn from './load_spawn';\r\nimport webrtc_open from './webrtc';\r\n\r\nfunction onRender(api, ctx, {bitmap, images, text, clip, belt}) {\r\n  if (bitmap) {\r\n    ctx.transferFromImageBitmap(bitmap);\r\n  } else {\r\n    for (let {x, y, w, h, data} of images) {\r\n      const image = ctx.createImageData(w, h);\r\n      image.data.set(data);\r\n      ctx.putImageData(image, x, y);\r\n    }\r\n    if (text.length) {\r\n      ctx.save();\r\n      ctx.font = 'bold 13px Times New Roman';\r\n      if (clip) {\r\n        const {x0, y0, x1, y1} = clip;\r\n        ctx.beginPath();\r\n        ctx.rect(x0, y0, x1 - x0, y1 - y0);\r\n        ctx.clip();\r\n      }\r\n      for (let {x, y, text: str, color} of text) {\r\n        const r = ((color >> 16) & 0xFF);\r\n        const g = ((color >> 8) & 0xFF);\r\n        const b = (color & 0xFF);\r\n        ctx.fillStyle = `rgb(${r}, ${g}, ${b})`;\r\n        ctx.fillText(str, x, y + 22);\r\n      }\r\n      ctx.restore();\r\n    }\r\n  }\r\n\r\n  api.updateBelt(belt);\r\n}\r\n\r\nfunction testOffscreen() {\r\n  return false;\r\n  // This works but I couldn't see any performance difference, and support for 2D canvas in workers is very poor.\r\n  // In this mode, instead of sending a batch of areas to draw back to the main thread, the worker does all drawing on its own and sends a complete bitmap object back.\r\n  // However, this effectively clears the worker's canvas, so we need to redraw the whole frame every time, which defeats the performance gained from reduced copying.\r\n  /*try {\r\n    const canvas = document.createElement(\"canvas\");\r\n    const offscreen = canvas.transferControlToOffscreen();\r\n    const context = offscreen.getContext(\"2d\");\r\n    return context != null;\r\n  } catch (e) {\r\n    return false;\r\n  }*/\r\n}\r\n\r\nasync function do_load_game(api, audio, mpq, spawn) {\r\n  const fs = await api.fs;\r\n  if (spawn && !mpq) {\r\n    await load_spawn(api, fs);\r\n  }\r\n\r\n  let context = null, offscreen = false;\r\n  if (testOffscreen()) {\r\n    context = api.canvas.getContext(\"bitmaprenderer\");\r\n    offscreen = true;\r\n  } else {\r\n    context = api.canvas.getContext(\"2d\", {alpha: false});\r\n  }\r\n  return await new Promise((resolve, reject) => {\r\n    try {\r\n      const worker = new Worker();\r\n\r\n      let packetQueue = [];\r\n      const webrtc = webrtc_open(data => {\r\n        packetQueue.push(data);\r\n      });\r\n\r\n      worker.addEventListener(\"message\", ({data}) => {\r\n        switch (data.action) {\r\n        case \"loaded\":\r\n          resolve((func, ...params) => worker.postMessage({action: \"event\", func, params}));\r\n          break;\r\n        case \"render\":\r\n          onRender(api, context, data.batch);\r\n          break;\r\n        case \"audio\":\r\n          audio[data.func](...data.params);\r\n          break;\r\n        case \"audioBatch\":\r\n          for (let {func, params} of data.batch) {\r\n            audio[func](...params);\r\n          }\r\n          break;\r\n        case \"fs\":\r\n          fs[data.func](...data.params);\r\n          break;\r\n        case \"cursor\":\r\n          api.setCursorPos(data.x, data.y);\r\n          break;\r\n        case \"keyboard\":\r\n          api.openKeyboard(data.rect);\r\n          break;\r\n        case \"error\":\r\n          audio.stop_all();\r\n          api.onError(data.error, data.stack);\r\n          break;\r\n        case \"failed\":\r\n          reject({message: data.error, stack: data.stack});\r\n          break;\r\n        case \"progress\":\r\n          api.onProgress({text: data.text, loaded: data.loaded, total: data.total});\r\n          break;\r\n        case \"exit\":\r\n          api.onExit();\r\n          break;\r\n        case \"current_save\":\r\n          api.setCurrentSave(data.name);\r\n          break;\r\n          case \"packet\":\r\n          webrtc.send(data.buffer);\r\n          break;\r\n        case \"packetBatch\":\r\n          for (let packet of data.batch) {\r\n            webrtc.send(packet);\r\n          }\r\n          break;\r\n        default:\r\n        }\r\n      });          \r\n      const transfer= [];\r\n      for (let [, file] of fs.files) {\r\n        transfer.push(file.buffer);\r\n      }\r\n      worker.postMessage({action: \"init\", files: fs.files, mpq, spawn, offscreen}, transfer);\r\n      setInterval(() => {\r\n        if (packetQueue.length) {\r\n          worker.postMessage({action: \"packetBatch\", batch: packetQueue}, packetQueue);\r\n          packetQueue.length = 0;\r\n        }\r\n      }, 20);\r\n      delete fs.files;\r\n    } catch (e) {\r\n      reject(e);\r\n    }\r\n  });\r\n}\r\n\r\nexport default function load_game(api, mpq, spawn) {\r\n  const audio = init_sound();\r\n  return do_load_game(api, audio, mpq, spawn);\r\n}\r\n","import React from 'react';\r\nimport compress from './compress';\r\n\r\nexport default class CompressMpq extends React.Component {\r\n  state = {};\r\n\r\n  parseFile = e => {\r\n    const files = e.target.files;\r\n    if (files.length > 0) {\r\n      this.start(files[0]);\r\n    }\r\n  }\r\n\r\n  onProgress(progress) {\r\n    this.setState({progress});\r\n  }\r\n  onDone = result => {\r\n    const blob = new Blob([result], {type: 'binary/octet-stream'});\r\n    const url = URL.createObjectURL(blob);\r\n    this.setState({url});\r\n\r\n    const lnk = document.createElement('a');\r\n    lnk.setAttribute('href', url);\r\n    lnk.setAttribute('download', 'DIABDAT.MPQ');\r\n    document.body.appendChild(lnk);\r\n    lnk.click();\r\n    document.body.removeChild(lnk);\r\n  }\r\n  onError(message, stack) {\r\n    const { api } = this.props;\r\n    api.setState({compress: false});\r\n    api.onError(message, stack);\r\n  }\r\n\r\n  onClose = () => {\r\n    if (this.state.url) {\r\n      URL.revokeObjectURL(this.state.url);\r\n    }\r\n    this.props.api.setState({compress: false});\r\n  }\r\n\r\n  start(file) {\r\n    this.setState({started: true});\r\n    compress(file, (text, loaded, total) => this.onProgress({text, loaded, total}))\r\n      .then(this.onDone, e => this.onError(e.message, e.stack));\r\n  }\r\n\r\n  render() {\r\n    const { url, started, progress } = this.state;\r\n    if (url) {\r\n      return (\r\n        <div className=\"start\">\r\n          <p>\r\n            <a href={url} download=\"DIABDAT.MPQ\">Click here if download doesn't start.</a>\r\n          </p>\r\n          <div className=\"startButton\" onClick={this.onClose}>Back</div>\r\n        </div>\r\n      );\r\n    }\r\n    if (started) {\r\n      return (\r\n        <div className=\"loading\">\r\n          {(progress && progress.text) || 'Processing...'}\r\n          {progress != null && !!progress.total && (\r\n            <span className=\"progressBar\"><span><span style={{width: `${Math.round(100 * progress.loaded / progress.total)}%`}}/></span></span>\r\n          )}\r\n        </div>\r\n      );\r\n    }\r\n    return (\r\n      <div className=\"start\">\r\n        <p>\r\n          You can use this tool to reduce the original MPQ to about half its size. It encodes sounds in MP3 format and uses better compression for regular files.\r\n          To begin, click the button below or drop the MPQ onto the page.\r\n        </p>\r\n        <form>\r\n          <label htmlFor=\"loadFile\" className=\"startButton\">Select MPQ</label>\r\n          <input accept=\".mpq\" type=\"file\" id=\"loadFile\" style={{display: \"none\"}} onChange={this.parseFile}/>\r\n        </form>\r\n        <div className=\"startButton\" onClick={this.onClose}>Back</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import Worker from './mpqcmp.worker.js';\r\n\r\nexport default function compress(mpq, progress) {\r\n  progress(\"Loading...\");\r\n  return new Promise((resolve, reject) => {\r\n    try {\r\n      const worker = new Worker();\r\n      worker.addEventListener(\"message\", ({data}) => {\r\n        switch (data.action) {\r\n        case \"result\":\r\n          resolve(data.result);\r\n          break;\r\n        case \"error\":\r\n          reject({message: data.error, stack: data.stack});\r\n          break;\r\n        case \"progress\":\r\n          progress(data.text, data.loaded, data.total);\r\n          break;\r\n        default:\r\n        }\r\n      });\r\n      worker.postMessage({action: \"run\", mpq});\r\n    } catch (e) {\r\n      reject(e);\r\n    }\r\n  });\r\n}\r\n","import React from 'react';\r\nimport './App.scss';\r\nimport classNames from 'classnames';\r\nimport ReactGA from 'react-ga';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTimes, faDownload } from '@fortawesome/free-solid-svg-icons';\r\nimport getPlayerName from './api/savefile';\r\n\r\nimport { mapStackTrace } from 'sourcemapped-stacktrace';\r\n\r\nimport create_fs from './fs';\r\nimport load_game from './api/loader';\r\nimport { SpawnSizes } from './api/load_spawn';\r\nimport CompressMpq from './mpqcmp';\r\n\r\nimport Peer from 'peerjs';\r\n\r\nwindow.Peer = Peer;\r\n\r\nif (process.env.NODE_ENV === 'production') {\r\n  ReactGA.initialize('UA-43123589-6');\r\n  ReactGA.pageview('/');\r\n}\r\n\r\nfunction reportLink(e, retail) {\r\n  const message = (e.message || \"Unknown error\") + (e.stack ? \"\\n\" + e.stack : \"\");\r\n  const url = new URL(\"https://github.com/d07RiV/diabloweb/issues/new\");\r\n  url.searchParams.set(\"body\",\r\n`**Description:**\r\n[Please describe what you were doing before the error occurred]\r\n\r\n**App version:**\r\nDiabloWeb ${process.env.VERSION} (${retail ? 'Retail' : 'Shareware'})\r\n\r\n**Error message:**\r\n    \r\n${message.split(\"\\n\").map(line => \"    \" + line).join(\"\\n\")}\r\n\r\n**User agent:**\r\n\r\n    ${navigator.userAgent}\r\n\r\n**Save file:**\r\n[Please attach the save file, if applicable. The error box should have a link to download the current save you were playing; alternatively, you can open dev console on the game page (F12) and type in ${\"`DownloadSaves()`\"}]\r\n`);\r\n  return url.toString();\r\n}\r\n\r\nfunction isDropFile(e) {\r\n  if (e.dataTransfer.items) {\r\n    for (let i = 0; i < e.dataTransfer.items.length; ++i) {\r\n      if (e.dataTransfer.items[i].kind === \"file\") {\r\n        return true;\r\n      }\r\n    }\r\n  } if (e.dataTransfer.files.length) {\r\n    return true;\r\n  }\r\n  return false;\r\n}\r\nfunction getDropFile(e) {\r\n  if (e.dataTransfer.items) {\r\n    for (let i = 0; i < e.dataTransfer.items.length; ++i) {\r\n      if (e.dataTransfer.items[i].kind === \"file\") {\r\n        return e.dataTransfer.items[i].getAsFile();\r\n      }\r\n    }\r\n  } if (e.dataTransfer.files.length) {\r\n    return e.dataTransfer.files[0];\r\n  }\r\n}\r\n\r\nconst TOUCH_MOVE = 0;\r\nconst TOUCH_RMB = 1;\r\nconst TOUCH_SHIFT = 2;\r\n\r\nfunction findKeyboardRule() {\r\n  for (let sheet of document.styleSheets) {\r\n    for (let rule of sheet.cssRules) {\r\n      if (rule.type === CSSRule.MEDIA_RULE && rule.conditionText === '(min-aspect-ratio: 3/1)') {\r\n        for (let sub of rule.cssRules) {\r\n          if (sub.selectorText === '.App.keyboard .Body .inner') {\r\n            return sub;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\nlet keyboardRule = null;\r\ntry {\r\n  keyboardRule = findKeyboardRule();\r\n} catch (e) {\r\n}\r\n\r\nconst Link = ({children, ...props}) => <a target=\"_blank\" rel=\"noopener noreferrer\" {...props}>{children}</a>;\r\n\r\nclass App extends React.Component {\r\n  files = new Map();\r\n  state = {started: false, loading: false, dropping: 0, has_spawn: false};\r\n  cursorPos = {x: 0, y: 0};\r\n\r\n  touchControls = false;\r\n  touchButtons = [null, null, null, null, null, null];\r\n  touchCtx = [null, null, null, null, null, null];\r\n  touchMods = [false, false, false, false, false, false];\r\n  touchBelt = [-1, -1, -1, -1, -1, -1];\r\n  maxKeyboard = 0;\r\n\r\n  fs = create_fs(true);\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.setTouch0 = this.setTouch_.bind(this, 0);\r\n    this.setTouch1 = this.setTouch_.bind(this, 1);\r\n    this.setTouch2 = this.setTouch_.bind(this, 2);\r\n    this.setTouch3 = this.setTouchBelt_.bind(this, 3);\r\n    this.setTouch4 = this.setTouchBelt_.bind(this, 4);\r\n    this.setTouch5 = this.setTouchBelt_.bind(this, 5);\r\n  }\r\n\r\n  componentDidMount() {\r\n    document.addEventListener(\"drop\", this.onDrop, true);\r\n    document.addEventListener(\"dragover\", this.onDragOver, true);\r\n    document.addEventListener(\"dragenter\", this.onDragEnter, true);\r\n    document.addEventListener(\"dragleave\", this.onDragLeave, true);\r\n\r\n    this.fs.then(fs => {\r\n      const spawn = fs.files.get('spawn.mpq');\r\n      if (spawn && SpawnSizes.includes(spawn.byteLength)) {\r\n        this.setState({has_spawn: true});\r\n      }\r\n      if ([...fs.files.keys()].filter(name => name.match(/\\.sv$/i)).length) {\r\n        this.setState({save_names: true});\r\n      }\r\n    });\r\n  }\r\n\r\n  onDrop = e => {\r\n    const file = getDropFile(e);\r\n    if (file) {\r\n      e.preventDefault();\r\n      if (this.compressMpq) {\r\n        this.compressMpq.start(file);\r\n      } else {\r\n        this.start(file);\r\n      }\r\n    }\r\n    this.setState({dropping: 0});\r\n  }\r\n  onDragEnter = e => {\r\n    e.preventDefault();\r\n    this.setDropping(1);\r\n  }\r\n  onDragOver = e => {\r\n    if (isDropFile(e)) {\r\n      e.preventDefault();\r\n    }\r\n  }\r\n  onDragLeave = e => {\r\n    this.setDropping(-1);\r\n  }\r\n  setDropping(inc) {\r\n    this.setState(({dropping}) => ({dropping: Math.max(dropping + inc, 0)}));\r\n  }\r\n\r\n  onError(message, stack) {\r\n    (async () => {\r\n      const errorObject = {message};\r\n      if (this.saveName) {\r\n        errorObject.save = await (await this.fs).fileUrl(this.saveName);\r\n      }\r\n      if (stack) {\r\n        mapStackTrace(stack, stack => {\r\n          this.setState(({error}) => !error && {error: {...errorObject, stack: stack.join(\"\\n\")}});\r\n        });\r\n      } else {\r\n        this.setState(({error}) => !error && {error: errorObject});\r\n      }\r\n    })();\r\n  }\r\n\r\n  openKeyboard(rect) {\r\n    if (rect) {\r\n      this.showKeyboard = {\r\n        left: `${(100 * (rect[0] - 10) / 640).toFixed(2)}%`,\r\n        top: `${(100 * (rect[1] - 10) / 480).toFixed(2)}%`,\r\n        width: `${(100 * (rect[2] - rect[0] + 20) / 640).toFixed(2)}%`,\r\n        height: `${(100 * (rect[3] - rect[1] + 20) / 640).toFixed(2)}%`,\r\n      };\r\n      this.maxKeyboard = rect[4];\r\n      this.element.classList.add(\"keyboard\");\r\n      Object.assign(this.keyboard.style, this.showKeyboard);\r\n      this.keyboard.focus();\r\n      if (keyboardRule) {\r\n        keyboardRule.style.transform = `translate(-50%, ${(-(rect[1] + rect[3]) * 56.25 / 960).toFixed(2)}vw)`;\r\n      }\r\n    } else {\r\n      this.showKeyboard = false;\r\n      this.element.classList.remove(\"keyboard\");\r\n      this.keyboard.blur();\r\n      this.keyboard.value = \"\";\r\n      this.keyboardNum = 0;\r\n    }\r\n  }\r\n\r\n  setCursorPos(x, y) {\r\n    const rect = this.canvas.getBoundingClientRect();\r\n    this.cursorPos = {\r\n      x: rect.left + (rect.right - rect.left) * x / 640,\r\n      y: rect.top + (rect.bottom - rect.top) * y / 480,\r\n    };\r\n    setTimeout(() => {\r\n      this.game(\"DApi_Mouse\", 0, 0, 0, x, y);\r\n    });\r\n  }\r\n\r\n  onProgress(progress) {\r\n    this.setState({progress});\r\n  }\r\n\r\n  onExit() {\r\n    if (!this.state.error) {\r\n      window.location.reload();\r\n    }\r\n  }\r\n\r\n  setCurrentSave(name) {\r\n    this.saveName = name;\r\n  }\r\n\r\n  showSaves = () => {\r\n    if (this.state.save_names === true) {\r\n      this.updateSaves().then(() => this.setState({show_saves: !this.state.show_saves}));\r\n    } else {\r\n      this.setState({show_saves: !this.state.show_saves});\r\n    }\r\n  }\r\n  updateSaves() {\r\n    return this.fs.then(fs => {\r\n      const saves = {};\r\n      [...fs.files.keys()].filter(name => name.match(/\\.sv$/i)).forEach(name => {\r\n        saves[name] = getPlayerName(fs.files.get(name).buffer, name);\r\n      });\r\n      this.setState({save_names: saves});\r\n    });\r\n  }\r\n  removeSave(name) {\r\n    if (window.confirm(`Are you sure you want to delete ${name}?`)) {\r\n      (async () => {\r\n        const fs = await this.fs;\r\n        await fs.delete(name.toLowerCase());\r\n        fs.files.delete(name.toLowerCase());\r\n        this.updateSaves();\r\n      })();\r\n    }\r\n  }\r\n  downloadSave(name) {\r\n    this.fs.then(fs => fs.download(name));\r\n  }\r\n\r\n  drawBelt(idx, slot) {\r\n    if (!this.canvas) return;\r\n    if (!this.touchButtons[idx]) {\r\n      return;\r\n    }\r\n    this.touchBelt[idx] = slot;\r\n    if (slot >= 0) {\r\n      this.touchButtons[idx].style.display = \"block\";\r\n      this.touchCtx[idx].drawImage(this.canvas, 205 + 29 * slot, 357, 28, 28, 0, 0, 28, 28);\r\n    } else {\r\n      this.touchButtons[idx].style.display = \"none\";\r\n    }\r\n  }\r\n\r\n  updateBelt(belt) {\r\n    if (belt) {\r\n      const used = new Set();\r\n      let pos = 3;\r\n      for (let i = 0; i < belt.length && pos < 6; ++i) {\r\n        if (belt[i] >= 0 && !used.has(belt[i])) {\r\n          this.drawBelt(pos++, i);\r\n          used.add(belt[i]);\r\n        }\r\n      }\r\n      for (; pos < 6; ++pos) {\r\n        this.drawBelt(pos, -1);\r\n      }\r\n    } else {\r\n      this.drawBelt(3, -1);\r\n      this.drawBelt(4, -1);\r\n      this.drawBelt(5, -1);\r\n    }\r\n  }\r\n\r\n  start(file) {\r\n    if (file && file.name.match(/\\.sv$/i)) {\r\n      this.fs.then(fs => fs.upload(file)).then(() => {\r\n        this.updateSaves();\r\n      });\r\n      return;\r\n    }\r\n    if (this.state.show_saves) {\r\n      return;\r\n    }\r\n    if (file && !file.name.match(/\\.mpq$/i)) {\r\n      window.alert('Please select an MPQ file. If you downloaded the installer from GoG, you will need to install it on PC and use the MPQ file from the installation folder.');\r\n      return;\r\n    }\r\n\r\n    document.removeEventListener(\"drop\", this.onDrop, true);\r\n    document.removeEventListener(\"dragover\", this.onDragOver, true);\r\n    document.removeEventListener(\"dragenter\", this.onDragEnter, true);\r\n    document.removeEventListener(\"dragleave\", this.onDragLeave, true);\r\n    this.setState({dropping: 0});\r\n\r\n    const retail = !!(file && !file.name.match(/^spawn\\.mpq$/i));\r\n    if (process.env.NODE_ENV === 'production') {\r\n      ReactGA.event({\r\n        category: 'Game',\r\n        action: retail ? 'Start Retail' : 'Start Shareware',\r\n      });\r\n    }\r\n\r\n    this.setState({loading: true, retail});\r\n\r\n    load_game(this, file, !retail).then(game => {\r\n      this.game = game;\r\n\r\n      document.addEventListener('mousemove', this.onMouseMove, true);\r\n      document.addEventListener('mousedown', this.onMouseDown, true);\r\n      document.addEventListener('mouseup', this.onMouseUp, true);\r\n      document.addEventListener('keydown', this.onKeyDown, true);\r\n      document.addEventListener('keyup', this.onKeyUp, true);\r\n      document.addEventListener('contextmenu', this.onMenu, true);\r\n\r\n      document.addEventListener('touchstart', this.onTouchStart, {passive: false, capture: true});\r\n      document.addEventListener('touchmove', this.onTouchMove, {passive: false, capture: true});\r\n      document.addEventListener('touchend', this.onTouchEnd, {passive: false, capture: true});\r\n\r\n      document.addEventListener('pointerlockchange', this.onPointerLockChange);\r\n      window.addEventListener('resize', this.onResize);\r\n\r\n      this.setState({started: true});\r\n    }, e => this.onError(e.message, e.stack));\r\n  }\r\n\r\n  pointerLocked() {\r\n    return document.pointerLockElement === this.canvas || document.mozPointerLockElement === this.canvas;\r\n  }\r\n\r\n  mousePos(e) {\r\n    const rect = this.canvas.getBoundingClientRect();\r\n    if (this.pointerLocked()) {\r\n      this.cursorPos.x = Math.max(rect.left, Math.min(rect.right, this.cursorPos.x + e.movementX));\r\n      this.cursorPos.y = Math.max(rect.top, Math.min(rect.bottom, this.cursorPos.y + e.movementY));\r\n    } else {\r\n      this.cursorPos = {x: e.clientX, y: e.clientY};\r\n    }\r\n    return {\r\n      x: Math.max(0, Math.min(Math.round((this.cursorPos.x - rect.left) / (rect.right - rect.left) * 640), 639)),\r\n      y: Math.max(0, Math.min(Math.round((this.cursorPos.y - rect.top) / (rect.bottom - rect.top) * 480), 479)),\r\n    };\r\n  }\r\n\r\n  mouseButton(e) {\r\n    switch (e.button) {\r\n    case 0: return 1;\r\n    case 1: return 4;\r\n    case 2: return 2;\r\n    case 3: return 5;\r\n    case 4: return 6;\r\n    default: return 1;\r\n    }\r\n  }\r\n  eventMods(e) {\r\n    return ((e.shiftKey || this.touchMods[TOUCH_SHIFT]) ? 1 : 0) + (e.ctrlKey ? 2 : 0) + (e.altKey ? 4 : 0) + (e.touches ? 8 : 0);\r\n  }\r\n\r\n  onResize = () => {\r\n    document.exitPointerLock();\r\n  }\r\n\r\n  onPointerLockChange = () => {\r\n    if (window.screen && window.innerHeight === window.screen.height && !this.pointerLocked()) {\r\n      // assume that the user pressed escape\r\n      this.game(\"DApi_Key\", 0, 0, 27);\r\n      this.game(\"DApi_Key\", 1, 0, 27);\r\n    }\r\n  }\r\n\r\n  onMouseMove = e => {\r\n    if (!this.canvas) return;\r\n    const {x, y} = this.mousePos(e);\r\n    this.game(\"DApi_Mouse\", 0, 0, this.eventMods(e), x, y);\r\n    e.preventDefault();\r\n  }\r\n\r\n  onMouseDown = e => {\r\n    if (!this.canvas) return;\r\n    if (e.target === this.keyboard) {\r\n      return;\r\n    }\r\n    if (this.touchControls) {\r\n      this.touchControls = false;\r\n      this.element.classList.remove(\"touch\");\r\n    }\r\n    const {x, y} = this.mousePos(e);\r\n    if (window.screen && window.innerHeight === window.screen.height) {\r\n      // we're in fullscreen, let's get pointer lock!\r\n      if (!this.pointerLocked()) {\r\n        this.canvas.requestPointerLock();\r\n      }\r\n    }\r\n    this.game(\"DApi_Mouse\", 1, this.mouseButton(e), this.eventMods(e), x, y);\r\n    e.preventDefault();\r\n  }\r\n\r\n  onMouseUp = e => {\r\n    if (!this.canvas) return;\r\n    if (e.target === this.keyboard) {\r\n      //return;\r\n    }\r\n    const {x, y} = this.mousePos(e);\r\n    this.game(\"DApi_Mouse\", 2, this.mouseButton(e), this.eventMods(e), x, y);\r\n    if (e.target !== this.keyboard) {\r\n      e.preventDefault();\r\n    }\r\n  }\r\n\r\n  onKeyDown = e => {\r\n    if (!this.canvas) return;\r\n    this.game(\"DApi_Key\", 0, this.eventMods(e), e.keyCode);\r\n    if (!this.showKeyboard && (e.keyCode >= 32 && e.key.length === 1)) {\r\n      this.game(\"DApi_Char\", e.key.charCodeAt(0));\r\n    } else if (e.keyCode === 8 || e.keyCode === 13) {\r\n      this.game(\"DApi_Char\", e.keyCode);\r\n    }\r\n    this.clearKeySel();\r\n    if (!this.showKeyboard) {\r\n      if (e.keyCode === 8 || e.keyCode === 9 || (e.keyCode >= 112 && e.keyCode <= 119)) {\r\n        e.preventDefault();\r\n      }\r\n    }\r\n  }\r\n\r\n  onMenu = e => {\r\n    e.preventDefault();\r\n  }\r\n\r\n  onKeyUp = e => {\r\n    if (!this.canvas) return;\r\n    this.game(\"DApi_Key\", 1, this.eventMods(e), e.keyCode);\r\n    this.clearKeySel();\r\n  }\r\n\r\n  clearKeySel() {\r\n    if (this.showKeyboard) {\r\n      const len = this.keyboard.value.length;\r\n      this.keyboard.setSelectionRange(len, len);\r\n    }\r\n  }\r\n\r\n  onKeyboardInner(flags) {\r\n    if (this.showKeyboard) {\r\n      const text = this.keyboard.value;\r\n      let valid;\r\n      if (this.maxKeyboard > 0) {\r\n        valid = (text.match(/[\\x20-\\x7E]/g) || []).join(\"\").substring(0, this.maxKeyboard);\r\n      } else {\r\n        const maxValue = -this.maxKeyboard;\r\n        if (text.match(/^\\d*$/)) {\r\n          this.keyboardNum = Math.min(text.length ? parseInt(text) : 0, maxValue);\r\n        }\r\n        valid = (this.keyboardNum ? this.keyboardNum.toString() : \"\");\r\n      }\r\n      if (text !== valid) {\r\n        this.keyboard.value = valid;\r\n      }\r\n      this.clearKeySel();\r\n      this.game(\"text\", valid, flags);\r\n    }\r\n  }\r\n  onKeyboard = () => {\r\n    this.onKeyboardInner(0);\r\n  }\r\n  onKeyboardBlur = () => {\r\n    this.onKeyboardInner(1);\r\n  }\r\n\r\n  parseFile = e => {\r\n    const files = e.target.files;\r\n    if (files.length > 0) {\r\n      this.start(files[0]);\r\n    }\r\n  }\r\n\r\n  parseSave = e => {\r\n    const files = e.target.files;\r\n    if (files.length > 0) {\r\n      this.start(files[0]);\r\n    }\r\n  }\r\n\r\n  touchButton = null;\r\n  touchCanvas = null;\r\n\r\n  setTouchMod(index, value, use) {\r\n    if (index < 3) {\r\n      this.touchMods[index] = value;\r\n      if (this.touchButtons[index]) {\r\n        this.touchButtons[index].classList.toggle(\"active\", value);\r\n      }\r\n    } else if (use && this.touchBelt[index] >= 0) {\r\n      const now = performance.now();\r\n      if (!this.beltTime || now - this.beltTime > 750) {\r\n        this.game(\"DApi_Char\", 49 + this.touchBelt[index]);\r\n        this.beltTime = now;\r\n      }\r\n    }\r\n  }\r\n\r\n  updateTouchButton(touches, release) {\r\n    let touchOther = null;\r\n    if (!this.touchControls) {\r\n      this.touchControls = true;\r\n      this.element.classList.add(\"touch\");\r\n    }\r\n    const btn = this.touchButton;\r\n    for (let {target, identifier, clientX, clientY} of touches) {\r\n      if (btn && btn.id === identifier && this.touchButtons[btn.index] === target) {\r\n        if (touches.length > 1) {\r\n          btn.stick = false;\r\n        }\r\n        btn.clientX = clientX;\r\n        btn.clientY = clientY;\r\n        this.touchCanvas = [...touches].find(t => t.identifier !== identifier);\r\n        if (this.touchCanvas) {\r\n          this.touchCanvas = {clientX: this.touchCanvas.clientX, clientY: this.touchCanvas.clientY};\r\n        }\r\n        delete this.panPos;\r\n        return this.touchCanvas != null;\r\n      }\r\n      const idx = this.touchButtons.indexOf(target);\r\n      if (idx >= 0 && !touchOther) {\r\n        touchOther = {id: identifier, index: idx, stick: true, original: this.touchMods[idx], clientX, clientY};\r\n      }\r\n    }\r\n    if (btn && !touchOther && release && btn.stick) {\r\n      const rect = this.touchButtons[btn.index].getBoundingClientRect();\r\n      const {clientX, clientY} = btn;\r\n      if (clientX >= rect.left && clientX < rect.right && clientY >= rect.top && clientY < rect.bottom) {\r\n        this.setTouchMod(btn.index, !btn.original, true);\r\n      } else {\r\n        this.setTouchMod(btn.index, btn.original);\r\n      }\r\n    } else if (btn) {\r\n      this.setTouchMod(btn.index, false);\r\n    }\r\n    this.touchButton = touchOther;\r\n    if (touchOther) {\r\n      this.setTouchMod(touchOther.index, true);\r\n      if (touchOther.index === TOUCH_MOVE) {\r\n        this.setTouchMod(TOUCH_RMB, false);\r\n      } else if (touchOther.index === TOUCH_RMB) {\r\n        this.setTouchMod(TOUCH_MOVE, false);\r\n      }\r\n      delete this.panPos;\r\n    } else if (touches.length === 2) {\r\n      const x = (touches[1].clientX + touches[0].clientX) / 2, y = (touches[1].clientY + touches[0].clientY) / 2;\r\n      if (this.panPos) {\r\n        const dx = x - this.panPos.x, dy = y - this.panPos.y;\r\n        const step = this.canvas.offsetHeight / 12;\r\n        if (Math.max(Math.abs(dx), Math.abs(dy)) > step) {\r\n          let key;\r\n          if (Math.abs(dx) > Math.abs(dy)) {\r\n            key = (dx > 0 ? 0x25 : 0x27);\r\n          } else {\r\n            key = (dy > 0 ? 0x26 : 0x28);\r\n          }\r\n          this.game(\"DApi_Key\", 0, 0, key);\r\n          // key up is ignored anyway\r\n          this.panPos = {x, y};\r\n        }\r\n      } else {\r\n        this.game(\"DApi_Mouse\", 0, 0, 24, 320, 180);\r\n        this.game(\"DApi_Mouse\", 2, 1, 24, 320, 180);\r\n        this.panPos = {x, y};\r\n      }\r\n      this.touchCanvas = null;\r\n      return false;\r\n    } else {\r\n      delete this.panPos;\r\n    }\r\n    this.touchCanvas = [...touches].find(t => !touchOther || t.identifier !== touchOther.id);\r\n    if (this.touchCanvas) {\r\n      this.touchCanvas = {clientX: this.touchCanvas.clientX, clientY: this.touchCanvas.clientY};\r\n    }\r\n    return this.touchCanvas != null;\r\n  }\r\n\r\n  onTouchStart = e => {\r\n    if (!this.canvas) return;\r\n    if (e.target === this.keyboard) {\r\n      return;\r\n    } else {\r\n      this.keyboard.blur();\r\n    }\r\n    e.preventDefault();\r\n    if (this.updateTouchButton(e.touches, false)) {\r\n      const {x, y} = this.mousePos(this.touchCanvas);\r\n      this.game(\"DApi_Mouse\", 0, 0, this.eventMods(e), x, y);\r\n      if (!this.touchMods[TOUCH_MOVE]) {\r\n        this.game(\"DApi_Mouse\", 1, this.touchMods[TOUCH_RMB] ? 2 : 1, this.eventMods(e), x, y);\r\n      }\r\n    }\r\n  }\r\n  onTouchMove = e => {\r\n    if (!this.canvas) return;\r\n    if (e.target === this.keyboard) {\r\n      return;\r\n    }\r\n    e.preventDefault();\r\n    if (this.updateTouchButton(e.touches, false)) {\r\n      const {x, y} = this.mousePos(this.touchCanvas);\r\n      this.game(\"DApi_Mouse\", 0, 0, this.eventMods(e), x, y);\r\n    }\r\n  }\r\n  onTouchEnd = e => {\r\n    if (!this.canvas) return;\r\n    if (e.target === this.keyboard) {\r\n      //return;\r\n    } else {\r\n      e.preventDefault();\r\n    }\r\n    const prevTc = this.touchCanvas;\r\n    this.updateTouchButton(e.touches, true);\r\n    if (prevTc && !this.touchCanvas) {\r\n      const {x, y} = this.mousePos(prevTc);\r\n      this.game(\"DApi_Mouse\", 2, 1, this.eventMods(e), x, y);\r\n      this.game(\"DApi_Mouse\", 2, 2, this.eventMods(e), x, y);\r\n\r\n      if (this.touchMods[TOUCH_RMB] && (!this.touchButton || this.touchButton.index !== TOUCH_RMB)) {\r\n        this.setTouchMod(TOUCH_RMB, false);\r\n      }\r\n    }\r\n    if (!document.fullscreenElement) {\r\n      this.element.requestFullscreen();\r\n    }\r\n  }\r\n\r\n  setCanvas = e => this.canvas = e;\r\n  setElement = e => this.element = e;\r\n  setKeyboard = e => this.keyboard = e;\r\n  setTouch_(i, e) {\r\n    this.touchButtons[i] = e;\r\n  }\r\n  setTouchBelt_(i, e) {\r\n    this.touchButtons[i] = e;\r\n    if (e) {\r\n      const canvas = document.createElement(\"canvas\");\r\n      canvas.width = 28;\r\n      canvas.height = 28;\r\n      e.appendChild(canvas);\r\n      this.touchCtx[i] = canvas.getContext(\"2d\");\r\n    } else {\r\n      this.touchCtx[i] = null;\r\n    }\r\n  }\r\n\r\n  renderUi() {\r\n    const {started, loading, error, progress, has_spawn, save_names, show_saves, compress} = this.state;\r\n    if (show_saves && typeof save_names === \"object\") {\r\n      const plrClass = [\"Warrior\", \"Rogue\", \"Sorcerer\"];\r\n      return (\r\n        <div className=\"start\">\r\n          <ul className=\"saveList\">\r\n            {Object.entries(save_names).map(([name, info]) => <li key={name}>\r\n              {name}{info ? <span className=\"info\">{info.name} (lv. {info.level} {plrClass[info.cls]})</span> : \"\"}\r\n              <FontAwesomeIcon className=\"btnDownload\" icon={faDownload} onClick={() => this.downloadSave(name)}/>\r\n              <FontAwesomeIcon className=\"btnRemove\" icon={faTimes} onClick={() => this.removeSave(name)}/>\r\n            </li>)}\r\n          </ul>\r\n          <form>\r\n            <label htmlFor=\"loadFile\" className=\"startButton\">Upload Save</label>\r\n            <input accept=\".sv\" type=\"file\" id=\"loadFile\" style={{display: \"none\"}} onChange={this.parseSave}/>\r\n          </form>\r\n          <div className=\"startButton\" onClick={() => this.setState({show_saves: false})}>Back</div>\r\n        </div>\r\n      );\r\n    } else if (compress) {\r\n      return (\r\n        <CompressMpq api={this} ref={e => this.compressMpq = e}/>\r\n      );\r\n    } else if (error) {\r\n      return (\r\n        <Link className=\"error\" href={reportLink(error, this.state.retail)}>\r\n          <p className=\"header\">The following error has occurred:</p>\r\n          <p className=\"body\">{error.message}</p>\r\n          <p className=\"footer\">Click to create an issue on GitHub</p>\r\n          {error.save != null && <a href={error.save} download={this.saveName}>Download save file</a>}\r\n        </Link>\r\n      );\r\n    } else if (loading && !started) {\r\n      return (\r\n        <div className=\"loading\">\r\n          {(progress && progress.text) || 'Loading...'}\r\n          {progress != null && !!progress.total && (\r\n            <span className=\"progressBar\"><span><span style={{width: `${Math.round(100 * progress.loaded / progress.total)}%`}}/></span></span>\r\n          )}\r\n        </div>\r\n      );\r\n    } else if (!started) {\r\n      return (\r\n        <div className=\"start\">\r\n          <p>\r\n            This is a web port of the original Diablo game, based on source code reconstructed by\r\n            GalaXyHaXz and devilution team. The project page with information and links can be found over here <Link href=\"https://github.com/d07RiV/diabloweb\">https://github.com/d07RiV/diabloweb</Link>\r\n          </p>\r\n          <p>\r\n            If you own the original game, you can drop the original DIABDAT.MPQ onto this page or click the button below to start playing.\r\n            The game can be purchased from <Link href=\"https://www.gog.com/game/diablo\">GoG</Link>.\r\n            {\" \"}<span className=\"link\" onClick={() => this.setState({compress: true})}>Click here to compress the MPQ, greatly reducing its size.</span>\r\n          </p>\r\n          {!has_spawn && (\r\n            <p>\r\n              Or you can play the shareware version for free (50MB download).\r\n            </p>\r\n          )}\r\n          <form>\r\n            <label htmlFor=\"loadFile\" className=\"startButton\">Select MPQ</label>\r\n            <input accept=\".mpq\" type=\"file\" id=\"loadFile\" style={{display: \"none\"}} onChange={this.parseFile}/>\r\n          </form>\r\n          <div className=\"startButton\" onClick={() => this.start()}>Play Shareware</div>\r\n          {!!save_names && <div className=\"startButton\" onClick={this.showSaves}>Manage Saves</div>}\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {started, error, dropping} = this.state;\r\n    return (\r\n      <div className={classNames(\"App\", {touch: this.touchControls, started, dropping, keyboard: !!this.showKeyboard})} ref={this.setElement}>\r\n        <div className=\"touch-ui touch-mods\">\r\n          <div className={classNames(\"touch-button\", \"touch-button-0\", {active: this.touchMods[0]})} ref={this.setTouch0}/>\r\n          <div className={classNames(\"touch-button\", \"touch-button-1\", {active: this.touchMods[1]})} ref={this.setTouch1}/>\r\n          <div className={classNames(\"touch-button\", \"touch-button-2\", {active: this.touchMods[2]})} ref={this.setTouch2}/>\r\n        </div>\r\n        <div className=\"touch-ui touch-belt\">\r\n          <div className={classNames(\"touch-button\", \"touch-button-0\")} ref={this.setTouch3}/>\r\n          <div className={classNames(\"touch-button\", \"touch-button-1\")} ref={this.setTouch4}/>\r\n          <div className={classNames(\"touch-button\", \"touch-button-2\")} ref={this.setTouch5}/>\r\n        </div>\r\n        <div className=\"Body\">\r\n          <div className=\"inner\">\r\n            {!error && <canvas ref={this.setCanvas} width={640} height={480}/>}\r\n            <input type=\"text\" className=\"keyboard\" onChange={this.onKeyboard} onBlur={this.onKeyboardBlur} ref={this.setKeyboard} spellCheck={false} style={this.showKeyboard || {}}/>\r\n          </div>\r\n        </div>\r\n        <div className=\"BodyV\">\r\n          {this.renderUi()}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './reset.css';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\nserviceWorker.register({\r\n  onUpdate() {\r\n  },\r\n});\r\n"],"sourceRoot":""}