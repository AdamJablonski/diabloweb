{"version":3,"sources":["fs.js","api/game.worker.js","../node_modules/peerjs/dist sync","serviceWorker.js","api/explode.js","api/codec.js","api/savefile.js","api/sound.js","api/load_spawn.js","api/packet.js","api/webrtc.js","api/loader.js","App.js","index.js"],"names":["downloadFile","_callee","store","name","file","blob","url","lnk","C_Projects_diabloweb_diabloweb_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default","a","wrap","_context","prev","next","get","toLowerCase","sent","Blob","type","URL","createObjectURL","document","createElement","setAttribute","body","appendChild","click","removeChild","revokeObjectURL","console","error","concat","stop","downloadSaves","_callee2","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_iterator","_step","_context2","undefined","keys","t0","Symbol","iterator","done","value","match","t1","return","finish","readFile","Promise","resolve","reject","reader","FileReader","onload","result","onerror","onabort","readAsArrayBuffer","uploadFile","_callee3","files","data","_context3","Uint8Array","set","abrupt","create_fs","_x7","_create_fs","apply","this","arguments","_callee5","load","_i","_Object$entries","_ref3","_ref2","_context5","IdbKvStore","Map","Object","json","entries","call","length","C_Projects_diabloweb_diabloweb_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","window","DownloadFile","DownloadSaves","update","delete","remove","clear","download","upload","fileUrl","_fileUrl","C_Projects_diabloweb_diabloweb_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__","mark","_callee4","_context4","_x8","t2","module","exports","Worker","__webpack_require__","p","webpackEmptyContext","req","e","Error","code","id","isLocalhost","Boolean","location","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","log","onUpdate","onSuccess","catch","CMP_BINARY","CMP_ASCII","CMP_NO_ERROR","CMP_INVALID_DICTSIZE","CMP_INVALID_MODE","CMP_BAD_DATA","CMP_ABORT","PKDCL_OK","PKDCL_STREAM_END","DistBits","DistCode","ExLenBits","LenBase","Uint16Array","LenBits","LenCode","ChBitsAsc","ChCodeAsc","GenDecodeTabs","positions","start_indexes","length_bits","elements","i","index","WasteBits","pWork","nBits","extra_bits","bit_buff","in_pos","in_bytes","read_buf","in_buff","DecodeLit","length_code","LengthCodes","extra_length_bits","extra_length","ctype","uncompressed_byte","offs2C34","offs2D34","offs2E34","offs2EB4","DecodeDist","rep_length","distance","dist_pos_code","DistPosCodes","dsize_bits","dsize_mask","explode","write_buf","buffer","ArrayBuffer","out_buff","pChCodeAsc","count","bits_asc","acc","add","GenAscTabs","next_literal","outputPos","minus_dist","target","source","subarray","copyWithin","Expand","W","Uint32Array","SHA1CircularShift","shift","SHA1","classCallCheck","digest","digest8","u8","u32","byteOffset","input","A","B","C","D","E","temp","Random","seed","codec_decode","password","size","last_size","sha","rand","key","k32","pw","charCodeAt","input8","codec_init_key","size32","data32","buf32","buf","j","pkzip_decompress","out_size","output","out_pos","dst","Math","min","src","hashtable","b","decrypt","decrypt8","hash","seed1","seed2","ch","Flags","MpqReader","byteLength","readHeader","sizeId","hashOffset","blockOffset","hashCount","blockCount","hashTable","readTable","blockTable","blockSize","offset","slice","keyA","keyB","fileIndex","block","filePos","cmpSize","fileSize","flags","pos","max","lastIndexOf","substring","path_name","raw","numBlocks","floor","tableSize","blocks","blocksSrc","oPos","cSize","uSize","tmp","init_sound","AudioContext","webkitAudioContext","StereoPannerNode","create_sound","duplicate_sound","play_sound","set_volume","stop_sound","delete_sound","context","sounds","create_sound_raw","channels","rate","createBuffer","getChannelData","gain","createGain","panner","pan","decodeAudioData","srcId","volume","loop","pow","relVolume","createBufferSource","node","connect","destination","start","stop_all","sound","slicedToArray","err","SpawnSizes","load_spawn","_x","_x2","_load_spawn","api","fs","spawn","regenerator_default","includes","axios","request","process","responseType","onDownloadProgress","onProgress","text","loaded","total","headers","Cache-Control","buffer_reader","createClass","read8","String","fromCharCode","toConsumableArray","read32","buffer_writer","write8","write32","rest","RejectionReason","JOIN_SUCCESS","JOIN_ALREADY_IN_GAME","JOIN_GAME_NOT_FOUND","JOIN_INCORRECT_PASSWORD","JOIN_VERSION_MISMATCH","JOIN_GAME_FULL","CREATE_GAME_EXISTS","read_packet","types","cls","values","find","packet","read","packet_size","write_packet","write","make_batch","read16","packets","push","reduce","sum","_ref","writer","write16","server_packet","info","version","_ref4","game_list","games","read_str","_ref5","_ref6","_ref7","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","_ref9","write_str","join_accept","cookie","difficulty","_ref10","join_reject","reason","_ref11","_ref12","disconnect","_ref13","message","payload","_ref14","_ref15","turn","_ref16","batch","client_packet","_ref17","create_game","_ref18","_ref19","join_game","_ref20","_ref21","leave_game","drop_player","_ref22","_ref23","_ref24","_ref25","PeerID","Options","host","port","secure","webrtc_server","onMessage","onClose","_this","peer","Peer","on","conn","onConnect","players","myplr","random","onError","off","onOpen","setTimeout","_this2","_read_packet","pkt","send","handle","drop","mask","destroy","close","webrtc_client","_this3","pending","needUnreg","unreg","clearTimeout","timeout","_read_packet2","webrtc_open","server","client","_read_packet3","onRender","ctx","bitmap","images","clip","belt","transferFromImageBitmap","x","y","w","h","image","createImageData","putImageData","save","font","x0","y0","x1","y1","beginPath","rect","str","color","r","g","fillStyle","fillText","restore","updateBelt","audio","mpq","offscreen","canvas","getContext","alpha","worker","packetQueue","webrtc","addEventListener","action","func","_len","params","Array","_key","postMessage","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","_ref8","setCursorPos","openKeyboard","stack","onExit","setCurrentSave","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","transfer","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","setInterval","load_game","do_load_game","reportLink","retail","searchParams","split","map","line","join","userAgent","toString","ReactGA","initialize","pageview","TOUCH_MOVE","TOUCH_RMB","keyboardRule","styleSheets","sheet","cssRules","rule","CSSRule","MEDIA_RULE","conditionText","sub","selectorText","findKeyboardRule","Link","children","props","objectWithoutProperties","react_default","assign","rel","App","possibleConstructorReturn","getPrototypeOf","started","loading","dropping","has_spawn","cursorPos","touchControls","touchButtons","touchCtx","touchMods","touchBelt","maxKeyboard","onDrop","dataTransfer","items","kind","getAsFile","getDropFile","preventDefault","setState","onDragEnter","setDropping","onDragOver","isDropFile","onDragLeave","showSaves","save_names","updateSaves","show_saves","onResize","exitPointerLock","onPointerLockChange","screen","innerHeight","height","pointerLocked","game","onMouseMove","_this$mousePos","mousePos","eventMods","onMouseDown","keyboard","element","classList","_this$mousePos2","requestPointerLock","mouseButton","onMouseUp","_this$mousePos3","onKeyDown","keyCode","showKeyboard","clearKeySel","onMenu","onKeyUp","onKeyboard","onKeyboardInner","onKeyboardBlur","parseFile","parseSave","touchButton","touchCanvas","onTouchStart","blur","updateTouchButton","touches","_this$mousePos4","onTouchMove","_this$mousePos5","onTouchEnd","prevTc","_this$mousePos6","setTouchMod","fullscreenElement","requestFullscreen","setCanvas","setElement","setKeyboard","setTouch0","setTouch_","bind","assertThisInitialized","setTouch1","setTouch2","setTouch3","setTouchBelt_","setTouch4","setTouch5","filter","inc","asyncToGenerator","errorObject","saveName","mapStackTrace","objectSpread","left","toFixed","top","width","style","focus","transform","keyboardNum","_this4","getBoundingClientRect","right","bottom","progress","reload","_this5","saves","forEach","hero","getPassword","nameEnd","indexOf","level","getPlayerName","_this6","confirm","idx","slot","display","drawImage","used","Set","has","drawBelt","_this7","removeEventListener","event","category","passive","capture","alert","pointerLockElement","mozPointerLockElement","movementX","movementY","clientX","clientY","round","button","shiftKey","ctrlKey","altKey","len","setSelectionRange","valid","maxValue","parseInt","use","toggle","now","performance","beltTime","release","_this8","touchOther","btn","_loop","identifier","stick","t","panPos","v","original","_ret","dx","dy","step","offsetHeight","abs","_this9","_this$state","plrClass","className","classNames","touch","ref","index_es","icon","faDownload","onClick","downloadSave","faTimes","removeSave","htmlFor","accept","onChange","active","onBlur","spellCheck","App_Link","href","React","Component","ReactDOM","render","src_App_0","getElementById","origin","fetch","response","contentType","status","ready","unregister","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.e86739d7.chunk.js","sourcesContent":["import IdbKvStore from  'idb-kv-store';\r\n\r\n/*const importStorage = () => new Promise((resolve, reject) => {\r\n  let done = false;\r\n  const frame = document.createElement('iframe');\r\n  window.addEventListener('message', ({data}) => {\r\n    if (data.method === 'storage' && !done) {\r\n      done = true;\r\n      resolve(data.files);\r\n      frame.contentWindow.postMessage({method: 'clear'}, '*');\r\n    }\r\n  });\r\n  frame.addEventListener('load', () => {\r\n    frame.contentWindow.postMessage({method: 'transfer'}, '*');\r\n  });\r\n  frame.addEventListener('error', () => {\r\n    if (!done) {\r\n      done = true;\r\n      resolve(null);\r\n    }\r\n  });\r\n  frame.src = \"https://diablo.rivsoft.net/storage.html\";\r\n  frame.style.display = \"none\";\r\n  document.body.appendChild(frame);\r\n  setTimeout(() => {\r\n    if (!done) {\r\n      done = true;\r\n      resolve(null);\r\n    }\r\n  }, 10000);\r\n});*/\r\n\r\nasync function downloadFile(store, name) {\r\n  const file = await store.get(name.toLowerCase());\r\n  if (file) {\r\n    const blob = new Blob([file], {type: 'binary/octet-stream'});\r\n    const url = URL.createObjectURL(blob);\r\n    const lnk = document.createElement('a');\r\n    lnk.setAttribute('href', url);\r\n    lnk.setAttribute('download', name);\r\n    document.body.appendChild(lnk);\r\n    lnk.click();\r\n    document.body.removeChild(lnk);\r\n    URL.revokeObjectURL(url);\r\n  } else {\r\n    console.error(`File ${name} does not exist`);\r\n  }\r\n}\r\n\r\nasync function downloadSaves(store) {\r\n  for (let name of await store.keys()) {\r\n    if (name.match(/\\.sv$/i)) {\r\n      downloadFile(store, name);\r\n    }\r\n  }\r\n}\r\n\r\nconst readFile = file => new Promise((resolve, reject) => {\r\n  const reader = new FileReader();\r\n  reader.onload = () => resolve(reader.result);\r\n  reader.onerror = () => reject(reader.error);\r\n  reader.onabort = () => reject();\r\n  reader.readAsArrayBuffer(file);\r\n});\r\nasync function uploadFile(store, files, file) {\r\n  const data = new Uint8Array(await readFile(file));\r\n  files.set(file.name.toLowerCase(), data);\r\n  return store.set(file.name.toLowerCase(), data);\r\n}\r\n\r\nexport default async function create_fs(load) {\r\n  try {\r\n    const store = new IdbKvStore('diablo_fs');\r\n    const files = new Map();\r\n    for (let [name, data] of Object.entries(await store.json())) {\r\n      files.set(name, data);\r\n    }\r\n    /*if (load) {\r\n      const files = await importStorage();\r\n      if (files) {\r\n        for (let [name, data] of files) {\r\n          files.set(name, data);\r\n          store.set(name, data);\r\n        }\r\n      }\r\n    }*/\r\n    window.DownloadFile = name => downloadFile(store, name);\r\n    window.DownloadSaves = () => downloadSaves(store);\r\n    return {\r\n      files,\r\n      update: (name, data) => store.set(name, data),\r\n      delete: name => store.remove(name),\r\n      clear: () => store.clear(),\r\n      download: name => downloadFile(store, name),\r\n      upload: file => uploadFile(store, files, file),\r\n      fileUrl: async name => {\r\n        const file = await store.get(name.toLowerCase());\r\n        if (file) {\r\n          const blob = new Blob([file], {type: 'binary/octet-stream'});\r\n          return URL.createObjectURL(blob);\r\n        }\r\n      },\r\n    };\r\n  } catch (e) {\r\n    window.DownloadFile = () => console.error('IndexedDB is not supported');\r\n    window.DownloadSaves = () => console.error('IndexedDB is not supported');\r\n    return {\r\n      files: new Map(),\r\n      update: () => Promise.resolve(),\r\n      delete: () => Promise.resolve(),\r\n      clear: () => Promise.resolve(),\r\n      download: () => Promise.resolve(),\r\n      upload: () => Promise.resolve(),\r\n      fileUrl: () => Promise.resolve(),\r\n    };\r\n  }  \r\n}\r\n","module.exports = function() {\n  return new Worker(__webpack_public_path__ + \"0a48e315cd2ab28d7369.worker.js\");\n};","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 69;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","export const CMP_BINARY = 0; // Binary compression\r\nexport const CMP_ASCII = 1; // Ascii compression\r\nexport const CMP_NO_ERROR = 0;\r\nexport const CMP_INVALID_DICTSIZE = 1;\r\nexport const CMP_INVALID_MODE = 2;\r\nexport const CMP_BAD_DATA = 3;\r\nexport const CMP_ABORT = 4;\r\nexport const CMP_IMPLODE_DICT_SIZE1 = 1024; // Dictionary size of 1024\r\nexport const CMP_IMPLODE_DICT_SIZE2 = 2048; // Dictionary size of 2048\r\nexport const CMP_IMPLODE_DICT_SIZE3 = 4096; // Dictionary size of 4096\r\n\r\nexport const PKDCL_OK = 0;\r\nexport const PKDCL_STREAM_END = 1; // All data from the input stream is read\r\nexport const PKDCL_NEED_DICT = 2; // Need more data (dictionary)\r\nexport const PKDCL_CONTINUE = 10; // Internal flag, not returned to user\r\nexport const PKDCL_GET_INPUT = 11; // Internal flag, not returned to user\r\n\r\nconst DistBits = new Uint8Array([\r\n  0x02, 0x04, 0x04, 0x05, 0x05, 0x05, 0x05, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06,\r\n  0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07,\r\n  0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07,\r\n  0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08\r\n]);\r\n\r\nconst DistCode = new Uint8Array([\r\n  0x03, 0x0D, 0x05, 0x19, 0x09, 0x11, 0x01, 0x3E, 0x1E, 0x2E, 0x0E, 0x36, 0x16, 0x26, 0x06, 0x3A,\r\n  0x1A, 0x2A, 0x0A, 0x32, 0x12, 0x22, 0x42, 0x02, 0x7C, 0x3C, 0x5C, 0x1C, 0x6C, 0x2C, 0x4C, 0x0C,\r\n  0x74, 0x34, 0x54, 0x14, 0x64, 0x24, 0x44, 0x04, 0x78, 0x38, 0x58, 0x18, 0x68, 0x28, 0x48, 0x08,\r\n  0xF0, 0x70, 0xB0, 0x30, 0xD0, 0x50, 0x90, 0x10, 0xE0, 0x60, 0xA0, 0x20, 0xC0, 0x40, 0x80, 0x00\r\n]);\r\n\r\nconst ExLenBits = new Uint8Array([\r\n  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08\r\n]);\r\n\r\nconst LenBase = new Uint16Array([\r\n  0x0000, 0x0001, 0x0002, 0x0003, 0x0004, 0x0005, 0x0006, 0x0007,\r\n  0x0008, 0x000A, 0x000E, 0x0016, 0x0026, 0x0046, 0x0086, 0x0106\r\n]);\r\n\r\nconst LenBits = new Uint8Array([\r\n  0x03, 0x02, 0x03, 0x03, 0x04, 0x04, 0x04, 0x05, 0x05, 0x05, 0x05, 0x06, 0x06, 0x06, 0x07, 0x07\r\n]);\r\n\r\nconst LenCode = new Uint8Array([\r\n  0x05, 0x03, 0x01, 0x06, 0x0A, 0x02, 0x0C, 0x14, 0x04, 0x18, 0x08, 0x30, 0x10, 0x20, 0x40, 0x00\r\n]);\r\n\r\nconst ChBitsAsc = new Uint8Array([\r\n  0x0B, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x08, 0x07, 0x0C, 0x0C, 0x07, 0x0C, 0x0C,\r\n  0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0D, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C,\r\n  0x04, 0x0A, 0x08, 0x0C, 0x0A, 0x0C, 0x0A, 0x08, 0x07, 0x07, 0x08, 0x09, 0x07, 0x06, 0x07, 0x08,\r\n  0x07, 0x06, 0x07, 0x07, 0x07, 0x07, 0x08, 0x07, 0x07, 0x08, 0x08, 0x0C, 0x0B, 0x07, 0x09, 0x0B,\r\n  0x0C, 0x06, 0x07, 0x06, 0x06, 0x05, 0x07, 0x08, 0x08, 0x06, 0x0B, 0x09, 0x06, 0x07, 0x06, 0x06,\r\n  0x07, 0x0B, 0x06, 0x06, 0x06, 0x07, 0x09, 0x08, 0x09, 0x09, 0x0B, 0x08, 0x0B, 0x09, 0x0C, 0x08,\r\n  0x0C, 0x05, 0x06, 0x06, 0x06, 0x05, 0x06, 0x06, 0x06, 0x05, 0x0B, 0x07, 0x05, 0x06, 0x05, 0x05,\r\n  0x06, 0x0A, 0x05, 0x05, 0x05, 0x05, 0x08, 0x07, 0x08, 0x08, 0x0A, 0x0B, 0x0B, 0x0C, 0x0C, 0x0C,\r\n  0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D,\r\n  0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D,\r\n  0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D,\r\n  0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C,\r\n  0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C,\r\n  0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C,\r\n  0x0D, 0x0C, 0x0D, 0x0D, 0x0D, 0x0C, 0x0D, 0x0D, 0x0D, 0x0C, 0x0D, 0x0D, 0x0D, 0x0D, 0x0C, 0x0D,\r\n  0x0D, 0x0D, 0x0C, 0x0C, 0x0C, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D\r\n]);\r\n\r\nconst ChCodeAsc = new Uint16Array([\r\n  0x0490, 0x0FE0, 0x07E0, 0x0BE0, 0x03E0, 0x0DE0, 0x05E0, 0x09E0,\r\n  0x01E0, 0x00B8, 0x0062, 0x0EE0, 0x06E0, 0x0022, 0x0AE0, 0x02E0,\r\n  0x0CE0, 0x04E0, 0x08E0, 0x00E0, 0x0F60, 0x0760, 0x0B60, 0x0360,\r\n  0x0D60, 0x0560, 0x1240, 0x0960, 0x0160, 0x0E60, 0x0660, 0x0A60,\r\n  0x000F, 0x0250, 0x0038, 0x0260, 0x0050, 0x0C60, 0x0390, 0x00D8,\r\n  0x0042, 0x0002, 0x0058, 0x01B0, 0x007C, 0x0029, 0x003C, 0x0098,\r\n  0x005C, 0x0009, 0x001C, 0x006C, 0x002C, 0x004C, 0x0018, 0x000C,\r\n  0x0074, 0x00E8, 0x0068, 0x0460, 0x0090, 0x0034, 0x00B0, 0x0710,\r\n  0x0860, 0x0031, 0x0054, 0x0011, 0x0021, 0x0017, 0x0014, 0x00A8,\r\n  0x0028, 0x0001, 0x0310, 0x0130, 0x003E, 0x0064, 0x001E, 0x002E,\r\n  0x0024, 0x0510, 0x000E, 0x0036, 0x0016, 0x0044, 0x0030, 0x00C8,\r\n  0x01D0, 0x00D0, 0x0110, 0x0048, 0x0610, 0x0150, 0x0060, 0x0088,\r\n  0x0FA0, 0x0007, 0x0026, 0x0006, 0x003A, 0x001B, 0x001A, 0x002A,\r\n  0x000A, 0x000B, 0x0210, 0x0004, 0x0013, 0x0032, 0x0003, 0x001D,\r\n  0x0012, 0x0190, 0x000D, 0x0015, 0x0005, 0x0019, 0x0008, 0x0078,\r\n  0x00F0, 0x0070, 0x0290, 0x0410, 0x0010, 0x07A0, 0x0BA0, 0x03A0,\r\n  0x0240, 0x1C40, 0x0C40, 0x1440, 0x0440, 0x1840, 0x0840, 0x1040,\r\n  0x0040, 0x1F80, 0x0F80, 0x1780, 0x0780, 0x1B80, 0x0B80, 0x1380,\r\n  0x0380, 0x1D80, 0x0D80, 0x1580, 0x0580, 0x1980, 0x0980, 0x1180,\r\n  0x0180, 0x1E80, 0x0E80, 0x1680, 0x0680, 0x1A80, 0x0A80, 0x1280,\r\n  0x0280, 0x1C80, 0x0C80, 0x1480, 0x0480, 0x1880, 0x0880, 0x1080,\r\n  0x0080, 0x1F00, 0x0F00, 0x1700, 0x0700, 0x1B00, 0x0B00, 0x1300,\r\n  0x0DA0, 0x05A0, 0x09A0, 0x01A0, 0x0EA0, 0x06A0, 0x0AA0, 0x02A0,\r\n  0x0CA0, 0x04A0, 0x08A0, 0x00A0, 0x0F20, 0x0720, 0x0B20, 0x0320,\r\n  0x0D20, 0x0520, 0x0920, 0x0120, 0x0E20, 0x0620, 0x0A20, 0x0220,\r\n  0x0C20, 0x0420, 0x0820, 0x0020, 0x0FC0, 0x07C0, 0x0BC0, 0x03C0,\r\n  0x0DC0, 0x05C0, 0x09C0, 0x01C0, 0x0EC0, 0x06C0, 0x0AC0, 0x02C0,\r\n  0x0CC0, 0x04C0, 0x08C0, 0x00C0, 0x0F40, 0x0740, 0x0B40, 0x0340,\r\n  0x0300, 0x0D40, 0x1D00, 0x0D00, 0x1500, 0x0540, 0x0500, 0x1900,\r\n  0x0900, 0x0940, 0x1100, 0x0100, 0x1E00, 0x0E00, 0x0140, 0x1600,\r\n  0x0600, 0x1A00, 0x0E40, 0x0640, 0x0A40, 0x0A00, 0x1200, 0x0200,\r\n  0x1C00, 0x0C00, 0x1400, 0x0400, 0x1800, 0x0800, 0x1000, 0x0000  \r\n]);\r\n\r\n/**\r\n * @param {Uint8Array} positions [out] Table of positions\r\n * @param {Uint8Array} start_indexes Table of start indexes\r\n * @param {Uint8Array} length_bits Table of lengths. Each length is stored as number of bits\r\n * @param {number} elements Number of elements in start_indexes and length_bits\r\n */\r\nfunction GenDecodeTabs(positions, start_indexes, length_bits, elements) {\r\n  for (let i = 0; i < elements; i++) {\r\n    const length = 1 << length_bits[i];   // Get the length in bytes\r\n    for (let index = start_indexes[i]; index < 0x100; index += length) {\r\n      positions[index] = i;\r\n    }\r\n  }\r\n}\r\n\r\nfunction GenAscTabs(pWork) {\r\n  let pChCodeAsc = 0xFF;\r\n\r\n  for (let count = 0x00FF; pChCodeAsc >= 0; pChCodeAsc--, count--) {\r\n    let bits_asc = pWork.ChBitsAsc[count];\r\n    let acc;\r\n\r\n    if (bits_asc <= 8) {\r\n      const add = (1 << bits_asc);\r\n      acc = ChCodeAsc[pChCodeAsc];\r\n\r\n      do {\r\n        pWork.offs2C34[acc] = count;\r\n        acc += add;\r\n      } while(acc < 0x100);\r\n    } else if ((acc = (ChCodeAsc[pChCodeAsc] & 0xFF)) !== 0) {\r\n      pWork.offs2C34[acc] = 0xFF;\r\n\r\n      if (ChCodeAsc[pChCodeAsc] & 0x3F) {\r\n        bits_asc -= 4;\r\n        pWork.ChBitsAsc[count] = bits_asc;\r\n\r\n        const add = (1 << bits_asc);\r\n        acc = ChCodeAsc[pChCodeAsc] >> 4;\r\n        do {\r\n          pWork.offs2D34[acc] = count;\r\n          acc += add;\r\n        } while(acc < 0x100);\r\n      } else {\r\n        bits_asc -= 6;\r\n        pWork.ChBitsAsc[count] = bits_asc;\r\n\r\n        const add = (1 << bits_asc);\r\n        acc = ChCodeAsc[pChCodeAsc] >> 6;\r\n        do {\r\n          pWork.offs2E34[acc] = count;\r\n          acc += add;\r\n        } while(acc < 0x80);\r\n      }\r\n    } else {\r\n      bits_asc -= 8;\r\n      pWork.ChBitsAsc[count] = bits_asc;\r\n\r\n      const add = (1 << bits_asc);\r\n      acc = ChCodeAsc[pChCodeAsc] >> 8;\r\n      do {\r\n        pWork.offs2EB4[acc] = count;\r\n        acc += add;\r\n      } while(acc < 0x100);\r\n    }\r\n  }\r\n}\r\n\r\n//-----------------------------------------------------------------------------\r\n// Removes given number of bits in the bit buffer. New bits are reloaded from\r\n// the input buffer, if needed.\r\n// Returns: PKDCL_OK:         Operation was successful\r\n//          PKDCL_STREAM_END: There are no more bits in the input buffer\r\nfunction WasteBits(pWork, nBits) {\r\n  // If number of bits required is less than number of (bits in the buffer) ?\r\n  if (nBits <= pWork.extra_bits) {\r\n    pWork.extra_bits -= nBits;\r\n    pWork.bit_buff >>>= nBits;\r\n    return PKDCL_OK;\r\n  }\r\n\r\n  // Load input buffer if necessary\r\n  pWork.bit_buff >>= pWork.extra_bits;\r\n  if (pWork.in_pos === pWork.in_bytes) {\r\n    if ((pWork.in_bytes = pWork.read_buf(pWork.in_buff)) === 0) {\r\n      return PKDCL_STREAM_END;\r\n    }\r\n    pWork.in_pos = 0;\r\n  }\r\n\r\n  // Update bit buffer\r\n  pWork.bit_buff |= (pWork.in_buff[pWork.in_pos++] << 8);\r\n  pWork.bit_buff >>>= (nBits - pWork.extra_bits);\r\n  pWork.extra_bits = (pWork.extra_bits - nBits) + 8;\r\n  return PKDCL_OK;\r\n}\r\n\r\n//-----------------------------------------------------------------------------\r\n// Decodes next literal from the input (compressed) data.\r\n// Returns : 0x000: One byte 0x00\r\n//           0x001: One byte 0x01\r\n//           ...\r\n//           0x0FF: One byte 0xFF\r\n//           0x100: Repetition, length of 0x02 bytes\r\n//           0x101: Repetition, length of 0x03 bytes\r\n//           ...\r\n//           0x304: Repetition, length of 0x206 bytes\r\n//           0x305: End of stream\r\n//           0x306: Error\r\nfunction DecodeLit(pWork) {\r\n  if(pWork.bit_buff & 1) {\r\n    // Remove one bit from the input data\r\n    if(WasteBits(pWork, 1)) {\r\n      return 0x306;\r\n    }\r\n\r\n    // The next 8 bits hold the index to the length code table\r\n    let length_code = pWork.LengthCodes[pWork.bit_buff & 0xFF];\r\n\r\n    // Remove the apropriate number of bits\r\n    if(WasteBits(pWork, pWork.LenBits[length_code])) {\r\n      return 0x306;\r\n    }\r\n\r\n    // Are there some extra bits for the obtained length code ?\r\n    const extra_length_bits = pWork.ExLenBits[length_code];\r\n    if(extra_length_bits !== 0) {\r\n      const extra_length = pWork.bit_buff & ((1 << extra_length_bits) - 1);\r\n      if(WasteBits(pWork, extra_length_bits)) {\r\n        if((length_code + extra_length) != 0x10E) {\r\n          return 0x306;\r\n        }\r\n      }\r\n      length_code = pWork.LenBase[length_code] + extra_length;\r\n    }\r\n\r\n    // In order to distinguish uncompressed byte from repetition length,\r\n    // we have to add 0x100 to the length.\r\n    return length_code + 0x100;\r\n  }\r\n\r\n  // Remove one bit from the input data\r\n  if(WasteBits(pWork, 1)) {\r\n    return 0x306;\r\n  }\r\n\r\n  // If the binary compression type, read 8 bits and return them as one byte.\r\n  if(pWork.ctype === CMP_BINARY) {\r\n    const uncompressed_byte = pWork.bit_buff & 0xFF;\r\n\r\n    if(WasteBits(pWork, 8)) {\r\n      return 0x306;\r\n    }\r\n    return uncompressed_byte;\r\n  }\r\n\r\n  // When ASCII compression ...\r\n  let value;\r\n  if (pWork.bit_buff & 0xFF) {\r\n    value = pWork.offs2C34[pWork.bit_buff & 0xFF];\r\n\r\n    if (value == 0xFF) {\r\n      if (pWork.bit_buff & 0x3F) {\r\n        if (WasteBits(pWork, 4)) {\r\n          return 0x306;\r\n        }\r\n\r\n        value = pWork.offs2D34[pWork.bit_buff & 0xFF];\r\n      } else {\r\n        if (WasteBits(pWork, 6)) {\r\n          return 0x306;\r\n        }\r\n\r\n        value = pWork.offs2E34[pWork.bit_buff & 0x7F];\r\n      }\r\n    }\r\n  } else {\r\n    if(WasteBits(pWork, 8)) {\r\n      return 0x306;\r\n    }\r\n\r\n    value = pWork.offs2EB4[pWork.bit_buff & 0xFF];\r\n  }\r\n\r\n  return WasteBits(pWork, pWork.ChBitsAsc[value]) ? 0x306 : value;\r\n}\r\n\r\n//-----------------------------------------------------------------------------\r\n// Decodes the distance of the repetition, backwards relative to the\r\n// current output buffer position\r\nfunction DecodeDist(pWork, rep_length) {\r\n  // Next 2-8 bits in the input buffer is the distance position code\r\n  const dist_pos_code = pWork.DistPosCodes[pWork.bit_buff & 0xFF];\r\n  const dist_pos_bits = pWork.DistBits[dist_pos_code];\r\n  if (WasteBits(pWork, dist_pos_bits)) {\r\n    return 0;\r\n  }\r\n\r\n  let distance;\r\n  if (rep_length === 2) {\r\n    // If the repetition is only 2 bytes length,\r\n    // then take 2 bits from the stream in order to get the distance\r\n    distance = (dist_pos_code << 2) | (pWork.bit_buff & 0x03);\r\n    if (WasteBits(pWork, 2)) {\r\n      return 0;\r\n    }\r\n  } else {\r\n    // If the repetition is more than 2 bytes length,\r\n    // then take \"dsize_bits\" bits in order to get the distance\r\n    distance = (dist_pos_code << pWork.dsize_bits) | (pWork.bit_buff & pWork.dsize_mask);\r\n    if (WasteBits(pWork, pWork.dsize_bits)) {\r\n      return 0;\r\n    }\r\n  }\r\n  return distance + 1;\r\n}\r\n\r\nfunction Expand(pWork) {\r\n  let outputPos = 0x1000;          // Initialize output buffer position\r\n\r\n  // Decode the next literal from the input data.\r\n  // The returned literal can either be an uncompressed byte (next_literal < 0x100)\r\n  // or an encoded length of the repeating byte sequence that\r\n  // is to be copied to the current buffer position\r\n  let result, next_literal;\r\n  while ((result = next_literal = DecodeLit(pWork)) < 0x305) {\r\n    // If the literal is greater than 0x100, it holds length\r\n    // of repeating byte sequence\r\n    // literal of 0x100 means repeating sequence of 0x2 bytes\r\n    // literal of 0x101 means repeating sequence of 0x3 bytes\r\n    // ...\r\n    // literal of 0x305 means repeating sequence of 0x207 bytes\r\n    if(next_literal >= 0x100) {\r\n      // Get the length of the repeating sequence.\r\n      // Note that the repeating block may overlap the current output position,\r\n      // for example if there was a sequence of equal bytes\r\n      let rep_length = next_literal - 0xFE;\r\n      // Get backward distance to the repetition\r\n      const minus_dist = DecodeDist(pWork, rep_length);\r\n      if (minus_dist === 0) {\r\n        result = 0x306;\r\n        break;\r\n      }\r\n\r\n      // Target and source pointer\r\n      let target = outputPos;\r\n      let source = target - minus_dist;\r\n\r\n      // Update buffer output position\r\n      outputPos += rep_length;\r\n\r\n      // Copy the repeating sequence\r\n      const out_buff = pWork.out_buff;\r\n      while (rep_length-- > 0) {\r\n        out_buff[target++] = out_buff[source++];\r\n      }\r\n    } else {\r\n      pWork.out_buff[outputPos++] = next_literal;\r\n    }\r\n\r\n    // Flush the output buffer, if number of extracted bytes has reached the end\r\n    if (outputPos >= 0x2000) {\r\n      // Copy decompressed data into user buffer\r\n      pWork.write_buf(pWork.out_buff.subarray(0x1000, 0x2000));\r\n\r\n      // Now copy the decompressed data to the first half of the buffer.\r\n      // This is needed because the decompression might reuse them as repetitions.\r\n      // Note that if the output buffer overflowed previously, the extra decompressed bytes\r\n      // are stored in \"out_buff_overflow\", and they will now be\r\n      // within decompressed part of the output buffer.\r\n      pWork.out_buff.copyWithin(0, 0x1000, outputPos);\r\n      outputPos -= 0x1000;\r\n    }\r\n  }\r\n\r\n  // Flush any remaining decompressed bytes\r\n  pWork.write_buf(pWork.out_buff.subarray(0x1000, outputPos));\r\n  return result;\r\n}\r\n\r\n//-----------------------------------------------------------------------------\r\n// Main exploding function.\r\nexport function explode(read_buf, write_buf) {\r\n  const buffer = new ArrayBuffer(0x3104);\r\n  const pWork = {\r\n    read_buf,\r\n    write_buf,\r\n    in_pos: 3,\r\n    extra_bits: 0,\r\n    in_buff: new Uint8Array(buffer, 0, 0x800),\r\n    DistPosCodes: new Uint8Array(buffer, 0x800, 0x100),\r\n    LengthCodes: new Uint8Array(buffer, 0x900, 0x100),\r\n    offs2C34: new Uint8Array(buffer, 0xA00, 0x100),\r\n    offs2D34: new Uint8Array(buffer, 0xB00, 0x100),\r\n    offs2E34: new Uint8Array(buffer, 0xC00, 0x80),\r\n    offs2EB4: new Uint8Array(buffer, 0xC80, 0x100),\r\n    ChBitsAsc: new Uint8Array(buffer, 0xD80, 0x100),\r\n    DistBits: new Uint8Array(buffer, 0xE80, 0x40),\r\n    LenBits: new Uint8Array(buffer, 0xEC0, 0x10),\r\n    ExLenBits: new Uint8Array(buffer, 0xED0, 0x10),\r\n    LenBase: new Uint16Array(buffer, 0xEE0, 0x10),\r\n    out_buff: new Uint8Array(buffer, 0xF00, 0x2204),\r\n  };\r\n  pWork.in_bytes = read_buf(pWork.in_buff);\r\n  if (pWork.in_bytes <= 4) {\r\n    return CMP_BAD_DATA;\r\n  }\r\n  pWork.ctype = pWork.in_buff[0];\r\n  pWork.dsize_bits = pWork.in_buff[1];\r\n  pWork.bit_buff = pWork.in_buff[2];\r\n\r\n  // Test for the valid dictionary size\r\n  if(4 > pWork.dsize_bits || pWork.dsize_bits > 6) {\r\n    return CMP_INVALID_DICTSIZE;\r\n  }\r\n\r\n  pWork.dsize_mask = 0xFFFF >> (0x10 - pWork.dsize_bits); // Shifted by 'sar' instruction\r\n\r\n  if(pWork.ctype != CMP_BINARY) {\r\n    if(pWork.ctype != CMP_ASCII) {\r\n      return CMP_INVALID_MODE;\r\n    }\r\n\r\n    pWork.ChBitsAsc.set(ChBitsAsc);\r\n    GenAscTabs(pWork);\r\n  }\r\n\r\n  pWork.LenBits.set(LenBits);\r\n  GenDecodeTabs(pWork.LengthCodes, LenCode, pWork.LenBits, pWork.LenBits.length);\r\n  pWork.ExLenBits.set(ExLenBits);\r\n  pWork.LenBase.set(LenBase);\r\n  pWork.DistBits.set(DistBits);\r\n  GenDecodeTabs(pWork.DistPosCodes, DistCode, pWork.DistBits, pWork.DistBits.length);\r\n  if(Expand(pWork) !== 0x306) {\r\n    return CMP_NO_ERROR;\r\n  }\r\n      \r\n  return CMP_ABORT;\r\n}\r\n\r\nexport default explode;\r\n","const W = new Uint32Array(80);\r\n\r\nconst SHA1CircularShift = (shift, value) => ((value << shift) | (value >> (32 - shift)));\r\n\r\nclass SHA1 {\r\n  digest = new Uint32Array(5);\r\n  count = 0;\r\n\r\n  input8(u8) {\r\n    const u32 = new Uint32Array(u8.buffer, u8.byteOffset, 16);\r\n    this.input(u32);\r\n  }\r\n  input(u32) {\r\n    this.count += u32.length * 32;\r\n    for (let i = 0; i < 16; ++i) {\r\n      W[i] = u32[i];\r\n    }\r\n    for (let i = 16; i < 80; ++i) {\r\n      W[i] = W[i - 16] ^ W[i - 14] ^ W[i - 8] ^ W[i - 3];\r\n    }\r\n    let A = this.digest[0];\r\n    let B = this.digest[1];\r\n    let C = this.digest[2];\r\n    let D = this.digest[3];\r\n    let E = this.digest[4];\r\n\r\n    for (let i = 0; i < 20; i++) {\r\n      const temp = SHA1CircularShift(5, A) + ((B & C) | ((~B) & D)) + E + W[i] + 0x5A827999;\r\n      E = D;\r\n      D = C;\r\n      C = SHA1CircularShift(30, B);\r\n      B = A;\r\n      A = temp | 0;\r\n    }\r\n\r\n    for (let i = 20; i < 40; i++) {\r\n      const temp = SHA1CircularShift(5, A) + (B ^ C ^ D) + E + W[i] + 0x6ED9EBA1;\r\n      E = D;\r\n      D = C;\r\n      C = SHA1CircularShift(30, B);\r\n      B = A;\r\n      A = temp | 0;\r\n    }\r\n\r\n    for (let i = 40; i < 60; i++) {\r\n      const temp = SHA1CircularShift(5, A) + ((B & C) | (B & D) | (C & D)) + E + W[i] + 0x8F1BBCDC;\r\n      E = D;\r\n      D = C;\r\n      C = SHA1CircularShift(30, B);\r\n      B = A;\r\n      A = temp | 0;\r\n    }\r\n\r\n    for (let i = 60; i < 80; i++) {\r\n      const temp = SHA1CircularShift(5, A) + (B ^ C ^ D) + E + W[i] + 0xCA62C1D6;\r\n      E = D;\r\n      D = C;\r\n      C = SHA1CircularShift(30, B);\r\n      B = A;\r\n      A = temp | 0;\r\n    }\r\n\r\n    this.digest[0] += A;\r\n    this.digest[1] += B;\r\n    this.digest[2] += C;\r\n    this.digest[3] += D;\r\n    this.digest[4] += E;\r\n  }\r\n\r\n  constructor() {\r\n\t  this.digest[0] = 0x67452301;\r\n\t  this.digest[1] = 0xEFCDAB89;\r\n\t  this.digest[2] = 0x98BADCFE;\r\n\t  this.digest[3] = 0x10325476;\r\n    this.digest[4] = 0xC3D2E1F0;\r\n    \r\n    this.digest8 = new Uint8Array(this.digest.buffer);\r\n  }\r\n}\r\n\r\nclass Random {\r\n  constructor(seed) {\r\n    this.seed = seed;\r\n  }\r\n  next() {\r\n    this.seed = (((this.seed * 3) << 16) + ((this.seed * 67) << 8) + (this.seed * 253) + 2531011) | 0;\r\n    return (this.seed >> 16) & 0x7FFF;\r\n  }\r\n}\r\n\r\nfunction codec_init_key(password) {\r\n  const rand = new Random(0x7058);\r\n  const key = new Uint8Array(136);\r\n  const k32 = new Uint32Array(key.buffer);\r\n  for (let i = 0; i < 136; ++i) {\r\n    key[i] = rand.next();\r\n  }\r\n  const pw = new Uint8Array(64);\r\n  for (let i = 0; i < 64; ++i) {\r\n    pw[i] = password.charCodeAt(i % password.length);\r\n  }\r\n\r\n  let sha = new SHA1();\r\n  sha.input8(pw);\r\n\r\n  for (let i = 0; i < 34; ++i) {\r\n    k32[i] ^= sha.digest[i % sha.digest.length];\r\n  }\r\n\r\n  sha = new SHA1();\r\n  sha.input(k32.subarray(18));\r\n  return sha;\r\n}\r\n\r\nexport default function codec_decode(data, password) {\r\n  if (data.length <= 8) {\r\n    return;\r\n  }\r\n  const size = data.length - 8;\r\n  if (size % 64) {\r\n    return;\r\n  }\r\n\r\n  if (data[size + 4]) {\r\n    return;\r\n  }\r\n\r\n  const last_size = data[size + 5];\r\n  const result_size = size + last_size - 64;\r\n  const result = new Uint8Array(result_size);\r\n\r\n  const sha = codec_init_key(password);\r\n  const size32 = size >> 2;\r\n  const data32 = new Uint32Array(data.buffer, data.byteOffset, size32 + 1);\r\n  const buf32 = new Uint32Array(16);\r\n  const buf = new Uint8Array(buf32.buffer);\r\n\r\n  for (let i = 0; i < size32; i += 16) {\r\n    for (let j = 0; j < 16; ++j) {\r\n      buf32[j] = data32[i + j] ^ sha.digest[j % sha.digest.length];\r\n    }\r\n    sha.input(buf32);\r\n    result.set(i === size32 - 16 ? buf.subarray(0, last_size) : buf, i * 4);\r\n  }\r\n  if (data32[size32] !== sha.digest[0]) {\r\n    return;\r\n  }\r\n  return result;\r\n}\r\n","import { explode } from './explode';\r\nimport codec_decode from './codec';\r\n\r\nfunction pkzip_decompress(data, out_size) {\r\n  if (data.length === out_size) {\r\n    return data;\r\n  }\r\n\r\n  const output = new Uint8Array(out_size);\r\n  let in_pos = 0;\r\n  let out_pos = 0;\r\n  function read_buf(dst) {\r\n    const count = Math.min(data.length - in_pos, dst.length);\r\n    dst.set(data.subarray(in_pos, count));\r\n    in_pos += count;\r\n    return count;\r\n  }\r\n  function write_buf(src) {\r\n    if (out_pos + src.length > out_size) {\r\n      throw Error('decompress buffer overflow');\r\n    }\r\n    output.set(src, out_pos);\r\n    out_pos += src.length;\r\n  }\r\n\r\n  if (explode(read_buf, write_buf) || out_pos !== out_size) {\r\n    return null;\r\n  }\r\n\r\n  return output;\r\n}\r\n\r\nconst hashtable = (function() {\r\n  const hashtable = new Uint32Array(1280);\r\n  let seed = 0x00100001;\r\n  for (let i = 0; i < 256; i++) {\r\n    for (let j = i; j < 1280; j += 256) {\r\n      seed = (seed * 125 + 3) % 0x2AAAAB;\r\n      const a = (seed & 0xFFFF) << 16;\r\n      seed = (seed * 125 + 3) % 0x2AAAAB;\r\n      const b = (seed & 0xFFFF);\r\n      hashtable[j] = a | b;\r\n    }\r\n  }\r\n  return hashtable;\r\n})();\r\nfunction decrypt(u32, key) {\r\n  let seed = 0xEEEEEEEE;\r\n  for (let i = 0; i < u32.length; ++i) {\r\n    seed += hashtable[0x400 + (key & 0xFF)];\r\n    u32[i] ^= seed + key;\r\n    seed = (u32[i] + seed * 33 + 3) | 0;\r\n    key = ((~key << 0x15) + 0x11111111) | (key >>> 0x0B);\r\n  }\r\n}\r\nfunction decrypt8(u8, key) {\r\n  decrypt(new Uint32Array(u8.buffer, u8.byteOffset, u8.length >> 2), key);\r\n}\r\nfunction hash(name, type) {\r\n  let seed1 = 0x7FED7FED;\r\n  let seed2 = 0xEEEEEEEE;\r\n  for (let i = 0; i < name.length; ++i) {\r\n    let ch = name.charCodeAt(i);\r\n    if (ch >= 0x61 && ch <= 0x7A) {\r\n      ch -= 0x20;\r\n    }\r\n    if (ch === 0x2F) {\r\n      ch = 0x5C;\r\n    }\r\n    seed1 = hashtable[type * 256 + ch] ^ (seed1 + seed2);\r\n    seed2 = (ch + seed1 + seed2 * 33 + 3) | 0;\r\n  }\r\n  return seed1 >>> 0;\r\n}\r\n\r\nfunction path_name(name) {\r\n  const pos = Math.max(name.lastIndexOf('/'), name.lastIndexOf('\\\\'));\r\n  return name.substring(pos + 1);\r\n}\r\n\r\nconst Flags = {\r\n  CompressPkWare: 0x00000100,\r\n  CompressMulti: 0x00000200,\r\n  Compressed: 0x0000FF00,\r\n  Encrypted: 0x00010000,\r\n  FixSeed: 0x00020000,\r\n  PatchFile: 0x00100000,\r\n  SingleUnit: 0x01000000,\r\n  DummyFile: 0x02000000,\r\n  SectorCrc: 0x04000000,\r\n  Exists: 0x80000000,\r\n};\r\n\r\nclass MpqReader {\r\n  constructor(buffer) {\r\n    this.buffer = buffer;\r\n    this.u8 = new Uint8Array(buffer);\r\n    this.u32 = new Uint32Array(buffer, 0, buffer.byteLength >> 2);\r\n\r\n    this.readHeader();\r\n  }\r\n\r\n  readHeader() {\r\n    const {u8, u32} = this;\r\n    if (u32[0] !== 0x1A51504D) {\r\n      throw Error('invalid MPQ header');\r\n    }\r\n    const sizeId = u8[14] + (u8[15] << 8);\r\n    const hashOffset = u32[4];\r\n    const blockOffset = u32[5];\r\n    const hashCount = u32[6];\r\n    const blockCount = u32[7];\r\n    this.hashTable = this.readTable(hashOffset, hashCount, \"(hash table)\");\r\n    this.blockTable = this.readTable(blockOffset, blockCount, \"(block table)\");\r\n    this.blockSize = 1 << (9 + sizeId);\r\n  }\r\n\r\n  readTable(offset, count, key) {\r\n    const buffer = new Uint32Array(this.buffer.slice(offset, offset + count * 16));\r\n    decrypt(buffer, hash(key, 3));\r\n    return buffer;\r\n  }\r\n\r\n  fileIndex(name) {\r\n    const {hashTable} = this;\r\n    const length = hashTable.length >> 2;\r\n    const index = hash(name, 0) % length;\r\n    const keyA = hash(name, 1), keyB = hash(name, 2);\r\n    for (let i = index, count = 0; hashTable[i * 4 + 3] !== 0xFFFFFFFF && count < length; i = (i + 1) % length, ++count) {\r\n      if (hashTable[i * 4] === keyA && hashTable[i * 4 + 1] === keyB && hashTable[i * 4 + 3] !== 0xFFFFFFFE) {\r\n        return i;\r\n      }\r\n    }\r\n  }\r\n\r\n  read(name) {\r\n    const index = this.fileIndex(name);\r\n    if (index == null) {\r\n      return;\r\n    }\r\n    const block = this.hashTable[index * 4 + 3];\r\n    const filePos = this.blockTable[block * 4];\r\n    let cmpSize = this.blockTable[block * 4 + 1];\r\n    const fileSize = this.blockTable[block * 4 + 2];\r\n    const flags = this.blockTable[block * 4 + 3];\r\n\r\n    if (flags & Flags.PatchFile) {\r\n      return;\r\n    }\r\n    if (!(flags & Flags.Compressed)) {\r\n      cmpSize = fileSize;\r\n    }\r\n\r\n    let key = hash(path_name(name), 3);\r\n    if (flags & Flags.FixSeed) {\r\n      key = (key + filePos) ^ fileSize;\r\n    }\r\n\r\n    if (flags & Flags.SingleUnit) {\r\n      const raw = new Uint8Array(this.buffer, filePos, cmpSize);\r\n      if (raw.length !== cmpSize) {\r\n        return;\r\n      }\r\n      if (flags & Flags.Encrypted) {\r\n        decrypt8(raw, key);\r\n      }\r\n      if (flags & Flags.CompressMulti) {\r\n        return;\r\n      } else if (flags & Flags.CompressPkWare) {\r\n        return pkzip_decompress(raw, fileSize);\r\n      }\r\n      return raw;\r\n    } else if (!(flags & Flags.Compressed)) {\r\n      const raw = Uint8Array(this.buffer, filePos, fileSize);\r\n      if (raw.length !== fileSize) {\r\n        return;\r\n      }\r\n      if (flags & Flags.Encrypted) {\r\n        for (let i = 0; i < fileSize; i += this.blockSize) {\r\n          decrypt8(raw.subarray(i, Math.min(fileSize, i + this.blockSize)), key + i / this.blockSize);\r\n        }\r\n      }\r\n      return raw;\r\n    } else {\r\n      const numBlocks = Math.floor((fileSize + this.blockSize - 1) / this.blockSize);\r\n      const tableSize = numBlocks + 1 + ((flags & Flags.SectorCrc) ? 1 : 0);\r\n      const blocks = new Uint32Array(tableSize);\r\n      const blocksSrc = new Uint8Array(this.buffer, filePos, tableSize * 4);\r\n      if (blocksSrc.length !== tableSize * 4) {\r\n        return;\r\n      }\r\n      (new Uint8Array(blocks.buffer)).set(blocksSrc);\r\n      if (flags & Flags.Encrypted) {\r\n        decrypt(blocks, key - 1);\r\n      }\r\n      const output = new Uint8Array(fileSize);\r\n      for (let i = 0; i < numBlocks; ++i) {\r\n        const oPos = i * this.blockSize;\r\n        const cSize = blocks[i + 1] - blocks[i];\r\n        const uSize = Math.min(this.blockSize, fileSize - oPos);\r\n        let tmp = new Uint8Array(this.buffer, filePos + blocks[i], cSize);\r\n        if (tmp.length !== cSize) {\r\n          return;\r\n        }\r\n        if (flags & Flags.Encrypted) {\r\n          decrypt8(tmp, key + i);\r\n        }\r\n        if (flags & Flags.CompressMulti) {\r\n          return;\r\n        } else if (flags & Flags.CompressPkWare) {\r\n          tmp = pkzip_decompress(tmp, uSize);\r\n        }\r\n        if (!tmp || tmp.length !== uSize) {\r\n          return;\r\n        }\r\n        output.set(tmp, oPos);\r\n      }\r\n      return output;\r\n    }\r\n  }\r\n}\r\n\r\nfunction getPassword(name) {\r\n  if (name.match(/spawn\\d+\\.sv/i)) {\r\n    return 'lshbkfg1'; // single, spawn\r\n  } else if (name.match(/share_\\d+\\.sv/i)) {\r\n    return 'lshbkfg1'; // multi, spawn\r\n  } else if (name.match(/multi_\\d+\\.sv/i)) {\r\n    return 'szqnlsk1'; // multi, retail\r\n  } else {\r\n    return 'xrgyrkj1'; // single, retail\r\n  }\r\n}\r\n\r\nexport default function getPlayerName(data, name) {\r\n  try {\r\n    const reader = new MpqReader(data);\r\n    const hero = codec_decode(reader.read(\"hero\"), getPassword(name));\r\n    const nameEnd = hero.indexOf(0, 16);\r\n    const result = {};\r\n    result.name = String.fromCharCode(...hero.subarray(16, nameEnd));\r\n    result.cls = hero[48];\r\n    result.level = hero[53];\r\n    return result;\r\n  } catch (e) {\r\n    return null;\r\n  }\r\n}\r\n","function no_sound() {\r\n  return {\r\n    create_sound: () => 0,\r\n    duplicate_sound: () => 0,\r\n    play_sound: () => undefined,\r\n    set_volume: () => undefined,\r\n    stop_sound: () => undefined,\r\n    delete_sound: () => undefined,\r\n  };\r\n}\r\n\r\nfunction decodeAudioData(context, buffer) {\r\n  return new Promise((resolve, reject) => {\r\n    context.decodeAudioData(buffer, resolve, reject);\r\n  });\r\n}\r\n\r\nexport default function init_sound() {\r\n  const AudioContext = window.AudioContext || window.webkitAudioContext;\r\n  const StereoPannerNode = window.StereoPannerNode;\r\n  if (!AudioContext) {\r\n    return no_sound();\r\n  }\r\n\r\n  let context = null;\r\n  try {\r\n    context = new AudioContext();\r\n  } catch (e) {\r\n  }\r\n  const sounds = new Map();\r\n\r\n  return {\r\n    create_sound_raw(id, data, length, channels, rate) {\r\n      if (!context) {\r\n        return;\r\n      }\r\n      const buffer = context.createBuffer(channels, length, rate);\r\n      for (let i = 0; i < channels; ++i) {\r\n        buffer.getChannelData(i).set(data.subarray(i * length, i * length + length));\r\n      }\r\n      sounds.set(id, {\r\n        buffer: Promise.resolve(buffer),\r\n        gain: context.createGain(),\r\n        panner: StereoPannerNode && new StereoPannerNode(context, {pan: 0}),\r\n      });\r\n    },\r\n    create_sound(id, data) {\r\n      if (!context) {\r\n        return;\r\n      }\r\n      const buffer = decodeAudioData(context, data.buffer);\r\n      sounds.set(id, {\r\n        buffer,\r\n        gain: context.createGain(),\r\n        panner: StereoPannerNode && new StereoPannerNode(context, {pan: 0}),\r\n      });\r\n    },\r\n    duplicate_sound(id, srcId) {\r\n      if (!context) {\r\n        return;\r\n      }\r\n      const src = sounds.get(srcId);\r\n      if (!src) {\r\n        return;\r\n      }\r\n      sounds.set(id, {\r\n        buffer: src.buffer,\r\n        gain: context.createGain(),\r\n        panner: StereoPannerNode && new StereoPannerNode(context, {pan: 0}),\r\n      });\r\n    },\r\n    play_sound(id, volume, pan, loop) {\r\n      const src = sounds.get(id);\r\n      if (src) {\r\n        if (src.source) {\r\n          src.source.then(source => source.stop());\r\n        }\r\n        src.gain.gain.value = Math.pow(2.0, volume / 1000.0);\r\n        const relVolume = Math.pow(2.0, pan / 1000.0);\r\n        if (src.panner) {\r\n          src.panner.pan.value = 1.0 - 2.0 / (1.0 + relVolume);\r\n        }\r\n        src.source = src.buffer.then(buffer => {\r\n          const source = context.createBufferSource();\r\n          source.buffer = buffer;\r\n          source.loop = !!loop;\r\n          let node = source.connect(src.gain);\r\n          if (src.panner) {\r\n            node = node.connect(src.panner);\r\n          }\r\n          node.connect(context.destination);\r\n          source.start();\r\n          return source;\r\n        });\r\n      }\r\n    },\r\n    set_volume(id, volume) {\r\n      const src = sounds.get(id);\r\n      if (src) {\r\n        src.gain.gain.value = Math.pow(2.0, volume / 1000.0);\r\n      }\r\n    },\r\n    stop_sound(id) {\r\n      const src = sounds.get(id);\r\n      if (src && src.source) {\r\n        src.source.then(source => source.stop());\r\n        delete src.source;\r\n      }\r\n    },\r\n    delete_sound(id) {\r\n      const src = sounds.get(id);\r\n      if (src && src.source) {\r\n        src.source.then(source => source.stop());\r\n      }\r\n      sounds.delete(id);\r\n    },\r\n\r\n    stop_all() {\r\n      for (let [, sound] of sounds) {\r\n        if (sound.source) {\r\n          sound.source.then(source => source.stop());\r\n        }\r\n      }\r\n      sounds.clear();\r\n      context = null;\r\n    }\r\n  };\r\n}\r\n","import axios from 'axios';\r\n\r\nconst SpawnSizes = [50274091, 25830791];\r\n\r\nexport { SpawnSizes };\r\n\r\nexport default async function load_spawn(api, fs) {\r\n  let file = fs.files.get('spawn.mpq');\r\n  if (file && !SpawnSizes.includes(file.byteLength)) {\r\n    fs.files.delete('spawn.mpq');\r\n    await fs.delete('spawn.mpq');\r\n    file = null;\r\n  }\r\n  if (!file) {\r\n    const spawn = await axios.request({\r\n      url: process.env.PUBLIC_URL + '/spawn.mpq',\r\n      responseType: 'arraybuffer',\r\n      onDownloadProgress: e => {\r\n        if (api.onProgress) {\r\n          api.onProgress({text: 'Downloading...', loaded: e.loaded, total: e.total || SpawnSizes[1]});\r\n        }\r\n      },\r\n      headers: {\r\n        'Cache-Control': 'max-age=31536000'\r\n      }\r\n    });\r\n    if (!SpawnSizes.includes(spawn.data.byteLength)) {\r\n      throw Error(\"Invalid spawn.mpq size. Try clearing cache and refreshing the page.\");\r\n    }\r\n    const data = new Uint8Array(spawn.data);\r\n    fs.files.set('spawn.mpq', data);\r\n    fs.update('spawn.mpq', data.slice());\r\n  }\r\n  return fs;\r\n}\r\n","export class buffer_reader {\r\n  constructor(buffer) {\r\n    this.buffer = (buffer instanceof Uint8Array ? buffer : new Uint8Array(buffer));\r\n    this.pos = 0;\r\n  }\r\n  done() {\r\n    return this.pos === this.buffer.byteLength;\r\n  }\r\n  read8() {\r\n    if (this.pos >= this.buffer.byteLength) {\r\n      throw Error('packet too small');\r\n    }\r\n    return this.buffer[this.pos++];\r\n  }\r\n  read16() {\r\n    const {pos, buffer} = this;\r\n    if (pos + 2 > buffer.byteLength) {\r\n      throw Error('packet too small');\r\n    }\r\n    const result = buffer[pos] | (buffer[pos + 1] << 8);\r\n    this.pos += 2;\r\n    return result;\r\n  }\r\n  read32() {\r\n    const {pos, buffer} = this;\r\n    if (pos + 4 > buffer.byteLength) {\r\n      throw Error('packet too small');\r\n    }\r\n    const result = buffer[pos] | (buffer[pos + 1] << 8) | (buffer[pos + 2] << 16) | (buffer[pos + 3] << 24);\r\n    this.pos += 4;\r\n    return result;\r\n  }\r\n  read_str() {\r\n    const length = this.read8();\r\n    const {pos, buffer} = this;\r\n    if (pos + length > buffer.byteLength) {\r\n      throw Error('packet too small');\r\n    }\r\n    const result = String.fromCharCode(...buffer.subarray(pos, pos + length));\r\n    this.pos += length;\r\n    return result;\r\n  }\r\n  read_buf() {\r\n    const size = this.read32();\r\n    const result = this.buffer.subarray(this.pos, this.pos + size);\r\n    this.pos += size;\r\n    return result;\r\n  }\r\n}\r\nexport class buffer_writer {\r\n  constructor(length) {\r\n    this.buffer = new Uint8Array(length);\r\n    this.pos = 0;\r\n  }\r\n  get result() {\r\n    return this.buffer.buffer;\r\n  }\r\n  write8(value) {\r\n    this.buffer[this.pos++] = value;\r\n    return this;\r\n  }\r\n  write16(value) {\r\n    const {pos, buffer} = this;\r\n    buffer[pos] = value;\r\n    buffer[pos + 1] = value >> 8;\r\n    this.pos += 2;\r\n    return this;\r\n  }\r\n  write32(value) {\r\n    const {pos, buffer} = this;\r\n    buffer[pos] = value;\r\n    buffer[pos + 1] = value >> 8;\r\n    buffer[pos + 2] = value >> 16;\r\n    buffer[pos + 3] = value >> 24;\r\n    this.pos += 4;\r\n    return this;\r\n  }\r\n  write_str(value) {\r\n    const length = value.length;\r\n    this.write8(length);\r\n    const {pos, buffer} = this;\r\n    for (let i = 0; i < length; ++i) {\r\n      buffer[pos + i] = value.charCodeAt(i);\r\n    }\r\n    this.pos += length;\r\n    return this;\r\n  }\r\n  rest(value) {\r\n    this.buffer.set(value, this.pos);\r\n    this.pos += value.byteLength;\r\n    return this;\r\n  }\r\n  write_buf(value) {\r\n    this.write32(value.byteLength);\r\n    this.rest(value);\r\n    return this;\r\n  }\r\n}\r\n\r\nexport const RejectionReason = {\r\n  JOIN_SUCCESS: 0x00,\r\n  JOIN_ALREADY_IN_GAME: 0x01,\r\n  JOIN_GAME_NOT_FOUND: 0x02,\r\n  JOIN_INCORRECT_PASSWORD: 0x03,\r\n  JOIN_VERSION_MISMATCH: 0x04,\r\n  JOIN_GAME_FULL: 0x05,\r\n  CREATE_GAME_EXISTS: 0x06,\r\n};\r\n\r\nexport function read_packet(reader, types) {\r\n  const code = reader.read8();\r\n  const cls = Object.values(types).find(cls => cls.code === code);\r\n  if (!cls) {\r\n    throw Error('invalid packet code');\r\n  }\r\n  return {type: cls, packet: cls.read(reader)};\r\n}\r\nexport function packet_size(type, packet) {\r\n  return (typeof type.size === \"function\" ? type.size(packet) : type.size) + 1;\r\n}\r\nexport function write_packet(type, packet) {\r\n  const size = packet_size(type, packet);\r\n  return type.write(new buffer_writer(size).write8(type.code), packet).result;\r\n}\r\n\r\nexport function make_batch(types) {\r\n  return {\r\n    code: 0x00,\r\n    read: reader => {\r\n      const count = reader.read16();\r\n      const packets = [];\r\n      for (let i = 0; i < count; ++i) {\r\n        packets.push(read_packet(reader, types()));\r\n      }\r\n      return packets;\r\n    },\r\n    size: packets => packets.reduce((sum, {type, packet}) => sum + packet_size(type, packet), 2),\r\n    write: (writer, packets) => {\r\n      writer.write16(packets.length);\r\n      for (let {type, packet} of packets) {\r\n        type.write(writer.write8(type.code), packet);\r\n      }\r\n      return writer;\r\n    },\r\n  };\r\n}\r\n\r\nexport const server_packet = {\r\n  info: {\r\n    code: 0x32,\r\n    read: reader => ({version: reader.read32()}),\r\n    size: 4,\r\n    write: (writer, {version}) => writer.write32(version),\r\n  },\r\n  game_list: {\r\n    code: 0x21,\r\n    read: reader => {\r\n      const count = reader.read16();\r\n      const games = [];\r\n      for (let i = 0; i < count; ++i) {\r\n        games.push({type: reader.read32(), name: reader.read_str()});\r\n      }\r\n      return {games};\r\n    },\r\n    size: ({games}) => games.reduce((sum, {name}) => sum + 5 + name.length, 2),\r\n    write: (writer, {games}) => {\r\n      writer.write16(games.length);\r\n      for (let {type, name} of games) {\r\n        writer.write32(type);\r\n        writer.write_str(name);\r\n      }\r\n      return writer;\r\n    },\r\n  },\r\n  join_accept: {\r\n    code: 0x12,\r\n    read: reader => ({cookie: reader.read32(), index: reader.read8(), seed: reader.read32(), difficulty: reader.read32()}),\r\n    size: 13,\r\n    write: (writer, {cookie, index, seed, difficulty}) => writer.write32(cookie).write8(index).write32(seed).write32(difficulty),\r\n  },\r\n  join_reject: {\r\n    code: 0x15,\r\n    read: reader => ({cookie: reader.read32(), reason: reader.read8()}),\r\n    size: 5,\r\n    write: (writer, {cookie, reason}) => writer.write32(cookie).write8(reason),\r\n  },\r\n  connect: {\r\n    code: 0x13,\r\n    read: reader => ({id: reader.read8()}),\r\n    size: 1,\r\n    write: (writer, {id}) => writer.write8(id),\r\n  },\r\n  disconnect: {\r\n    code: 0x14,\r\n    read: reader => ({id: reader.read8(), reason: reader.read32()}),\r\n    size: 5,\r\n    write: (writer, {id, reason}) => writer.write8(id).write32(reason),\r\n  },\r\n  message: {\r\n    code: 0x01,\r\n    read: reader => ({id: reader.read8(), payload: reader.read_buf()}),\r\n    size: ({payload}) => 5 + payload.byteLength,\r\n    write: (writer, {id, payload}) => writer.write8(id).write_buf(payload),\r\n  },\r\n  turn: {\r\n    code: 0x02,\r\n    read: reader => ({id: reader.read8(), turn: reader.read32()}),\r\n    size: 5,\r\n    write: (writer, {id, turn}) => writer.write8(id).write32(turn),\r\n  },\r\n  batch: make_batch(() => server_packet),\r\n};\r\n\r\nexport const client_packet = {\r\n  info: {\r\n    code: 0x31,\r\n    read: reader => ({version: reader.read32()}),\r\n    size: 4,\r\n    write: (writer, {version}) => writer.write32(version),\r\n  },\r\n  game_list: {\r\n    code: 0x21,\r\n    read: () => ({}),\r\n    size: 0,\r\n    write: writer => writer,\r\n  },\r\n  create_game: {\r\n    code: 0x22,\r\n    read: reader => ({cookie: reader.read32(), name: reader.read_str(), password: reader.read_str(), difficulty: reader.read32()}),\r\n    size: ({name, password}) => 10 + name.length + password.length,\r\n    write: (writer, {cookie, name, password, difficulty}) => writer.write32(cookie).write_str(name).write_str(password).write32(difficulty),\r\n  },\r\n  join_game: {\r\n    code: 0x23,\r\n    read: reader => ({cookie: reader.read32(), name: reader.read_str(), password: reader.read_str()}),\r\n    size: ({name, password}) => 6 + name.length + password.length,\r\n    write: (writer, {cookie, name, password}) => writer.write32(cookie).write_str(name).write_str(password),\r\n  },\r\n  leave_game: {\r\n    code: 0x24,\r\n    read: () => ({}),\r\n    size: 0,\r\n    write: writer => writer,\r\n  },\r\n  drop_player: {\r\n    code: 0x03,\r\n    read: reader => ({id: reader.read8(), reason: reader.read32()}),\r\n    size: 5,\r\n    write: (writer, {id, reason}) => writer.write8(id).write32(reason),\r\n  },\r\n  message: {\r\n    code: 0x01,\r\n    read: reader => ({id: reader.read8(), payload: reader.read_buf()}),\r\n    size: ({payload}) => 5 + payload.byteLength,\r\n    write: (writer, {id, payload}) => writer.write8(id).write_buf(payload),\r\n  },\r\n  turn: {\r\n    code: 0x02,\r\n    read: reader => ({turn: reader.read32()}),\r\n    size: 4,\r\n    write: (writer, {turn}) => writer.write32(turn),\r\n  },\r\n  batch: make_batch(() => server_packet),\r\n};\r\n","import Peer from 'peerjs';\r\nimport { buffer_reader, read_packet, write_packet, client_packet, server_packet, RejectionReason } from './packet';\r\n\r\n/*function log_packet(data, type) {\r\n  const reader = new buffer_reader(data);\r\n  const id = reader.read8();\r\n  for (let [name, {code, read}] of Object.entries(type)) {\r\n    if (code === id && (name !== 'message' && name !== 'turn')) {\r\n      console.log(`${type === client_packet ? 'client_packet' : 'server_packet'}.${name} ${JSON.stringify(read(reader))}`);\r\n    }\r\n  }\r\n}*/\r\n\r\nconst PeerID = name => `diabloweb_${name}`;\r\nconst Options = {host: 'diablo.rivsoft.net', port: 443, secure: true};\r\nconst MAX_PLRS = 4;\r\n\r\nclass webrtc_server {\r\n  constructor(version, {cookie, name, password, difficulty}, onMessage, onClose) {\r\n    this.version = version;\r\n    this.name = name;\r\n    this.password = password;\r\n    this.difficulty = difficulty;\r\n    this.onMessage = onMessage;\r\n    this.onClose = onClose;\r\n\r\n    this.peer = new Peer(PeerID(name), Options);\r\n    this.peer.on('connection', conn => this.onConnect(conn));\r\n    this.players = [];\r\n    this.myplr = 0;\r\n\r\n    this.seed = Math.floor(Math.random() * Math.pow(2, 32));\r\n\r\n    const onError = () => {\r\n      onMessage(write_packet(server_packet.join_reject, {cookie, reason: RejectionReason.CREATE_GAME_EXISTS}));\r\n      onClose();\r\n      this.peer.off('error', onError);\r\n      this.peer.off('open', onOpen);\r\n    };\r\n    const onOpen = () => {\r\n      //console.log('peer open');\r\n      setTimeout(() => {\r\n        onMessage(write_packet(server_packet.join_accept, {cookie, index: 0, seed: this.seed, difficulty}));\r\n        onMessage(write_packet(server_packet.connect, {id: 0}));\r\n      }, 0);\r\n      this.peer.off('error', onError);\r\n      this.peer.off('open', onOpen);\r\n    };\r\n    this.peer.on('error', onError);\r\n    this.peer.on('open', onOpen);\r\n\r\n    //this.peer.on('error', err => console.log('peer error:', err));\r\n  }\r\n\r\n  onConnect(conn) {\r\n    //conn.on('error', err => console.log('conn error:', err));\r\n    //console.log('conn open');\r\n    const peer = {conn};\r\n    conn.on('data', packet => {\r\n      const reader = new buffer_reader(packet);\r\n      const {type, packet: pkt} = read_packet(reader, client_packet);\r\n      switch (type.code) {\r\n      case client_packet.info.code:\r\n        peer.version = pkt.version;\r\n        break;\r\n      case client_packet.join_game.code:\r\n        if (peer.version !== this.version) {\r\n          conn.send(write_packet(server_packet.join_reject, {cookie: pkt.cookie, reason: RejectionReason.JOIN_VERSION_MISMATCH}));\r\n        } else if (pkt.name !== this.name) {\r\n          conn.send(write_packet(server_packet.join_reject, {cookie: pkt.cookie, reason: RejectionReason.JOIN_GAME_NOT_FOUND}));\r\n        } else if (pkt.password !== this.password) {\r\n          conn.send(write_packet(server_packet.join_reject, {cookie: pkt.cookie, reason: RejectionReason.JOIN_INCORRECT_PASSWORD}));\r\n        } else {\r\n          let i = 1;\r\n          while (i < MAX_PLRS && this.players[i]) {\r\n            ++i;\r\n          }\r\n          if (i >= MAX_PLRS) {\r\n            conn.send(write_packet(server_packet.join_reject, {cookie: pkt.cookie, reason: RejectionReason.JOIN_GAME_FULL}));            \r\n          } else {\r\n            this.players[i] = peer;\r\n            peer.id = i;\r\n            conn.send(write_packet(server_packet.join_accept, {cookie: pkt.cookie, index: i, seed: this.seed, difficulty: this.difficulty}));\r\n            this.send(0xFF, write_packet(server_packet.connect, {id: i}));\r\n          }\r\n        }\r\n        break;\r\n      default:\r\n        if (peer.id != null) {\r\n          this.handle(peer.id, type.code, pkt);\r\n        } else {\r\n          return;\r\n        }\r\n      }\r\n      if (!reader.done()) {\r\n        throw Error('packet too large');\r\n      }\r\n    });\r\n    conn.on('close', () => {\r\n      //console.log('conn close');\r\n      if (peer.id != null) {\r\n        this.drop(peer.id, 0x40000006);\r\n      }\r\n    });\r\n  }\r\n\r\n  send(mask, pkt) {\r\n    for (let i = 1; i < MAX_PLRS; ++i) {\r\n      if ((mask & (1 << i)) && this.players[i]) {\r\n        if (this.players[i].conn) {\r\n          this.players[i].conn.send(pkt);\r\n        }\r\n      }\r\n    }\r\n    // self last since it will destroy the buffer\r\n    if (mask & 1) {\r\n      this.onMessage(pkt);\r\n    }\r\n  }\r\n\r\n  drop(id, reason) {\r\n    if (id === 0) {\r\n      for (let i = 1; i < MAX_PLRS; ++i) {\r\n        this.drop(i, 0x40000006);\r\n      }\r\n      this.onMessage(write_packet(server_packet.disconnect, {id, reason}));\r\n      this.peer.destroy();\r\n      this.onClose();\r\n    } else if (this.players[id]) {\r\n      this.send(0xFF, write_packet(server_packet.disconnect, {id, reason}));\r\n      this.players[id].id = null;\r\n      if (this.players[id].conn) {\r\n        this.players[id].conn.close();\r\n      }\r\n      this.players[id] = null;\r\n    }\r\n  }\r\n\r\n  handle(id, code, pkt) {\r\n    switch (code) {\r\n    case client_packet.leave_game.code:\r\n      this.drop(id, 3);\r\n      break;\r\n    case client_packet.drop_player.code:\r\n      this.drop(pkt.id, pkt.reason);\r\n      break;\r\n    case client_packet.message.code:\r\n      this.send(pkt.id === 0xFF ? ~(1 << id) : (1 << pkt.id), write_packet(server_packet.message, {id, payload: pkt.payload}));\r\n      break;\r\n    case client_packet.turn.code:\r\n      this.send(~(1 << id), write_packet(server_packet.turn, {id, turn: pkt.turn}));\r\n      break;\r\n    default:\r\n      throw Error(`invalid packet ${code}`);\r\n    }\r\n  }\r\n}\r\n\r\nclass webrtc_client {\r\n  pending = [];\r\n\r\n  constructor(version, {cookie, name, password}, onMessage, onClose) {\r\n    this.peer = new Peer(Options);\r\n    this.conn = this.peer.connect(PeerID(name));\r\n\r\n    let needUnreg = true;\r\n    const unreg = () => {\r\n      if (!needUnreg) {\r\n        return;\r\n      }\r\n      needUnreg = false;\r\n      this.peer.off('error', onError);\r\n      this.conn.off('error', onError);\r\n      this.conn.off('open', onOpen);\r\n      clearTimeout(timeout);\r\n    };\r\n    const onError = () => {\r\n      onMessage(write_packet(server_packet.join_reject, {cookie, reason: RejectionReason.JOIN_GAME_NOT_FOUND}));\r\n      onClose();\r\n      unreg();\r\n    };\r\n    const onOpen = () => {\r\n      this.conn.send(write_packet(client_packet.info, {version}));\r\n      this.conn.send(write_packet(client_packet.join_game, {cookie, name, password}));\r\n      for (let pkt of this.pending) {\r\n        this.conn.send(pkt);\r\n      }\r\n      this.pending = null;\r\n      this.conn.off('open', onOpen);\r\n    };\r\n    const timeout = setTimeout(onError, 10000);\r\n    this.peer.on('error', onError);\r\n    this.conn.on('error', onError);\r\n    this.conn.on('open', onOpen);\r\n\r\n    //this.peer.on('error', err => console.log('peer error:', err));\r\n    //this.conn.on('error', err => console.log('conn error:', err));\r\n\r\n    this.conn.on('data', data => {\r\n      unreg();\r\n      const reader = new buffer_reader(data);\r\n      const {type, packet: pkt} = read_packet(reader, server_packet);\r\n      switch (type.code) {\r\n      case server_packet.join_accept.code:\r\n        this.myplr = pkt.index;\r\n        break;\r\n      case server_packet.join_reject.code:\r\n        onClose();\r\n        break;\r\n      case server_packet.disconnect.code:\r\n        if (pkt.id === 'myplr') {\r\n          onClose();\r\n        }\r\n        break;\r\n      default:\r\n      }\r\n      onMessage(data);\r\n    });\r\n    this.conn.on('close', data => {\r\n      onClose();\r\n    });\r\n  }\r\n\r\n  send(packet) {\r\n    if (this.pending) {\r\n      this.pending.push(packet);\r\n    } else {\r\n      this.conn.send(packet);\r\n    }\r\n  }\r\n}\r\n\r\nexport default function webrtc_open(onMessage) {\r\n  let server = null, client = null;\r\n\r\n  let version = 0;\r\n\r\n  /*const prevMessage = onMessage;\r\n  onMessage = data => {\r\n    log_packet(data, server_packet);\r\n    prevMessage(data);\r\n  };*/\r\n\r\n  return {\r\n    send: function(packet) {\r\n      //log_packet(packet, client_packet);\r\n      const reader = new buffer_reader(packet);\r\n      const {type, packet: pkt} = read_packet(reader, client_packet);\r\n      switch (type.code) {\r\n      case client_packet.info.code:\r\n        version = pkt.version;\r\n        break;\r\n      case client_packet.create_game.code:\r\n        if (server || client) {\r\n          onMessage(write_packet(server_packet.join_reject, {cookie: pkt.cookie, reason: RejectionReason.JOIN_ALREADY_IN_GAME}));\r\n        } else {\r\n          server = new webrtc_server(version, pkt, onMessage, () => server = null);\r\n        }\r\n        break;\r\n      case client_packet.join_game.code:\r\n        if (server || client) {\r\n          onMessage(write_packet(server_packet.join_reject, {cookie: pkt.cookie, reason: RejectionReason.JOIN_ALREADY_IN_GAME}));\r\n        } else {\r\n          client = new webrtc_client(version, pkt, onMessage, () => client = null);\r\n        }\r\n        break;\r\n      default:\r\n        if (server) {\r\n          server.handle(0, type.code, pkt);\r\n          if (type.code === client_packet.leave_game.code) {\r\n            server = null;\r\n          }\r\n        } else if (client) {\r\n          client.send(packet);\r\n          if (type.code === client_packet.leave_game.code) {\r\n            client = null;\r\n          }\r\n          return;\r\n        } else if (type.code !== client_packet.leave_game.code) {\r\n          throw Error(`invalid packet ${type.code}`);\r\n        }\r\n      }\r\n      if (!reader.done()) {\r\n        throw Error('packet too large');\r\n      }\r\n    },\r\n  };\r\n}\r\n","import Worker from './game.worker.js';\r\nimport init_sound from './sound';\r\nimport load_spawn from './load_spawn';\r\nimport webrtc_open from './webrtc';\r\n\r\nfunction onRender(api, ctx, {bitmap, images, text, clip, belt}) {\r\n  if (bitmap) {\r\n    ctx.transferFromImageBitmap(bitmap);\r\n  } else {\r\n    for (let {x, y, w, h, data} of images) {\r\n      const image = ctx.createImageData(w, h);\r\n      image.data.set(data);\r\n      ctx.putImageData(image, x, y);\r\n    }\r\n    if (text.length) {\r\n      ctx.save();\r\n      ctx.font = 'bold 13px Times New Roman';\r\n      if (clip) {\r\n        const {x0, y0, x1, y1} = clip;\r\n        ctx.beginPath();\r\n        ctx.rect(x0, y0, x1 - x0, y1 - y0);\r\n        ctx.clip();\r\n      }\r\n      for (let {x, y, text: str, color} of text) {\r\n        const r = ((color >> 16) & 0xFF);\r\n        const g = ((color >> 8) & 0xFF);\r\n        const b = (color & 0xFF);\r\n        ctx.fillStyle = `rgb(${r}, ${g}, ${b})`;\r\n        ctx.fillText(str, x, y + 22);\r\n      }\r\n      ctx.restore();\r\n    }\r\n  }\r\n\r\n  api.updateBelt(belt);\r\n}\r\n\r\nfunction testOffscreen() {\r\n  return false;\r\n  // This works but I couldn't see any performance difference, and support for 2D canvas in workers is very poor.\r\n  // In this mode, instead of sending a batch of areas to draw back to the main thread, the worker does all drawing on its own and sends a complete bitmap object back.\r\n  // However, this effectively clears the worker's canvas, so we need to redraw the whole frame every time, which defeats the performance gained from reduced copying.\r\n  /*try {\r\n    const canvas = document.createElement(\"canvas\");\r\n    const offscreen = canvas.transferControlToOffscreen();\r\n    const context = offscreen.getContext(\"2d\");\r\n    return context != null;\r\n  } catch (e) {\r\n    return false;\r\n  }*/\r\n}\r\n\r\nasync function do_load_game(api, audio, mpq, spawn) {\r\n  const fs = await api.fs;\r\n  if (spawn && !mpq) {\r\n    await load_spawn(api, fs);\r\n  }\r\n\r\n  let context = null, offscreen = false;\r\n  if (testOffscreen()) {\r\n    context = api.canvas.getContext(\"bitmaprenderer\");\r\n    offscreen = true;\r\n  } else {\r\n    context = api.canvas.getContext(\"2d\", {alpha: false});\r\n  }\r\n  return await new Promise((resolve, reject) => {\r\n    try {\r\n      const worker = new Worker();\r\n\r\n      let packetQueue = [];\r\n      const webrtc = webrtc_open(data => {\r\n        packetQueue.push(data);\r\n      });\r\n\r\n      worker.addEventListener(\"message\", ({data}) => {\r\n        switch (data.action) {\r\n        case \"loaded\":\r\n          resolve((func, ...params) => worker.postMessage({action: \"event\", func, params}));\r\n          break;\r\n        case \"render\":\r\n          onRender(api, context, data.batch);\r\n          break;\r\n        case \"audio\":\r\n          audio[data.func](...data.params);\r\n          break;\r\n        case \"audioBatch\":\r\n          for (let {func, params} of data.batch) {\r\n            audio[func](...params);\r\n          }\r\n          break;\r\n        case \"fs\":\r\n          fs[data.func](...data.params);\r\n          break;\r\n        case \"cursor\":\r\n          api.setCursorPos(data.x, data.y);\r\n          break;\r\n        case \"keyboard\":\r\n          api.openKeyboard(data.rect);\r\n          break;\r\n        case \"error\":\r\n          audio.stop_all();\r\n          api.onError(data.error, data.stack);\r\n          break;\r\n        case \"failed\":\r\n          reject({message: data.error, stack: data.stack});\r\n          break;\r\n        case \"progress\":\r\n          api.onProgress({text: data.text, loaded: data.loaded, total: data.total});\r\n          break;\r\n        case \"exit\":\r\n          api.onExit();\r\n          break;\r\n        case \"current_save\":\r\n          api.setCurrentSave(data.name);\r\n          break;\r\n          case \"packet\":\r\n          webrtc.send(data.buffer);\r\n          break;\r\n        case \"packetBatch\":\r\n          for (let packet of data.batch) {\r\n            webrtc.send(packet);\r\n          }\r\n          break;\r\n        default:\r\n        }\r\n      });          \r\n      const transfer= [];\r\n      for (let [, file] of fs.files) {\r\n        transfer.push(file.buffer);\r\n      }\r\n      worker.postMessage({action: \"init\", files: fs.files, mpq, spawn, offscreen}, transfer);\r\n      setInterval(() => {\r\n        if (packetQueue.length) {\r\n          worker.postMessage({action: \"packetBatch\", batch: packetQueue}, packetQueue);\r\n          packetQueue.length = 0;\r\n        }\r\n      }, 20);\r\n      delete fs.files;\r\n    } catch (e) {\r\n      reject(e);\r\n    }\r\n  });\r\n}\r\n\r\nexport default function load_game(api, mpq, spawn) {\r\n  const audio = init_sound();\r\n  return do_load_game(api, audio, mpq, spawn);\r\n}\r\n","import React from 'react';\r\nimport './App.scss';\r\nimport classNames from 'classnames';\r\nimport ReactGA from 'react-ga';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTimes, faDownload } from '@fortawesome/free-solid-svg-icons';\r\nimport getPlayerName from './api/savefile';\r\n\r\nimport { mapStackTrace } from 'sourcemapped-stacktrace';\r\n\r\nimport create_fs from './fs';\r\nimport load_game from './api/loader';\r\nimport { SpawnSizes } from './api/load_spawn';\r\n\r\nimport Peer from 'peerjs';\r\n\r\nwindow.Peer = Peer;\r\n\r\nif (process.env.NODE_ENV === 'production') {\r\n  ReactGA.initialize('UA-43123589-6');\r\n  ReactGA.pageview('/');\r\n}\r\n\r\nfunction reportLink(e, retail) {\r\n  const message = (e.message || \"Unknown error\") + (e.stack ? \"\\n\" + e.stack : \"\");\r\n  const url = new URL(\"https://github.com/d07RiV/diabloweb/issues/new\");\r\n  url.searchParams.set(\"body\",\r\n`**Description:**\r\n[Please describe what you were doing before the error occurred]\r\n\r\n**App version:**\r\nDiabloWeb ${process.env.VERSION} (${retail ? 'Retail' : 'Shareware'})\r\n\r\n**Error message:**\r\n    \r\n${message.split(\"\\n\").map(line => \"    \" + line).join(\"\\n\")}\r\n\r\n**User agent:**\r\n\r\n    ${navigator.userAgent}\r\n\r\n**Save file:**\r\n[Please attach the save file, if applicable. The error box should have a link to download the current save you were playing; alternatively, you can open dev console on the game page (F12) and type in ${\"`DownloadSaves()`\"}]\r\n`);\r\n  return url.toString();\r\n}\r\n\r\nfunction isDropFile(e) {\r\n  if (e.dataTransfer.items) {\r\n    for (let i = 0; i < e.dataTransfer.items.length; ++i) {\r\n      if (e.dataTransfer.items[i].kind === \"file\") {\r\n        return true;\r\n      }\r\n    }\r\n  } if (e.dataTransfer.files.length) {\r\n    return true;\r\n  }\r\n  return false;\r\n}\r\nfunction getDropFile(e) {\r\n  if (e.dataTransfer.items) {\r\n    for (let i = 0; i < e.dataTransfer.items.length; ++i) {\r\n      if (e.dataTransfer.items[i].kind === \"file\") {\r\n        return e.dataTransfer.items[i].getAsFile();\r\n      }\r\n    }\r\n  } if (e.dataTransfer.files.length) {\r\n    return e.dataTransfer.files[0];\r\n  }\r\n}\r\n\r\nconst TOUCH_MOVE = 0;\r\nconst TOUCH_RMB = 1;\r\nconst TOUCH_SHIFT = 2;\r\n\r\nfunction findKeyboardRule() {\r\n  for (let sheet of document.styleSheets) {\r\n    for (let rule of sheet.cssRules) {\r\n      if (rule.type === CSSRule.MEDIA_RULE && rule.conditionText === '(min-aspect-ratio: 3/1)') {\r\n        for (let sub of rule.cssRules) {\r\n          if (sub.selectorText === '.App.keyboard .Body .inner') {\r\n            return sub;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\nlet keyboardRule = null;\r\ntry {\r\n  keyboardRule = findKeyboardRule();\r\n} catch (e) {\r\n}\r\n\r\nconst Link = ({children, ...props}) => <a target=\"_blank\" rel=\"noopener noreferrer\" {...props}>{children}</a>;\r\n\r\nclass App extends React.Component {\r\n  files = new Map();\r\n  state = {started: false, loading: false, dropping: 0, has_spawn: false};\r\n  cursorPos = {x: 0, y: 0};\r\n\r\n  touchControls = false;\r\n  touchButtons = [null, null, null, null, null, null];\r\n  touchCtx = [null, null, null, null, null, null];\r\n  touchMods = [false, false, false, false, false, false];\r\n  touchBelt = [-1, -1, -1, -1, -1, -1];\r\n  maxKeyboard = 0;\r\n\r\n  fs = create_fs(true);\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.setTouch0 = this.setTouch_.bind(this, 0);\r\n    this.setTouch1 = this.setTouch_.bind(this, 1);\r\n    this.setTouch2 = this.setTouch_.bind(this, 2);\r\n    this.setTouch3 = this.setTouchBelt_.bind(this, 3);\r\n    this.setTouch4 = this.setTouchBelt_.bind(this, 4);\r\n    this.setTouch5 = this.setTouchBelt_.bind(this, 5);\r\n  }\r\n\r\n  componentDidMount() {\r\n    document.addEventListener(\"drop\", this.onDrop, true);\r\n    document.addEventListener(\"dragover\", this.onDragOver, true);\r\n    document.addEventListener(\"dragenter\", this.onDragEnter, true);\r\n    document.addEventListener(\"dragleave\", this.onDragLeave, true);\r\n\r\n    this.fs.then(fs => {\r\n      const spawn = fs.files.get('spawn.mpq');\r\n      if (spawn && SpawnSizes.includes(spawn.byteLength)) {\r\n        this.setState({has_spawn: true});\r\n      }\r\n      if ([...fs.files.keys()].filter(name => name.match(/\\.sv$/i)).length) {\r\n        this.setState({save_names: true});\r\n      }\r\n    });\r\n  }\r\n\r\n  onDrop = e => {\r\n    const file = getDropFile(e);\r\n    if (file) {\r\n      e.preventDefault();\r\n      this.start(file);\r\n    }\r\n    this.setState({dropping: 0});\r\n  }\r\n  onDragEnter = e => {\r\n    e.preventDefault();\r\n    this.setDropping(1);\r\n  }\r\n  onDragOver = e => {\r\n    if (isDropFile(e)) {\r\n      e.preventDefault();\r\n    }\r\n  }\r\n  onDragLeave = e => {\r\n    this.setDropping(-1);\r\n  }\r\n  setDropping(inc) {\r\n    this.setState(({dropping}) => ({dropping: Math.max(dropping + inc, 0)}));\r\n  }\r\n\r\n  onError(message, stack) {\r\n    (async () => {\r\n      const errorObject = {message};\r\n      if (this.saveName) {\r\n        errorObject.save = await (await this.fs).fileUrl(this.saveName);\r\n      }\r\n      if (stack) {\r\n        mapStackTrace(stack, stack => {\r\n          this.setState(({error}) => !error && {error: {...errorObject, stack: stack.join(\"\\n\")}});\r\n        });\r\n      } else {\r\n        this.setState(({error}) => !error && {error: errorObject});\r\n      }\r\n    })();\r\n  }\r\n\r\n  openKeyboard(rect) {\r\n    if (rect) {\r\n      this.showKeyboard = {\r\n        left: `${(100 * (rect[0] - 10) / 640).toFixed(2)}%`,\r\n        top: `${(100 * (rect[1] - 10) / 480).toFixed(2)}%`,\r\n        width: `${(100 * (rect[2] - rect[0] + 20) / 640).toFixed(2)}%`,\r\n        height: `${(100 * (rect[3] - rect[1] + 20) / 640).toFixed(2)}%`,\r\n      };\r\n      this.maxKeyboard = rect[4];\r\n      this.element.classList.add(\"keyboard\");\r\n      Object.assign(this.keyboard.style, this.showKeyboard);\r\n      this.keyboard.focus();\r\n      if (keyboardRule) {\r\n        keyboardRule.style.transform = `translate(-50%, ${(-(rect[1] + rect[3]) * 56.25 / 960).toFixed(2)}vw)`;\r\n      }\r\n    } else {\r\n      this.showKeyboard = false;\r\n      this.element.classList.remove(\"keyboard\");\r\n      this.keyboard.blur();\r\n      this.keyboard.value = \"\";\r\n      this.keyboardNum = 0;\r\n    }\r\n  }\r\n\r\n  setCursorPos(x, y) {\r\n    const rect = this.canvas.getBoundingClientRect();\r\n    this.cursorPos = {\r\n      x: rect.left + (rect.right - rect.left) * x / 640,\r\n      y: rect.top + (rect.bottom - rect.top) * y / 480,\r\n    };\r\n    setTimeout(() => {\r\n      this.game(\"DApi_Mouse\", 0, 0, 0, x, y);\r\n    });\r\n  }\r\n\r\n  onProgress(progress) {\r\n    this.setState({progress});\r\n  }\r\n\r\n  onExit() {\r\n    if (!this.state.error) {\r\n      window.location.reload();\r\n    }\r\n  }\r\n\r\n  setCurrentSave(name) {\r\n    this.saveName = name;\r\n  }\r\n\r\n  showSaves = () => {\r\n    if (this.state.save_names === true) {\r\n      this.updateSaves().then(() => this.setState({show_saves: !this.state.show_saves}));\r\n    } else {\r\n      this.setState({show_saves: !this.state.show_saves});\r\n    }\r\n  }\r\n  updateSaves() {\r\n    return this.fs.then(fs => {\r\n      const saves = {};\r\n      [...fs.files.keys()].filter(name => name.match(/\\.sv$/i)).forEach(name => {\r\n        saves[name] = getPlayerName(fs.files.get(name).buffer, name);\r\n      });\r\n      this.setState({save_names: saves});\r\n    });\r\n  }\r\n  removeSave(name) {\r\n    if (window.confirm(`Are you sure you want to delete ${name}?`)) {\r\n      (async () => {\r\n        const fs = await this.fs;\r\n        await fs.delete(name.toLowerCase());\r\n        fs.files.delete(name.toLowerCase());\r\n        this.updateSaves();\r\n      })();\r\n    }\r\n  }\r\n  downloadSave(name) {\r\n    this.fs.then(fs => fs.download(name));\r\n  }\r\n\r\n  drawBelt(idx, slot) {\r\n    if (!this.canvas) return;\r\n    if (!this.touchButtons[idx]) {\r\n      return;\r\n    }\r\n    this.touchBelt[idx] = slot;\r\n    if (slot >= 0) {\r\n      this.touchButtons[idx].style.display = \"block\";\r\n      this.touchCtx[idx].drawImage(this.canvas, 205 + 29 * slot, 357, 28, 28, 0, 0, 28, 28);\r\n    } else {\r\n      this.touchButtons[idx].style.display = \"none\";\r\n    }\r\n  }\r\n\r\n  updateBelt(belt) {\r\n    if (belt) {\r\n      const used = new Set();\r\n      let pos = 3;\r\n      for (let i = 0; i < belt.length && pos < 6; ++i) {\r\n        if (belt[i] >= 0 && !used.has(belt[i])) {\r\n          this.drawBelt(pos++, i);\r\n          used.add(belt[i]);\r\n        }\r\n      }\r\n      for (; pos < 6; ++pos) {\r\n        this.drawBelt(pos, -1);\r\n      }\r\n    } else {\r\n      this.drawBelt(3, -1);\r\n      this.drawBelt(4, -1);\r\n      this.drawBelt(5, -1);\r\n    }\r\n  }\r\n\r\n  start(file) {\r\n    if (file && file.name.match(/\\.sv$/i)) {\r\n      this.fs.then(fs => fs.upload(file)).then(() => {\r\n        this.updateSaves();\r\n      });\r\n      return;\r\n    }\r\n    if (this.state.show_saves) {\r\n      return;\r\n    }\r\n    if (file && !file.name.match(/\\.mpq$/i)) {\r\n      window.alert('Please select an MPQ file. If you downloaded the installer from GoG, you will need to install it on PC and use the MPQ file from the installation folder.');\r\n      return;\r\n    }\r\n\r\n    document.removeEventListener(\"drop\", this.onDrop, true);\r\n    document.removeEventListener(\"dragover\", this.onDragOver, true);\r\n    document.removeEventListener(\"dragenter\", this.onDragEnter, true);\r\n    document.removeEventListener(\"dragleave\", this.onDragLeave, true);\r\n    this.setState({dropping: 0});\r\n\r\n    const retail = !!(file && file.name.match(/^diabdat\\.mpq$/i));\r\n    if (process.env.NODE_ENV === 'production') {\r\n      ReactGA.event({\r\n        category: 'Game',\r\n        action: retail ? 'Start Retail' : 'Start Shareware',\r\n      });\r\n    }\r\n\r\n    this.setState({loading: true, retail});\r\n\r\n    load_game(this, file, !retail).then(game => {\r\n      this.game = game;\r\n\r\n      document.addEventListener('mousemove', this.onMouseMove, true);\r\n      document.addEventListener('mousedown', this.onMouseDown, true);\r\n      document.addEventListener('mouseup', this.onMouseUp, true);\r\n      document.addEventListener('keydown', this.onKeyDown, true);\r\n      document.addEventListener('keyup', this.onKeyUp, true);\r\n      document.addEventListener('contextmenu', this.onMenu, true);\r\n\r\n      document.addEventListener('touchstart', this.onTouchStart, {passive: false, capture: true});\r\n      document.addEventListener('touchmove', this.onTouchMove, {passive: false, capture: true});\r\n      document.addEventListener('touchend', this.onTouchEnd, {passive: false, capture: true});\r\n\r\n      document.addEventListener('pointerlockchange', this.onPointerLockChange);\r\n      window.addEventListener('resize', this.onResize);\r\n\r\n      this.setState({started: true});\r\n    }, e => this.onError(e.message, e.stack));\r\n  }\r\n\r\n  pointerLocked() {\r\n    return document.pointerLockElement === this.canvas || document.mozPointerLockElement === this.canvas;\r\n  }\r\n\r\n  mousePos(e) {\r\n    const rect = this.canvas.getBoundingClientRect();\r\n    if (this.pointerLocked()) {\r\n      this.cursorPos.x = Math.max(rect.left, Math.min(rect.right, this.cursorPos.x + e.movementX));\r\n      this.cursorPos.y = Math.max(rect.top, Math.min(rect.bottom, this.cursorPos.y + e.movementY));\r\n    } else {\r\n      this.cursorPos = {x: e.clientX, y: e.clientY};\r\n    }\r\n    return {\r\n      x: Math.max(0, Math.min(Math.round((this.cursorPos.x - rect.left) / (rect.right - rect.left) * 640), 639)),\r\n      y: Math.max(0, Math.min(Math.round((this.cursorPos.y - rect.top) / (rect.bottom - rect.top) * 480), 479)),\r\n    };\r\n  }\r\n\r\n  mouseButton(e) {\r\n    switch (e.button) {\r\n    case 0: return 1;\r\n    case 1: return 4;\r\n    case 2: return 2;\r\n    case 3: return 5;\r\n    case 4: return 6;\r\n    default: return 1;\r\n    }\r\n  }\r\n  eventMods(e) {\r\n    return ((e.shiftKey || this.touchMods[TOUCH_SHIFT]) ? 1 : 0) + (e.ctrlKey ? 2 : 0) + (e.altKey ? 4 : 0) + (e.touches ? 8 : 0);\r\n  }\r\n\r\n  onResize = () => {\r\n    document.exitPointerLock();\r\n  }\r\n\r\n  onPointerLockChange = () => {\r\n    if (window.screen && window.innerHeight === window.screen.height && !this.pointerLocked()) {\r\n      // assume that the user pressed escape\r\n      this.game(\"DApi_Key\", 0, 0, 27);\r\n      this.game(\"DApi_Key\", 1, 0, 27);\r\n    }\r\n  }\r\n\r\n  onMouseMove = e => {\r\n    if (!this.canvas) return;\r\n    const {x, y} = this.mousePos(e);\r\n    this.game(\"DApi_Mouse\", 0, 0, this.eventMods(e), x, y);\r\n    e.preventDefault();\r\n  }\r\n\r\n  onMouseDown = e => {\r\n    if (!this.canvas) return;\r\n    if (e.target === this.keyboard) {\r\n      return;\r\n    }\r\n    if (this.touchControls) {\r\n      this.touchControls = false;\r\n      this.element.classList.remove(\"touch\");\r\n    }\r\n    const {x, y} = this.mousePos(e);\r\n    if (window.screen && window.innerHeight === window.screen.height) {\r\n      // we're in fullscreen, let's get pointer lock!\r\n      if (!this.pointerLocked()) {\r\n        this.canvas.requestPointerLock();\r\n      }\r\n    }\r\n    this.game(\"DApi_Mouse\", 1, this.mouseButton(e), this.eventMods(e), x, y);\r\n    e.preventDefault();\r\n  }\r\n\r\n  onMouseUp = e => {\r\n    if (!this.canvas) return;\r\n    if (e.target === this.keyboard) {\r\n      //return;\r\n    }\r\n    const {x, y} = this.mousePos(e);\r\n    this.game(\"DApi_Mouse\", 2, this.mouseButton(e), this.eventMods(e), x, y);\r\n    if (e.target !== this.keyboard) {\r\n      e.preventDefault();\r\n    }\r\n  }\r\n\r\n  onKeyDown = e => {\r\n    if (!this.canvas) return;\r\n    this.game(\"DApi_Key\", 0, this.eventMods(e), e.keyCode);\r\n    if (!this.showKeyboard && (e.keyCode >= 32 && e.key.length === 1)) {\r\n      this.game(\"DApi_Char\", e.key.charCodeAt(0));\r\n    } else if (e.keyCode === 8 || e.keyCode === 13) {\r\n      this.game(\"DApi_Char\", e.keyCode);\r\n    }\r\n    this.clearKeySel();\r\n    if (!this.showKeyboard) {\r\n      if (e.keyCode === 8 || e.keyCode === 9 || (e.keyCode >= 112 && e.keyCode <= 119)) {\r\n        e.preventDefault();\r\n      }\r\n    }\r\n  }\r\n\r\n  onMenu = e => {\r\n    e.preventDefault();\r\n  }\r\n\r\n  onKeyUp = e => {\r\n    if (!this.canvas) return;\r\n    this.game(\"DApi_Key\", 1, this.eventMods(e), e.keyCode);\r\n    this.clearKeySel();\r\n  }\r\n\r\n  clearKeySel() {\r\n    if (this.showKeyboard) {\r\n      const len = this.keyboard.value.length;\r\n      this.keyboard.setSelectionRange(len, len);\r\n    }\r\n  }\r\n\r\n  onKeyboardInner(flags) {\r\n    if (this.showKeyboard) {\r\n      const text = this.keyboard.value;\r\n      let valid;\r\n      if (this.maxKeyboard > 0) {\r\n        valid = (text.match(/[\\x20-\\x7E]/g) || []).join(\"\").substring(0, this.maxKeyboard);\r\n      } else {\r\n        const maxValue = -this.maxKeyboard;\r\n        if (text.match(/^\\d*$/)) {\r\n          this.keyboardNum = Math.min(text.length ? parseInt(text) : 0, maxValue);\r\n        }\r\n        valid = (this.keyboardNum ? this.keyboardNum.toString() : \"\");\r\n      }\r\n      if (text !== valid) {\r\n        this.keyboard.value = valid;\r\n      }\r\n      this.clearKeySel();\r\n      this.game(\"text\", valid, flags);\r\n    }\r\n  }\r\n  onKeyboard = () => {\r\n    this.onKeyboardInner(0);\r\n  }\r\n  onKeyboardBlur = () => {\r\n    this.onKeyboardInner(1);\r\n  }\r\n\r\n  parseFile = e => {\r\n    const files = e.target.files;\r\n    if (files.length > 0) {\r\n      this.start(files[0]);\r\n    }\r\n  }\r\n\r\n  parseSave = e => {\r\n    const files = e.target.files;\r\n    if (files.length > 0) {\r\n      this.start(files[0]);\r\n    }\r\n  }\r\n\r\n  touchButton = null;\r\n  touchCanvas = null;\r\n\r\n  setTouchMod(index, value, use) {\r\n    if (index < 3) {\r\n      this.touchMods[index] = value;\r\n      if (this.touchButtons[index]) {\r\n        this.touchButtons[index].classList.toggle(\"active\", value);\r\n      }\r\n    } else if (use && this.touchBelt[index] >= 0) {\r\n      const now = performance.now();\r\n      if (!this.beltTime || now - this.beltTime > 750) {\r\n        this.game(\"DApi_Char\", 49 + this.touchBelt[index]);\r\n        this.beltTime = now;\r\n      }\r\n    }\r\n  }\r\n\r\n  updateTouchButton(touches, release) {\r\n    let touchOther = null;\r\n    if (!this.touchControls) {\r\n      this.touchControls = true;\r\n      this.element.classList.add(\"touch\");\r\n    }\r\n    const btn = this.touchButton;\r\n    for (let {target, identifier, clientX, clientY} of touches) {\r\n      if (btn && btn.id === identifier && this.touchButtons[btn.index] === target) {\r\n        if (touches.length > 1) {\r\n          btn.stick = false;\r\n        }\r\n        btn.clientX = clientX;\r\n        btn.clientY = clientY;\r\n        this.touchCanvas = [...touches].find(t => t.identifier !== identifier);\r\n        if (this.touchCanvas) {\r\n          this.touchCanvas = {clientX: this.touchCanvas.clientX, clientY: this.touchCanvas.clientY};\r\n        }\r\n        delete this.panPos;\r\n        return this.touchCanvas != null;\r\n      }\r\n      const idx = this.touchButtons.indexOf(target);\r\n      if (idx >= 0 && !touchOther) {\r\n        touchOther = {id: identifier, index: idx, stick: true, original: this.touchMods[idx], clientX, clientY};\r\n      }\r\n    }\r\n    if (btn && !touchOther && release && btn.stick) {\r\n      const rect = this.touchButtons[btn.index].getBoundingClientRect();\r\n      const {clientX, clientY} = btn;\r\n      if (clientX >= rect.left && clientX < rect.right && clientY >= rect.top && clientY < rect.bottom) {\r\n        this.setTouchMod(btn.index, !btn.original, true);\r\n      } else {\r\n        this.setTouchMod(btn.index, btn.original);\r\n      }\r\n    } else if (btn) {\r\n      this.setTouchMod(btn.index, false);\r\n    }\r\n    this.touchButton = touchOther;\r\n    if (touchOther) {\r\n      this.setTouchMod(touchOther.index, true);\r\n      if (touchOther.index === TOUCH_MOVE) {\r\n        this.setTouchMod(TOUCH_RMB, false);\r\n      } else if (touchOther.index === TOUCH_RMB) {\r\n        this.setTouchMod(TOUCH_MOVE, false);\r\n      }\r\n      delete this.panPos;\r\n    } else if (touches.length === 2) {\r\n      const x = (touches[1].clientX + touches[0].clientX) / 2, y = (touches[1].clientY + touches[0].clientY) / 2;\r\n      if (this.panPos) {\r\n        const dx = x - this.panPos.x, dy = y - this.panPos.y;\r\n        const step = this.canvas.offsetHeight / 12;\r\n        if (Math.max(Math.abs(dx), Math.abs(dy)) > step) {\r\n          let key;\r\n          if (Math.abs(dx) > Math.abs(dy)) {\r\n            key = (dx > 0 ? 0x25 : 0x27);\r\n          } else {\r\n            key = (dy > 0 ? 0x26 : 0x28);\r\n          }\r\n          this.game(\"DApi_Key\", 0, 0, key);\r\n          // key up is ignored anyway\r\n          this.panPos = {x, y};\r\n        }\r\n      } else {\r\n        this.game(\"DApi_Mouse\", 0, 0, 24, 320, 180);\r\n        this.game(\"DApi_Mouse\", 2, 1, 24, 320, 180);\r\n        this.panPos = {x, y};\r\n      }\r\n      this.touchCanvas = null;\r\n      return false;\r\n    } else {\r\n      delete this.panPos;\r\n    }\r\n    this.touchCanvas = [...touches].find(t => !touchOther || t.identifier !== touchOther.id);\r\n    if (this.touchCanvas) {\r\n      this.touchCanvas = {clientX: this.touchCanvas.clientX, clientY: this.touchCanvas.clientY};\r\n    }\r\n    return this.touchCanvas != null;\r\n  }\r\n\r\n  onTouchStart = e => {\r\n    if (!this.canvas) return;\r\n    if (e.target === this.keyboard) {\r\n      return;\r\n    } else {\r\n      this.keyboard.blur();\r\n    }\r\n    e.preventDefault();\r\n    if (this.updateTouchButton(e.touches, false)) {\r\n      const {x, y} = this.mousePos(this.touchCanvas);\r\n      this.game(\"DApi_Mouse\", 0, 0, this.eventMods(e), x, y);\r\n      if (!this.touchMods[TOUCH_MOVE]) {\r\n        this.game(\"DApi_Mouse\", 1, this.touchMods[TOUCH_RMB] ? 2 : 1, this.eventMods(e), x, y);\r\n      }\r\n    }\r\n  }\r\n  onTouchMove = e => {\r\n    if (!this.canvas) return;\r\n    if (e.target === this.keyboard) {\r\n      return;\r\n    }\r\n    e.preventDefault();\r\n    if (this.updateTouchButton(e.touches, false)) {\r\n      const {x, y} = this.mousePos(this.touchCanvas);\r\n      this.game(\"DApi_Mouse\", 0, 0, this.eventMods(e), x, y);\r\n    }\r\n  }\r\n  onTouchEnd = e => {\r\n    if (!this.canvas) return;\r\n    if (e.target === this.keyboard) {\r\n      //return;\r\n    } else {\r\n      e.preventDefault();\r\n    }\r\n    const prevTc = this.touchCanvas;\r\n    this.updateTouchButton(e.touches, true);\r\n    if (prevTc && !this.touchCanvas) {\r\n      const {x, y} = this.mousePos(prevTc);\r\n      this.game(\"DApi_Mouse\", 2, 1, this.eventMods(e), x, y);\r\n      this.game(\"DApi_Mouse\", 2, 2, this.eventMods(e), x, y);\r\n\r\n      if (this.touchMods[TOUCH_RMB] && (!this.touchButton || this.touchButton.index !== TOUCH_RMB)) {\r\n        this.setTouchMod(TOUCH_RMB, false);\r\n      }\r\n    }\r\n    if (!document.fullscreenElement) {\r\n      this.element.requestFullscreen();\r\n    }\r\n  }\r\n\r\n  setCanvas = e => this.canvas = e;\r\n  setElement = e => this.element = e;\r\n  setKeyboard = e => this.keyboard = e;\r\n  setTouch_(i, e) {\r\n    this.touchButtons[i] = e;\r\n  }\r\n  setTouchBelt_(i, e) {\r\n    this.touchButtons[i] = e;\r\n    if (e) {\r\n      const canvas = document.createElement(\"canvas\");\r\n      canvas.width = 28;\r\n      canvas.height = 28;\r\n      e.appendChild(canvas);\r\n      this.touchCtx[i] = canvas.getContext(\"2d\");\r\n    } else {\r\n      this.touchCtx[i] = null;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {started, loading, error, progress, dropping, has_spawn, save_names, show_saves} = this.state;\r\n    const plrClass = [\"Warrior\", \"Rogue\", \"Sorcerer\"];\r\n    if (show_saves && typeof save_names === \"object\") {\r\n      return (\r\n        <div className={classNames(\"App\", {touch: this.touchControls, started, dropping, keyboard: !!this.showKeyboard})} ref={this.setElement}>\r\n          <div className=\"BodyV\">\r\n            <div className=\"start\">\r\n              <ul className=\"saveList\">\r\n                {Object.entries(save_names).map(([name, info]) => <li key={name}>\r\n                  {name}{info ? <span className=\"info\">{info.name} (lv. {info.level} {plrClass[info.cls]})</span> : \"\"}\r\n                  <FontAwesomeIcon className=\"btnDownload\" icon={faDownload} onClick={() => this.downloadSave(name)}/>\r\n                  <FontAwesomeIcon className=\"btnRemove\" icon={faTimes} onClick={() => this.removeSave(name)}/>\r\n                </li>)}\r\n              </ul>\r\n              <form>\r\n                <label htmlFor=\"loadFile\" className=\"startButton\">Upload Save</label>\r\n                <input accept=\".sv\" type=\"file\" id=\"loadFile\" style={{display: \"none\"}} onChange={this.parseSave}/>\r\n              </form>\r\n              <div className=\"startButton\" onClick={() => this.setState({show_saves: false})}>Back</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n    return (\r\n      <div className={classNames(\"App\", {touch: this.touchControls, started, dropping, keyboard: !!this.showKeyboard})} ref={this.setElement}>\r\n        <div className=\"touch-ui touch-mods\">\r\n          <div className={classNames(\"touch-button\", \"touch-button-0\", {active: this.touchMods[0]})} ref={this.setTouch0}/>\r\n          <div className={classNames(\"touch-button\", \"touch-button-1\", {active: this.touchMods[1]})} ref={this.setTouch1}/>\r\n          <div className={classNames(\"touch-button\", \"touch-button-2\", {active: this.touchMods[2]})} ref={this.setTouch2}/>\r\n        </div>\r\n        <div className=\"touch-ui touch-belt\">\r\n          <div className={classNames(\"touch-button\", \"touch-button-0\")} ref={this.setTouch3}/>\r\n          <div className={classNames(\"touch-button\", \"touch-button-1\")} ref={this.setTouch4}/>\r\n          <div className={classNames(\"touch-button\", \"touch-button-2\")} ref={this.setTouch5}/>\r\n        </div>\r\n        <div className=\"Body\">\r\n          <div className=\"inner\">\r\n            {!error && <canvas ref={this.setCanvas} width={640} height={480}/>}\r\n            <input type=\"text\" className=\"keyboard\" onChange={this.onKeyboard} onBlur={this.onKeyboardBlur} ref={this.setKeyboard} spellCheck={false} style={this.showKeyboard || {}}/>\r\n          </div>\r\n        </div>\r\n        <div className=\"BodyV\">\r\n          {!!error && (\r\n            <Link className=\"error\" href={reportLink(error, this.state.retail)}>\r\n              <p className=\"header\">The following error has occurred:</p>\r\n              <p className=\"body\">{error.message}</p>\r\n              <p className=\"footer\">Click to create an issue on GitHub</p>\r\n              {error.save != null && <a href={error.save} download={this.saveName}>Download save file</a>}\r\n            </Link>\r\n          )}\r\n          {!!loading && !started && !error && (\r\n            <div className=\"loading\">\r\n              {(progress && progress.text) || 'Loading...'}\r\n              {progress != null && !!progress.total && (\r\n                <span className=\"progressBar\"><span><span style={{width: `${Math.round(100 * progress.loaded / progress.total)}%`}}/></span></span>\r\n              )}\r\n            </div>\r\n          )}\r\n          {!started && !loading && !error && (\r\n            <div className=\"start\">\r\n              <p>\r\n                This is a web port of the original Diablo game, based on source code reconstructed by\r\n                GalaXyHaXz and devilution team. The project page with information and links can be found over here <Link href=\"https://github.com/d07RiV/diabloweb\">https://github.com/d07RiV/diabloweb</Link>\r\n              </p>\r\n              <p>\r\n                If you own the original game, you can drop the original DIABDAT.MPQ onto this page or click the button below to start playing.\r\n                The game can be purchased from <Link href=\"https://www.gog.com/game/diablo\">GoG</Link>.\r\n              </p>\r\n              {!has_spawn && (\r\n                <p>\r\n                  Or you can play the shareware version for free (50MB download).\r\n                </p>\r\n              )}\r\n              <form>\r\n                <label htmlFor=\"loadFile\" className=\"startButton\">Select MPQ</label>\r\n                <input accept=\".mpq\" type=\"file\" id=\"loadFile\" style={{display: \"none\"}} onChange={this.parseFile}/>\r\n              </form>\r\n              <div className=\"startButton\" onClick={() => this.start()}>Play Shareware</div>\r\n              {!!save_names && <div className=\"startButton\" onClick={this.showSaves}>Manage Saves</div>}\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './reset.css';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\nserviceWorker.register({\r\n  onUpdate() {\r\n  },\r\n});\r\n"],"sourceRoot":""}