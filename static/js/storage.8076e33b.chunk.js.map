{"version":3,"sources":["storage.js","fs.js"],"names":["__webpack_require__","r","__webpack_exports__","_fs__WEBPACK_IMPORTED_MODULE_0__","fs","create_fs","window","addEventListener","_ref","data","source","method","then","_ref2","files","postMessage","_ref3","clear","importStorage","Promise","resolve","reject","done","frame","document","createElement","contentWindow","src","style","display","body","appendChild","setTimeout","_x","_create_fs","apply","this","arguments","_callee","load","store","_i","_Object$entries","_ref7","_name","_data","_files","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_iterator","_step","_ref6","_ref5","name","C_Projects_diabloweb_diabloweb_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","a","wrap","_context","prev","next","IdbKvStore","Map","t0","Object","json","t1","sent","entries","call","length","C_Projects_diabloweb_diabloweb_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__","set","undefined","Symbol","iterator","value","t2","return","finish","abrupt","update","delete","remove","t3","stop"],"mappings":"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","file":"static/js/storage.8076e33b.chunk.js","sourcesContent":["import create_fs from './fs';\r\n\r\nconst fs = create_fs();\r\nwindow.addEventListener('message', ({data, source}) => {\r\n  if (data.method === 'transfer') {\r\n    fs.then(({files}) => {\r\n      source.postMessage({method: 'storage', files}, '*');\r\n    });\r\n  } else if (data.method === 'clear') {\r\n    fs.then(({clear}) => clear());\r\n  }\r\n});","import IdbKvStore from  'idb-kv-store';\r\n\r\nconst importStorage = () => new Promise((resolve, reject) => {\r\n  let done = false;\r\n  const frame = document.createElement('iframe');\r\n  window.addEventListener('message', ({data}) => {\r\n    if (data.method === 'storage' && !done) {\r\n      done = true;\r\n      resolve(data.files);\r\n      frame.contentWindow.postMessage({method: 'clear'}, '*');\r\n    }\r\n  });\r\n  frame.addEventListener('load', () => {\r\n    frame.contentWindow.postMessage({method: 'transfer'}, '*');\r\n  });\r\n  frame.addEventListener('error', () => {\r\n    if (!done) {\r\n      done = true;\r\n      resolve(null);\r\n    }\r\n  });\r\n  frame.src = \"https://diablo.rivsoft.net/storage.html\";\r\n  frame.style.display = \"none\";\r\n  document.body.appendChild(frame);\r\n  setTimeout(() => {\r\n    if (!done) {\r\n      done = true;\r\n      resolve(null);\r\n    }\r\n  }, 10000);\r\n});\r\n\r\nexport default async function create_fs(load) {\r\n  try {\r\n    const store = new IdbKvStore('diablo_fs');\r\n    const files = new Map();\r\n    for (let [name, data] of Object.entries(await store.json())) {\r\n      files.set(name, data);\r\n    }\r\n    if (load) {\r\n      const files = await importStorage();\r\n      if (files) {\r\n        for (let [name, data] of files) {\r\n          files.set(name, data);\r\n          store.set(name, data);\r\n        }\r\n      }\r\n    }\r\n    return {\r\n      files,\r\n      update: (name, data) => store.set(name, data),\r\n      delete: name => store.remove(name),\r\n      clear: () => store.clear(),\r\n    };\r\n  } catch (e) {\r\n    return {\r\n      files: new Map(),\r\n      update: () => Promise.resolve(),\r\n      delete: () => Promise.resolve(),\r\n      clear: () => Promise.resolve(),\r\n    };\r\n  }  \r\n}\r\n"],"sourceRoot":""}