{"version":3,"sources":["storage.js","fs.js"],"names":["__webpack_require__","r","__webpack_exports__","_fs__WEBPACK_IMPORTED_MODULE_0__","fs","create_fs","window","addEventListener","_ref","data","source","method","then","_ref2","files","postMessage","_ref3","clear","importStorage","Promise","resolve","reject","done","frame","document","createElement","contentWindow","src","style","display","body","appendChild","setTimeout","downloadFile","_callee","store","name","file","blob","url","lnk","C_Projects_diabloweb_diabloweb_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default","a","wrap","_context","prev","next","get","toLowerCase","sent","Blob","type","URL","createObjectURL","setAttribute","click","removeChild","revokeObjectURL","console","error","concat","stop","readFile","reader","FileReader","onload","result","onerror","onabort","readAsArrayBuffer","uploadFile","_callee2","_context2","t0","Uint8Array","t1","set","abrupt","_x6","_create_fs","apply","this","arguments","_callee3","load","_i","_Object$entries","_ref7","_name","_data","_files","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_iterator","_step","_ref6","_ref5","_context3","IdbKvStore","Map","Object","json","entries","call","length","C_Projects_diabloweb_diabloweb_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","undefined","Symbol","iterator","value","t2","return","finish","DownloadFile","update","delete","remove","upload","t3"],"mappings":"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","file":"static/js/storage.447359e6.chunk.js","sourcesContent":["import create_fs from './fs';\r\n\r\nconst fs = create_fs();\r\nwindow.addEventListener('message', ({data, source}) => {\r\n  if (data.method === 'transfer') {\r\n    fs.then(({files}) => {\r\n      source.postMessage({method: 'storage', files}, '*');\r\n    });\r\n  } else if (data.method === 'clear') {\r\n    fs.then(({clear}) => clear());\r\n  }\r\n});","import IdbKvStore from  'idb-kv-store';\r\n\r\nconst importStorage = () => new Promise((resolve, reject) => {\r\n  let done = false;\r\n  const frame = document.createElement('iframe');\r\n  window.addEventListener('message', ({data}) => {\r\n    if (data.method === 'storage' && !done) {\r\n      done = true;\r\n      resolve(data.files);\r\n      frame.contentWindow.postMessage({method: 'clear'}, '*');\r\n    }\r\n  });\r\n  frame.addEventListener('load', () => {\r\n    frame.contentWindow.postMessage({method: 'transfer'}, '*');\r\n  });\r\n  frame.addEventListener('error', () => {\r\n    if (!done) {\r\n      done = true;\r\n      resolve(null);\r\n    }\r\n  });\r\n  frame.src = \"https://diablo.rivsoft.net/storage.html\";\r\n  frame.style.display = \"none\";\r\n  document.body.appendChild(frame);\r\n  setTimeout(() => {\r\n    if (!done) {\r\n      done = true;\r\n      resolve(null);\r\n    }\r\n  }, 10000);\r\n});\r\n\r\nasync function downloadFile(store, name) {\r\n  const file = await store.get(name.toLowerCase());\r\n  if (file) {\r\n    const blob = new Blob([file], {type: 'binary/octet-stream'});\r\n    const url = URL.createObjectURL(blob);\r\n    const lnk = document.createElement('a');\r\n    lnk.setAttribute('href', url);\r\n    lnk.setAttribute('download', name);\r\n    document.body.appendChild(lnk);\r\n    lnk.click();\r\n    document.body.removeChild(lnk);\r\n    URL.revokeObjectURL(url);\r\n  } else {\r\n    console.error(`File ${name} does not exist`);\r\n  }\r\n}\r\n\r\nconst readFile = file => new Promise((resolve, reject) => {\r\n  const reader = new FileReader();\r\n  reader.onload = () => resolve(reader.result);\r\n  reader.onerror = () => reject(reader.error);\r\n  reader.onabort = () => reject();\r\n  reader.readAsArrayBuffer(file);\r\n});\r\nasync function uploadFile(store, files, file) {\r\n  const data = new Uint8Array(await readFile(file));\r\n  files.set(file.name.toLowerCase(), data);\r\n  return store.set(file.name.toLowerCase(), data);\r\n}\r\n\r\nexport default async function create_fs(load) {\r\n  try {\r\n    const store = new IdbKvStore('diablo_fs');\r\n    const files = new Map();\r\n    for (let [name, data] of Object.entries(await store.json())) {\r\n      files.set(name, data);\r\n    }\r\n    if (load) {\r\n      const files = await importStorage();\r\n      if (files) {\r\n        for (let [name, data] of files) {\r\n          files.set(name, data);\r\n          store.set(name, data);\r\n        }\r\n      }\r\n    }\r\n    window.DownloadFile = name => downloadFile(store, name);\r\n    return {\r\n      files,\r\n      update: (name, data) => store.set(name, data),\r\n      delete: name => store.remove(name),\r\n      clear: () => store.clear(),\r\n      upload: file => uploadFile(store, files, file),\r\n    };\r\n  } catch (e) {\r\n    window.DownloadFile = () => console.error('IndexedDB is not supported');\r\n    return {\r\n      files: new Map(),\r\n      update: () => Promise.resolve(),\r\n      delete: () => Promise.resolve(),\r\n      clear: () => Promise.resolve(),\r\n      upload: () => Promise.resolve(),\r\n    };\r\n  }  \r\n}\r\n"],"sourceRoot":""}